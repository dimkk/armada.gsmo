//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.19448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAMRT.Test.Linq {
	using System;
	
	
	public partial class SAMRTDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public SAMRTDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="ConfigurationList")]
		public Microsoft.SharePoint.Linq.EntityList<ConfigurationListBaseConfiguration> ConfigurationList {
			get {
				return this.GetList<ConfigurationListBaseConfiguration>("ConfigurationList");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> Documents {
			get {
				return this.GetList<Документ>("Documents");
			}
		}
		
		/// <summary>
		/// Список для хранения соответствия идентификатора блока на главной странице и набора групп пользователей, которым этот блок недоступен. Используется для регулирования сокрытия кнопок.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="MainMenuDenyList")]
		public Microsoft.SharePoint.Linq.EntityList<MainMenuDenyListЭлемент> MainMenuDenyList {
			get {
				return this.GetList<MainMenuDenyListЭлемент>("MainMenuDenyList");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="News")]
		public Microsoft.SharePoint.Linq.EntityList<Извещение> News {
			get {
				return this.GetList<Извещение>("News");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Report2")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> Report2 {
			get {
				return this.GetList<Элемент>("Report2");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Аварийный жилищный фонд")]
		public Microsoft.SharePoint.Linq.EntityList<АварийныйЖилищныйФондЭлемент> АварийныйЖилищныйФонд {
			get {
				return this.GetList<АварийныйЖилищныйФондЭлемент>("Аварийный жилищный фонд");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Вложения вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> АКВложенияВопросаЗаседания {
			get {
				return this.GetList<Элемент>("АК - Вложения вопроса заседания");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Вложения заседания")]
		public Microsoft.SharePoint.Linq.EntityList<АКВложенияЗаседанияВложениеЗаседания> АКВложенияЗаседания {
			get {
				return this.GetList<АКВложенияЗаседанияВложениеЗаседания>("АК - Вложения заседания");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Вложения отчета по поручению")]
		public Microsoft.SharePoint.Linq.EntityList<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению> АКВложенияОтчетаПоПоручению {
			get {
				return this.GetList<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению>("АК - Вложения отчета по поручению");
			}
		}
		
		/// <summary>
		/// Вопросы
		///заседания Архитектурной комиссии
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntityList<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседания {
			get {
				return this.GetList<АКВопросыЗаседанияВопросПовестки>("АК - Вопросы заседания");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Заседания")]
		public Microsoft.SharePoint.Linq.EntityList<АКЗаседанияЗаседание> АКЗаседания {
			get {
				return this.GetList<АКЗаседанияЗаседание>("АК - Заседания");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> АКОбъектыВопросаЗаседания {
			get {
				return this.GetList<Элемент>("АК - Объекты вопроса заседания");
			}
		}
		
		/// <summary>
		/// Отчеты по поручениям Архитектурной комиссии
		///
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Отчеты по поручению")]
		public Microsoft.SharePoint.Linq.EntityList<АКОтчетыПоПоручениюОтчетПоПоручению> АКОтчетыПоПоручению {
			get {
				return this.GetList<АКОтчетыПоПоручениюОтчетПоПоручению>("АК - Отчеты по поручению");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntityList<АКПорученияПоручение> АКПоручения {
			get {
				return this.GetList<АКПорученияПоручение>("АК - Поручения");
			}
		}
		
		/// <summary>
		/// Эта библиотека служит для хранения файлов, которые находятся на страницах этого сайта, таких как изображения на вики-страницах.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Активы сайта")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> АктивыСайта {
			get {
				return this.GetList<Документ>("Активы сайта");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Аналитические показатели")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> АналитическиеПоказатели {
			get {
				return this.GetList<Элемент>("Аналитические показатели");
			}
		}
		
		/// <summary>
		/// Библиотека стилей служит для хранения таблиц стилей, например файлов CSS или XSL. Таблицы стилей в этой коллекции доступны для данного сайта и его дочерних сайтов.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Библиотека стилей")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> БиблиотекаСтилей {
			get {
				return this.GetList<Документ>("Библиотека стилей");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Виды решения")]
		public Microsoft.SharePoint.Linq.EntityList<ВидыРешенияЭлемент> ВидыРешения {
			get {
				return this.GetList<ВидыРешенияЭлемент>("Виды решения");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Генеральные планы")]
		public Microsoft.SharePoint.Linq.EntityList<ГенеральныеПланыЭлемент> ГенеральныеПланы {
			get {
				return this.GetList<ГенеральныеПланыЭлемент>("Генеральные планы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Генпланы")]
		public Microsoft.SharePoint.Linq.EntityList<ГенпланыЭлемент> Генпланы {
			get {
				return this.GetList<ГенпланыЭлемент>("Генпланы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Градостроительные показатели")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ГрадостроительныеПоказатели {
			get {
				return this.GetList<Элемент>("Градостроительные показатели");
			}
		}
		
		/// <summary>
		/// Территориального планирования
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Документ ТП")]
		public Microsoft.SharePoint.Linq.EntityList<ДокументТПЭлемент> ДокументТП {
			get {
				return this.GetList<ДокументТПЭлемент>("Документ ТП");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Документы")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> Документы {
			get {
				return this.GetList<Документ>("Документы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Документы объекта")]
		public Microsoft.SharePoint.Linq.EntityList<ДокументыОбъектаЭлемент> ДокументыОбъекта {
			get {
				return this.GetList<ДокументыОбъектаЭлемент>("Документы объекта");
			}
		}
		
		/// <summary>
		/// Эта системная библиотека была создана средством "Ресурсы публикации" для хранения документов, используемых данным семейством веб-сайтов.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Документы семейства веб-сайтов")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> ДокументыСемействаВебСайтов {
			get {
				return this.GetList<Документ>("Документы семейства веб-сайтов");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Единицы измерения показателей")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ЕдиницыИзмеренияПоказателей {
			get {
				return this.GetList<Элемент>("Единицы измерения показателей");
			}
		}
		
		/// <summary>
		/// Список задач для рабочего процесса.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Задачи")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> Задачи {
			get {
				return this.GetList<Элемент>("Задачи");
			}
		}
		
		/// <summary>
		/// Эта системная библиотека была создана средством публикации для хранения задач рабочего процесса, созданных на данном сайте.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Задачи рабочего процесса")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ЗадачиРабочегоПроцесса {
			get {
				return this.GetList<Элемент>("Задачи рабочего процесса");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Задачи согласования")]
		public Microsoft.SharePoint.Linq.EntityList<ЗадачиСогласованияЭлемент> ЗадачиСогласования {
			get {
				return this.GetList<ЗадачиСогласованияЭлемент>("Задачи согласования");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Заключения")]
		public Microsoft.SharePoint.Linq.EntityList<ЗаключенияЭлемент> Заключения {
			get {
				return this.GetList<ЗаключенияЭлемент>("Заключения");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Записи журналов поручений")]
		public Microsoft.SharePoint.Linq.EntityList<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения> ЗаписиЖурналовПоручений {
			get {
				return this.GetList<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения>("Записи журналов поручений");
			}
		}
		
		/// <summary>
		/// Эта системная библиотека была создана средством публикации для хранения изображений, используемых на страницах данного сайта.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Изображения")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> Изображения {
			get {
				return this.GetList<Элемент>("Изображения");
			}
		}
		
		/// <summary>
		/// Эта системная библиотека была создана средством "Ресурсы публикации" для хранения изображений, используемых данным семейством веб-сайтов.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Изображения семейства веб-сайтов")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ИзображенияСемействаВебСайтов {
			get {
				return this.GetList<Элемент>("Изображения семейства веб-сайтов");
			}
		}
		
		/// <summary>
		/// Справочник категорий вопросов повестки заседания
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Категории вопросов")]
		public Microsoft.SharePoint.Linq.EntityList<КатегорииВопросовКатегорияВопроса> КатегорииВопросов {
			get {
				return this.GetList<КатегорииВопросовКатегорияВопроса>("Категории вопросов");
			}
		}
		
		/// <summary>
		/// Элементы этого списка содержат код HTML или текст, который может быть вставлен на веб-страницы. Если для элемента выбрано автоматическое обновление, его контент будет вставляться на веб-страницы как ссылка только для чтения и обновляться по мере изменения элемента. Если автоматическое обновление элемента не выбрано, его контент будет вставляться на веб-страницы как копия и не будет обновляться при изменении элемента.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Контент для повторного использования")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> КонтентДляПовторногоИспользования {
			get {
				return this.GetList<Элемент>("Контент для повторного использования");
			}
		}
		
		/// <summary>
		/// Список постоянного хранения для микроканала на личном сайте
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Микроканал")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> Микроканал {
			get {
				return this.GetList<Элемент>("Микроканал");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Муниципальные районы")]
		public Microsoft.SharePoint.Linq.EntityList<МуниципальныеРайоныЭлемент> МуниципальныеРайоны {
			get {
				return this.GetList<МуниципальныеРайоныЭлемент>("Муниципальные районы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Новости")]
		public Microsoft.SharePoint.Linq.EntityList<НовостиРисунок> Новости {
			get {
				return this.GetList<НовостиРисунок>("Новости");
			}
		}
		
		/// <summary>
		/// Мой экземпляр списка
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Нормативная документация")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> НормативнаяДокументация {
			get {
				return this.GetList<Документ>("Нормативная документация");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Обманутые дольщики")]
		public Microsoft.SharePoint.Linq.EntityList<ОбманутыеДольщикиЭлемент> ОбманутыеДольщики {
			get {
				return this.GetList<ОбманутыеДольщикиЭлемент>("Обманутые дольщики");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Объекты")]
		public Microsoft.SharePoint.Linq.EntityList<ОбъектыЭлемент> Объекты {
			get {
				return this.GetList<ОбъектыЭлемент>("Объекты");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Отчет1")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> Отчет1 {
			get {
				return this.GetList<Элемент>("Отчет1");
			}
		}
		
		/// <summary>
		/// Список отчетов служит для настройки запросов, отображаемых в представлениях инструмента "Контент и структура"
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Отчеты о контенте и структуре")]
		public Microsoft.SharePoint.Linq.EntityList<ОтчетыОКонтентеИСтруктуреЭлемент> ОтчетыОКонтентеИСтруктуре {
			get {
				return this.GetList<ОтчетыОКонтентеИСтруктуреЭлемент>("Отчеты о контенте и структуре");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Передаваемое имущество")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ПередаваемоеИмущество {
			get {
				return this.GetList<Элемент>("Передаваемое имущество");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Подгруппы аналитических показателей")]
		public Microsoft.SharePoint.Linq.EntityList<ПодгруппыАналитическихПоказателейЭлемент> ПодгруппыАналитическихПоказателей {
			get {
				return this.GetList<ПодгруппыАналитическихПоказателейЭлемент>("Подгруппы аналитических показателей");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Показатели по вопросу")]
		public Microsoft.SharePoint.Linq.EntityList<ПоказателиПоВопросуЭлемент> ПоказателиПоВопросу {
			get {
				return this.GetList<ПоказателиПоВопросуЭлемент>("Показатели по вопросу");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Поселения")]
		public Microsoft.SharePoint.Linq.EntityList<ПоселенияЭлемент> Поселения {
			get {
				return this.GetList<ПоселенияЭлемент>("Поселения");
			}
		}
		
		/// <summary>
		/// Данные о проектной организации
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Проектная организация")]
		public Microsoft.SharePoint.Linq.EntityList<ПроектнаяОрганизацияЭлемент> ПроектнаяОрганизация {
			get {
				return this.GetList<ПроектнаяОрганизацияЭлемент>("Проектная организация");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Вложения вопроса повестки заседания")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> РГВложенияВопросаПовесткиЗаседания {
			get {
				return this.GetList<Элемент>("РГ - Вложения вопроса повестки заседания");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Вложения заседания")]
		public Microsoft.SharePoint.Linq.EntityList<MeetingAttachmentMVK> РГВложенияЗаседания {
			get {
				return this.GetList<MeetingAttachmentMVK>("РГ - Вложения заседания");
			}
		}
		
		/// <summary>
		/// Вопросы заседания Рабочей группы
		///
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntityList<РГВопросыЗаседанияЭлемент> РГВопросыЗаседания {
			get {
				return this.GetList<РГВопросыЗаседанияЭлемент>("РГ - Вопросы заседания");
			}
		}
		
		/// <summary>
		/// Заседания Рабочей группы
		///
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Заседания")]
		public Microsoft.SharePoint.Linq.EntityList<РГЗаседанияЭлемент> РГЗаседания {
			get {
				return this.GetList<РГЗаседанияЭлемент>("РГ - Заседания");
			}
		}
		
		/// <summary>
		/// Заявки Рабочей группы
		///
		///
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Заявки")]
		public Microsoft.SharePoint.Linq.EntityList<РГЗаявкиЭлемент> РГЗаявки {
			get {
				return this.GetList<РГЗаявкиЭлемент>("РГ - Заявки");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntityList<IssueObjectMVK> РГОбъектыВопросаЗаседания {
			get {
				return this.GetList<IssueObjectMVK>("РГ - Объекты вопроса заседания");
			}
		}
		
		/// <summary>
		/// Поручения Рабочей группы
		///
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntityList<AssignmentMVK> РГПоручения {
			get {
				return this.GetList<AssignmentMVK>("РГ - Поручения");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Связанные вопросы")]
		public Microsoft.SharePoint.Linq.EntityList<СвязанныеВопросыСвязанныйВопрос> СвязанныеВопросы {
			get {
				return this.GetList<СвязанныеВопросыСвязанныйВопрос>("Связанные вопросы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Согласительное совещание")]
		public Microsoft.SharePoint.Linq.EntityList<СогласительноеСовещаниеЭлемент> СогласительноеСовещание {
			get {
				return this.GetList<СогласительноеСовещаниеЭлемент>("Согласительное совещание");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Справочник должностей")]
		public Microsoft.SharePoint.Linq.EntityList<СправочникДолжностейPosition> СправочникДолжностей {
			get {
				return this.GetList<СправочникДолжностейPosition>("Справочник должностей");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Справочник застройщиков")]
		public Microsoft.SharePoint.Linq.EntityList<СправочникЗастройщиковЭлемент> СправочникЗастройщиков {
			get {
				return this.GetList<СправочникЗастройщиковЭлемент>("Справочник застройщиков");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Справочник организаций")]
		public Microsoft.SharePoint.Linq.EntityList<СправочникОрганизацийОрганизация> СправочникОрганизаций {
			get {
				return this.GetList<СправочникОрганизацийОрганизация>("Справочник организаций");
			}
		}
		
		/// <summary>
		/// Справочник участников заседаний
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntityList<СправочникУчастниковУчастник> СправочникУчастников {
			get {
				return this.GetList<СправочникУчастниковУчастник>("Справочник участников");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Статистика")]
		public Microsoft.SharePoint.Linq.EntityList<Документ> Статистика {
			get {
				return this.GetList<Документ>("Статистика");
			}
		}
		
		/// <summary>
		/// Эта системная библиотека была создана средством публикации для хранения страниц, созданных на данном сайте.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Страницы")]
		public Microsoft.SharePoint.Linq.EntityList<Страница> Страницы {
			get {
				return this.GetList<Страница>("Страницы");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Страницы сайта")]
		public Microsoft.SharePoint.Linq.EntityList<ВикиСтраница> СтраницыСайта {
			get {
				return this.GetList<ВикиСтраница>("Страницы сайта");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Суть вопроса")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> СутьВопроса {
			get {
				return this.GetList<Элемент>("Суть вопроса");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Тип объекта")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ТипОбъекта {
			get {
				return this.GetList<Элемент>("Тип объекта");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Типы документов")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ТипыДокументов {
			get {
				return this.GetList<Элемент>("Типы документов");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Типы документов вложений")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ТипыДокументовВложений {
			get {
				return this.GetList<Элемент>("Типы документов вложений");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Типы показателей")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ТипыПоказателей {
			get {
				return this.GetList<Элемент>("Типы показателей");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Типы поручений")]
		public Microsoft.SharePoint.Linq.EntityList<ТипыПорученийТипПоручения> ТипыПоручений {
			get {
				return this.GetList<ТипыПорученийТипПоручения>("Типы поручений");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Типы проектов вопросов повестки")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ТипыПроектовВопросовПовестки {
			get {
				return this.GetList<Элемент>("Типы проектов вопросов повестки");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Фонд ветхого жилья")]
		public Microsoft.SharePoint.Linq.EntityList<ФондВетхогоЖильяЭлемент> ФондВетхогоЖилья {
			get {
				return this.GetList<ФондВетхогоЖильяЭлемент>("Фонд ветхого жилья");
			}
		}
		
		/// <summary>
		/// Фотогалерея хода строительства объекта
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Фотогалерея хода строительства объекта")]
		public Microsoft.SharePoint.Linq.EntityList<ФотогалереяХодаСтроительстваОбъектаРисунок> ФотогалереяХодаСтроительстваОбъекта {
			get {
				return this.GetList<ФотогалереяХодаСтроительстваОбъектаРисунок>("Фотогалерея хода строительства объекта");
			}
		}
		
		/// <summary>
		/// Эта библиотека содержит утвержденные администратором шаблоны форм, активированные в данном семействе веб-сайтов.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Шаблоны форм")]
		public Microsoft.SharePoint.Linq.EntityList<Элемент> ШаблоныФорм {
			get {
				return this.GetList<Элемент>("Шаблоны форм");
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ConfigurationListBaseConfiguration))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Документ))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Папка))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MainMenuDenyListЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Извещение))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Report2ListFieldsContentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АварийныйЖилищныйФондЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКВложенияЗаседанияВложениеЗаседания))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКВопросыЗаседанияВопросПовестки))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКЗаседанияЗаседание))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ОбъектВопроса))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКОтчетыПоПоручениюОтчетПоПоручению))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКПорученияПоручение))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ВидыРешенияЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ГенеральныеПланыЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ГенпланыЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ГрадостроительныеПоказателиListFieldsContentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ГрадостроительныеПоказателиЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ДокументТПЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ДокументыОбъектаЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Задача))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗадачиСогласованияЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗаключенияЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗаписиЖурналовПорученийЗаписьЖурналаПоручения))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(КатегорииВопросовКатегорияВопроса))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(HTMLДляПовторногоИспользования))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ТекстДляПовторногоИспользования))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(МикроканалBase))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(МикроканалPost))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(МикроканалReply))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(МуниципальныеРайоныЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ОбманутыеДольщикиЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ОбъектыЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Отчет1ListFieldsContentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ОтчетыОКонтентеИСтруктуреЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АналитическийПоказатель))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПередаваемоеИмуществоЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПодгруппыАналитическихПоказателейЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПоказателиПоВопросуЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПоселенияЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПроектнаяОрганизацияЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MeetingAttachmentMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IssueMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MeetingMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(OrderMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IssueObjectMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AssignmentMVK))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СвязанныеВопросыСвязанныйВопрос))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СогласительноеСовещаниеЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СправочникДолжностейPosition))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СправочникЗастройщиковЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СправочникОрганизацийОрганизация))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СправочникУчастниковУчастник))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СутьВопросаЭлемент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ТипыПорученийТипПоручения))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ФондВетхогоЖильяЭлемент))]
	public partial class Элемент : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		protected string _название;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Элемент() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_название", Required=true, FieldType="Text")]
		public virtual string Название {
			get {
				return this._название;
			}
			set {
				if ((value != this._название)) {
					this.OnPropertyChanging("Название", this._название);
					this._название = value;
					this.OnPropertyChanged("Название");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Создание документа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Документ", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКВложенияВопросаЗаседанияДокумент))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(МультимедийныйАктив))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Рисунок))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СистемнаяСтраница))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ВикиСтраница))]
	public partial class Документ : Элемент {
		
		private string _имя;
		
		private string _авторИзмененийВДокументе;
		
		private string _создательДокумента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Документ() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_имя", Required=true, FieldType="File")]
		public string Имя {
			get {
				return this._имя;
			}
			set {
				if ((value != this._имя)) {
					this.OnPropertyChanging("Имя", this._имя);
					this._имя = value;
					this.OnPropertyChanged("Имя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_авторИзмененийВДокументе", ReadOnly=true, FieldType="Text")]
		public string АвторИзмененийВДокументе {
			get {
				return this._авторИзмененийВДокументе;
			}
			set {
				if ((value != this._авторИзмененийВДокументе)) {
					this.OnPropertyChanging("АвторИзмененийВДокументе", this._авторИзмененийВДокументе);
					this._авторИзмененийВДокументе = value;
					this.OnPropertyChanged("АвторИзмененийВДокументе");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_создательДокумента", ReadOnly=true, FieldType="Text")]
		public string СоздательДокумента {
			get {
				return this._создательДокумента;
			}
			set {
				if ((value != this._создательДокумента)) {
					this.OnPropertyChanging("СоздательДокумента", this._создательДокумента);
					this._создательДокумента = value;
					this.OnPropertyChanged("СоздательДокумента");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание папки.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Папка", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПапкаКоллекцииДокументов))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СводнаяЗадача))]
	public partial class Папка : Элемент {
		
		private string _имя;
		
		private System.Nullable<int> _числоДочернихЭлементовId;
		
		private string _числоДочернихЭлементовItemChildCount;
		
		private System.Nullable<int> _числоДочернихПапокId;
		
		private string _числоДочернихПапокFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Папка() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_имя", Required=true, FieldType="File")]
		public virtual string Имя {
			get {
				return this._имя;
			}
			set {
				if ((value != this._имя)) {
					this.OnPropertyChanging("Имя", this._имя);
					this._имя = value;
					this.OnPropertyChanged("Имя");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Папка.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Папка.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_числоДочернихЭлементовId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ЧислоДочернихЭлементовId {
			get {
				return this._числоДочернихЭлементовId;
			}
			set {
				if ((value != this._числоДочернихЭлементовId)) {
					this.OnPropertyChanging("ЧислоДочернихЭлементовId", this._числоДочернихЭлементовId);
					this._числоДочернихЭлементовId = value;
					this.OnPropertyChanged("ЧислоДочернихЭлементовId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_числоДочернихЭлементовItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ЧислоДочернихЭлементовItemChildCount {
			get {
				return this._числоДочернихЭлементовItemChildCount;
			}
			set {
				if ((value != this._числоДочернихЭлементовItemChildCount)) {
					this.OnPropertyChanging("ЧислоДочернихЭлементовItemChildCount", this._числоДочернихЭлементовItemChildCount);
					this._числоДочернихЭлементовItemChildCount = value;
					this.OnPropertyChanged("ЧислоДочернихЭлементовItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_числоДочернихПапокId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ЧислоДочернихПапокId {
			get {
				return this._числоДочернихПапокId;
			}
			set {
				if ((value != this._числоДочернихПапокId)) {
					this.OnPropertyChanging("ЧислоДочернихПапокId", this._числоДочернихПапокId);
					this._числоДочернихПапокId = value;
					this.OnPropertyChanged("ЧислоДочернихПапокId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_числоДочернихПапокFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ЧислоДочернихПапокFolderChildCount {
			get {
				return this._числоДочернихПапокFolderChildCount;
			}
			set {
				if ((value != this._числоДочернихПапокFolderChildCount)) {
					this.OnPropertyChanging("ЧислоДочернихПапокFolderChildCount", this._числоДочернихПапокFolderChildCount);
					this._числоДочернихПапокFolderChildCount = value;
					this.OnPropertyChanged("ЧислоДочернихПапокFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание элемента новостей, сведений о состоянии или другого небольшого информационного объекта.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Извещение", Id="0x0104")]
	public partial class Извещение : Элемент {
		
		private string _основнойТекст;
		
		private System.Nullable<System.DateTime> _срокДействия;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Извещение() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_основнойТекст", FieldType="Note")]
		public string ОсновнойТекст {
			get {
				return this._основнойТекст;
			}
			set {
				if ((value != this._основнойТекст)) {
					this.OnPropertyChanging("ОсновнойТекст", this._основнойТекст);
					this._основнойТекст = value;
					this.OnPropertyChanged("ОсновнойТекст");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_срокДействия", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокДействия {
			get {
				return this._срокДействия;
			}
			set {
				if ((value != this._срокДействия)) {
					this.OnPropertyChanging("СрокДействия", this._срокДействия);
					this._срокДействия = value;
					this.OnPropertyChanged("СрокДействия");
				}
			}
		}
	}
	
	/// <summary>
	/// Отслеживание поручения, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Задача", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗадачиЗадача))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗадачиРабочегоПроцессаЗадача))]
	public partial class Задача : Элемент {
		
		private System.Nullable<System.DateTime> _датаНачала;
		
		protected System.Nullable<System.DateTime> _срок;
		
		private System.Nullable<double> _завершения;
		
		private string _основнойТекст;
		
		private System.Nullable<Важность> _важность;
		
		protected System.Nullable<СостояниеЗадачи> _состояниеЗадачи;
		
		private System.Nullable<int> _комуНазначеноId;
		
		private string _комуНазначено;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Задача() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_датаНачала", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаНачала {
			get {
				return this._датаНачала;
			}
			set {
				if ((value != this._датаНачала)) {
					this.OnPropertyChanging("ДатаНачала", this._датаНачала);
					this._датаНачала = value;
					this.OnPropertyChanged("ДатаНачала");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_срок", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_завершения", FieldType="Number")]
		public System.Nullable<double> Завершения {
			get {
				return this._завершения;
			}
			set {
				if ((value != this._завершения)) {
					this.OnPropertyChanging("Завершения", this._завершения);
					this._завершения = value;
					this.OnPropertyChanged("Завершения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_основнойТекст", FieldType="Note")]
		public string ОсновнойТекст {
			get {
				return this._основнойТекст;
			}
			set {
				if ((value != this._основнойТекст)) {
					this.OnPropertyChanging("ОсновнойТекст", this._основнойТекст);
					this._основнойТекст = value;
					this.OnPropertyChanged("ОсновнойТекст");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_важность", FieldType="Choice")]
		public System.Nullable<Важность> Важность {
			get {
				return this._важность;
			}
			set {
				if ((value != this._важность)) {
					this.OnPropertyChanging("Важность", this._важность);
					this._важность = value;
					this.OnPropertyChanged("Важность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_состояниеЗадачи", FieldType="Choice")]
		public virtual System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначеноId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> КомуНазначеноId {
			get {
				return this._комуНазначеноId;
			}
			set {
				if ((value != this._комуНазначеноId)) {
					this.OnPropertyChanging("КомуНазначеноId", this._комуНазначеноId);
					this._комуНазначеноId = value;
					this.OnPropertyChanged("КомуНазначеноId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначено", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string КомуНазначено {
			get {
				return this._комуНазначено;
			}
			set {
				if ((value != this._комуНазначено)) {
					this.OnPropertyChanging("КомуНазначено", this._комуНазначено);
					this._комуНазначено = value;
					this.OnPropertyChanged("КомуНазначено");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание новой папки коллекции документов
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Папка коллекции документов", Id="0x0120D5")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(НаборДокументов))]
	public partial class ПапкаКоллекцииДокументов : Папка {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПапкаКоллекцииДокументов() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Группировка и описание связанных задач, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Сводная задача", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗадачиСводнаяЗадача))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ЗадачиРабочегоПроцессаСводнаяЗадача))]
	public partial class СводнаяЗадача : Папка {
		
		private System.Nullable<double> _завершения;
		
		private string _основнойТекст;
		
		private System.Nullable<System.DateTime> _датаНачала;
		
		protected System.Nullable<System.DateTime> _срок;
		
		private System.Nullable<Важность> _важность;
		
		protected System.Nullable<СостояниеЗадачи> _состояниеЗадачи;
		
		private System.Nullable<int> _комуНазначеноId;
		
		private string _комуНазначено;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СводнаяЗадача() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_завершения", FieldType="Number")]
		public System.Nullable<double> Завершения {
			get {
				return this._завершения;
			}
			set {
				if ((value != this._завершения)) {
					this.OnPropertyChanging("Завершения", this._завершения);
					this._завершения = value;
					this.OnPropertyChanged("Завершения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_основнойТекст", FieldType="Note")]
		public string ОсновнойТекст {
			get {
				return this._основнойТекст;
			}
			set {
				if ((value != this._основнойТекст)) {
					this.OnPropertyChanging("ОсновнойТекст", this._основнойТекст);
					this._основнойТекст = value;
					this.OnPropertyChanged("ОсновнойТекст");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_датаНачала", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаНачала {
			get {
				return this._датаНачала;
			}
			set {
				if ((value != this._датаНачала)) {
					this.OnPropertyChanging("ДатаНачала", this._датаНачала);
					this._датаНачала = value;
					this.OnPropertyChanged("ДатаНачала");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_срок", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_важность", FieldType="Choice")]
		public System.Nullable<Важность> Важность {
			get {
				return this._важность;
			}
			set {
				if ((value != this._важность)) {
					this.OnPropertyChanging("Важность", this._важность);
					this._важность = value;
					this.OnPropertyChanged("Важность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_состояниеЗадачи", FieldType="Choice")]
		public virtual System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначеноId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> КомуНазначеноId {
			get {
				return this._комуНазначеноId;
			}
			set {
				if ((value != this._комуНазначеноId)) {
					this.OnPropertyChanging("КомуНазначеноId", this._комуНазначеноId);
					this._комуНазначеноId = value;
					this.OnPropertyChanged("КомуНазначеноId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначено", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string КомуНазначено {
			get {
				return this._комуНазначено;
			}
			set {
				if ((value != this._комуНазначено)) {
					this.OnPropertyChanging("КомуНазначено", this._комуНазначено);
					this._комуНазначено = value;
					this.OnPropertyChanged("КомуНазначено");
				}
			}
		}
	}
	
	/// <summary>
	/// Отправка изображения или фотографии.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Рисунок", Id="0x010102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(НовостиРисунок))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ФотогалереяХодаСтроительстваОбъектаРисунок))]
	public partial class Рисунок : Документ {
		
		private string _образец;
		
		private string _типФайла;
		
		private string _размерРисунка;
		
		private System.Nullable<int> _ширинаРисунка;
		
		private System.Nullable<int> _высотаРисунка;
		
		private System.Nullable<System.DateTime> _датаСозданияРисунка;
		
		protected string _заметки;
		
		private string _флажокВыбора;
		
		private string _имя0;
		
		private string _обязательноеПоле;
		
		private string _ключевыеСлова;
		
		private string _эскиз;
		
		private string _вебПросмотр;
		
		private string _uRLАдресИзображенияДляПросмотра;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Рисунок() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_образец", FieldType="Computed")]
		public string Образец {
			get {
				return this._образец;
			}
			set {
				if ((value != this._образец)) {
					this.OnPropertyChanging("Образец", this._образец);
					this._образец = value;
					this.OnPropertyChanged("Образец");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileType", Storage="_типФайла", FieldType="Computed")]
		public string ТипФайла {
			get {
				return this._типФайла;
			}
			set {
				if ((value != this._типФайла)) {
					this.OnPropertyChanging("ТипФайла", this._типФайла);
					this._типФайла = value;
					this.OnPropertyChanged("ТипФайла");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_размерРисунка", FieldType="Computed")]
		public string РазмерРисунка {
			get {
				return this._размерРисунка;
			}
			set {
				if ((value != this._размерРисунка)) {
					this.OnPropertyChanging("РазмерРисунка", this._размерРисунка);
					this._размерРисунка = value;
					this.OnPropertyChanged("РазмерРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_ширинаРисунка", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> ШиринаРисунка {
			get {
				return this._ширинаРисунка;
			}
			set {
				if ((value != this._ширинаРисунка)) {
					this.OnPropertyChanging("ШиринаРисунка", this._ширинаРисунка);
					this._ширинаРисунка = value;
					this.OnPropertyChanged("ШиринаРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_высотаРисунка", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> ВысотаРисунка {
			get {
				return this._высотаРисунка;
			}
			set {
				if ((value != this._высотаРисунка)) {
					this.OnPropertyChanging("ВысотаРисунка", this._высотаРисунка);
					this._высотаРисунка = value;
					this.OnPropertyChanged("ВысотаРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_датаСозданияРисунка", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСозданияРисунка {
			get {
				return this._датаСозданияРисунка;
			}
			set {
				if ((value != this._датаСозданияРисунка)) {
					this.OnPropertyChanging("ДатаСозданияРисунка", this._датаСозданияРисунка);
					this._датаСозданияРисунка = value;
					this.OnPropertyChanged("ДатаСозданияРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_заметки", FieldType="Note")]
		public virtual string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SelectedFlag", Storage="_флажокВыбора", ReadOnly=true, FieldType="Computed")]
		public string ФлажокВыбора {
			get {
				return this._флажокВыбора;
			}
			set {
				if ((value != this._флажокВыбора)) {
					this.OnPropertyChanging("ФлажокВыбора", this._флажокВыбора);
					this._флажокВыбора = value;
					this.OnPropertyChanged("ФлажокВыбора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NameOrTitle", Storage="_имя0", ReadOnly=true, FieldType="Computed")]
		public string Имя0 {
			get {
				return this._имя0;
			}
			set {
				if ((value != this._имя0)) {
					this.OnPropertyChanging("Имя0", this._имя0);
					this._имя0 = value;
					this.OnPropertyChanged("Имя0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequiredField", Storage="_обязательноеПоле", ReadOnly=true, FieldType="Computed")]
		public string ОбязательноеПоле {
			get {
				return this._обязательноеПоле;
			}
			set {
				if ((value != this._обязательноеПоле)) {
					this.OnPropertyChanging("ОбязательноеПоле", this._обязательноеПоле);
					this._обязательноеПоле = value;
					this.OnPropertyChanged("ОбязательноеПоле");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_ключевыеСлова", FieldType="Note")]
		public string КлючевыеСлова {
			get {
				return this._ключевыеСлова;
			}
			set {
				if ((value != this._ключевыеСлова)) {
					this.OnPropertyChanging("КлючевыеСлова", this._ключевыеСлова);
					this._ключевыеСлова = value;
					this.OnPropertyChanged("КлючевыеСлова");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Thumbnail", Storage="_эскиз", ReadOnly=true, FieldType="Computed")]
		public string Эскиз {
			get {
				return this._эскиз;
			}
			set {
				if ((value != this._эскиз)) {
					this.OnPropertyChanging("Эскиз", this._эскиз);
					this._эскиз = value;
					this.OnPropertyChanged("Эскиз");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Preview", Storage="_вебПросмотр", ReadOnly=true, FieldType="Computed")]
		public string ВебПросмотр {
			get {
				return this._вебПросмотр;
			}
			set {
				if ((value != this._вебПросмотр)) {
					this.OnPropertyChanging("ВебПросмотр", this._вебПросмотр);
					this._вебПросмотр = value;
					this.OnPropertyChanged("ВебПросмотр");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_uRLАдресИзображенияДляПросмотра", FieldType="Url")]
		public virtual string URLАдресИзображенияДляПросмотра {
			get {
				return this._uRLАдресИзображенияДляПросмотра;
			}
			set {
				if ((value != this._uRLАдресИзображенияДляПросмотра)) {
					this.OnPropertyChanging("URLАдресИзображенияДляПросмотра", this._uRLАдресИзображенияДляПросмотра);
					this._uRLАдресИзображенияДляПросмотра = value;
					this.OnPropertyChanged("URLАдресИзображенияДляПросмотра");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание вики-страницы.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Вики-страница", Id="0x010108")]
	public partial class ВикиСтраница : Документ {
		
		private string _викиКонтент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ВикиСтраница() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_викиКонтент", FieldType="Note")]
		public string ВикиКонтент {
			get {
				return this._викиКонтент;
			}
			set {
				if ((value != this._викиКонтент)) {
					this.OnPropertyChanging("ВикиКонтент", this._викиКонтент);
					this._викиКонтент = value;
					this.OnPropertyChanged("ВикиКонтент");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Вики-страница.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Вики-страница.");
			}
		}
	}
	
	/// <summary>
	/// Создайте набор документов, если необходимо управлять несколькими документами как одним продуктом работы.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Набор документов", Id="0x0120D520")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКВложенияВопросаЗаседанияНаборДокументов))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СистемнаяКоллекцияМультимедиа))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IssueAttachmentMVK))]
	public partial class НаборДокументов : ПапкаКоллекцииДокументов {
		
		private string _описание;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public НаборДокументов() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Описание набора документов
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentSetDescription", Storage="_описание", FieldType="Note")]
		public virtual string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
	}
	
	/// <summary>
	/// Системный тип для коллекции мультимедийных активов.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Системная коллекция мультимедиа", Id="0x0120D520A8")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Видеоматериалы))]
	public partial class СистемнаяКоллекцияМультимедиа : НаборДокументов {
		
		private System.Nullable<bool> _болееНизкиеЗначенияЛучше;
		
		private string _странаИлиРегионДопАдрес;
		
		private string _категории;
		
		private string _описаниеЗаявки;
		
		private string _руководитель;
		
		private string _именаДетей;
		
		private System.Nullable<System.DateTime> _датаИзменения;
		
		private string _организация;
		
		private string _республикаОбластьИлиКрайДомАдрес;
		
		private System.Nullable<System.DateTime> _датаИВремя;
		
		private string _ссылкаНаОтчет;
		
		private string _перерыв;
		
		private string _автор;
		
		private string _поздняяНочь;
		
		private string _окончание;
		
		private string _нетНаМестеЛичное;
		
		private string _описание0;
		
		private System.Nullable<bool> _скрытаяСтраница;
		
		private System.Nullable<bool> _маршрутКВнешнемуРасположению;
		
		private string _отображаемоеИмя;
		
		private string _форматированноеПредупреждениеИндикатора;
		
		private System.Nullable<int> _сводныйСчетчикОценок;
		
		private string _имяКонтакта;
		
		private string _основнойТелефон;
		
		private string _праздник;
		
		private string _конечнаяПапка;
		
		private string _макетСтраницы;
		
		private string _полноеИмя;
		
		private string _описание1;
		
		private string _uRLАдресЗначка;
		
		private string _описаниеОтчета;
		
		private System.Nullable<int> _иД;
		
		private System.Nullable<bool> _включена;
		
		private string _мобильныйКонтент;
		
		private string _вЗависимостиОтНастраиваемогоПараметра;
		
		private string _профессия;
		
		private string _описание2;
		
		private System.Nullable<double> _оценкаРепутации;
		
		private string _кодОрганизации;
		
		private string _цепочкиОбсуждения;
		
		private string _заметка2;
		
		private string _номерЗаседания;
		
		private System.Nullable<bool> _процентноеВыражение;
		
		private string _совместимыеУправляемыеСвойства;
		
		private string _описание3;
		
		private string _контент;
		
		private string _заметка3;
		
		private System.Nullable<bool> _нерабочийДень;
		
		private System.Nullable<bool> _вЗависимостиОтПравПользователя;
		
		private string _важность;
		
		private string _авторскиеПрава;
		
		private string _ячейкаПредупреждения;
		
		private string _кемРазмещено;
		
		private System.Nullable<int> _ширинаКадра;
		
		private string _cообщениеПолеКому;
		
		private string _результат;
		
		private string _идентификаторШаблона;
		
		private string _относительныйURLАдресФормы;
		
		private System.Nullable<int> _идентификаторПользователя;
		
		private string _заметка1;
		
		private System.Nullable<bool> _обратныйВызов;
		
		private string _сопоставленияУправляемыхСвойств;
		
		private System.Nullable<double> _значениеИндикатора;
		
		private string _имяРодительскогоОтчета;
		
		private System.Nullable<bool> _скрыватьФизическийURLАдресВРезультатахПоиска;
		
		private string _ответственноеЛицо;
		
		private System.Nullable<System.DateTime> _времяОтправки;
		
		private System.Nullable<System.DateTime> _датаСозданияРисунка;
		
		private string _идентификаторЦелевогоШаблонаСписка;
		
		private System.Nullable<System.DateTime> _деньРождения;
		
		private string _вебПросмотр;
		
		private string _ссылкаДляЗагрузки;
		
		private string _имя0;
		
		private System.Nullable<bool> _цельИзКниги;
		
		private string _рабочийТелефон;
		
		private string _тема;
		
		private string _отчество;
		
		private string _заголовокБраузера;
		
		private string _iSDN;
		
		private string _просмотрЭскизов;
		
		private string _версия;
		
		private System.Nullable<int> _отправитьСериюКалендаря;
		
		private string _примечанияИндикатора;
		
		private string _ссылкаНаПодробности;
		
		private System.Nullable<int> _состояниеУчастника;
		
		private System.Nullable<System.DateTime> _годовщина;
		
		private string _основнойТекст;
		
		private string _учетнаяЗапись;
		
		private string _источникДанных;
		
		private System.Nullable<bool> _домойИзМестнойКомандировки;
		
		private System.Nullable<int> _скоростьПотока;
		
		private string _внешнийУчастник;
		
		private System.Nullable<System.DateTime> _объявленнаяЗапись;
		
		private string _расположение;
		
		private string _телефонПомощника;
		
		private string _авторИзменений;
		
		private System.Nullable<System.DateTime> _датаСобытия;
		
		private System.Nullable<int> _высотаРисунка;
		
		private System.Nullable<System.DateTime> _времяОтправки0;
		
		private System.Nullable<bool> _сохранитьВЖурналеОтчета;
		
		private System.Nullable<double> _автоматическоеОпределениеШага;
		
		private System.Nullable<double> _состояниеИндикатора;
		
		private string _название0;
		
		private System.Nullable<bool> _завершено;
		
		private System.Nullable<int> _длительностьС;
		
		private System.Nullable<int> _идентификаторРодительскогоЭлемента;
		
		private string _эскиз;
		
		private string _рабТелефон2;
		
		private System.Nullable<System.DateTime> _времяЭкспорта;
		
		private string _телекс;
		
		private string _wSPublishError;
		
		private string _допПоле3;
		
		private string _тема0;
		
		private System.Nullable<double> _завершения;
		
		private string _xSLФайлПрограммыОбходчика;
		
		private string _улицаДомАдрес;
		
		private string _текстДляПовторногоИспользования;
		
		private string _ссылкаСписка;
		
		private System.Nullable<System.DateTime> _отчетИзменен;
		
		private string _тема1;
		
		private string _описание4;
		
		private string _информация;
		
		private string _заметки;
		
		private string _обязательноеПоле;
		
		private string _настраиваемыйМаршрутизатор;
		
		private string _адресЭлектроннойПочты;
		
		private string _тип;
		
		private string _описание5;
		
		private string _имяПомощника;
		
		private string _инвестор;
		
		private string _категорияФормы;
		
		private string _радиотелефон;
		
		private string _отображать;
		
		private string _ключевыеСлова;
		
		private string _службыСоСбоями;
		
		private string _должность;
		
		private string _описание6;
		
		private System.Nullable<bool> _разрешитьАвторамПросматриватьКэшированныйКонтент;
		
		private System.Nullable<System.DateTime> _датаОкончания;
		
		private string _сопровождающиеЗаметки;
		
		private string _описание7;
		
		private string _связанныйКонтент;
		
		private string _отдел;
		
		private string _отношение;
		
		private string _версия0;
		
		private string _индекс;
		
		private string _описание8;
		
		private System.Nullable<bool> _повторение;
		
		private System.Nullable<System.DateTime> _обновлено;
		
		private string _городДомАдрес;
		
		private string _номерДляОбратногоВызова;
		
		private string _идентификаторВопроса;
		
		private string _домашнийФакс;
		
		private System.Nullable<int> _количествоДнейНаРешение;
		
		private string _папкаОтображения;
		
		private string _имяПереводчика;
		
		private string _cSSФайлПоУмолчанию;
		
		private System.Nullable<System.DateTime> _самоеПоследнееОбновлениеДанныхИндикатора;
		
		private System.Nullable<double> _ответов;
		
		private System.Nullable<double> _общиеТрудозатраты;
		
		private string _отображаемоеИмя0;
		
		private System.Nullable<bool> _активно;
		
		private System.Nullable<System.DateTime> _срокДействия;
		
		private string _описаниеФормы;
		
		private string _адресSIP;
		
		private string _домТелефон2;
		
		private System.Nullable<bool> _автоматическоеИсправление;
		
		private System.Nullable<bool> _изДомаВМестнуюКомандировку;
		
		private string _языкМашинногоПеревода;
		
		private string _идентификаторРесурса;
		
		private string _комментарий;
		
		private string _картинкаКонтакта;
		
		private string _cообщениеПолеОт;
		
		private string _описаниеВложения;
		
		private System.Nullable<bool> _wSEnabled;
		
		private System.Nullable<bool> _включенаЛиФункцияПереводаСУчастиемЧеловека;
		
		private string _вЗависимостиОтПараметровСтрокиЗапроса;
		
		private string _имяПереводчика0;
		
		private string _uRLАдрес;
		
		private string _отправитьИдентификаторUIDКалендаря;
		
		private System.Nullable<bool> _включена0;
		
		private string _языкПеревода;
		
		private string _wSEventSource;
		
		private string _mETAСАтрибутомKeywords;
		
		private string _ячейкаЦели;
		
		private string _адресДляВыставленияСчетов;
		
		private string _начало;
		
		private System.Nullable<bool> _имеетКопии;
		
		private string _просмотрРисунка;
		
		private string _фамилияПроизношение;
		
		private string _источникКопии;
		
		private string _имя1;
		
		private string _uRLАдресПеренаправления;
		
		private string _листЦели;
		
		private string _адресFTP;
		
		private string _кадастровыйНомер;
		
		private System.Nullable<System.DateTime> _времяВыполненияЗадания;
		
		private string _ответственныйИсполнитель;
		
		private System.Nullable<System.Guid> _родительскийЭкземплярЖурналаРабочихПроцессов;
		
		private string _типРесурса;
		
		private System.Nullable<System.DateTime> _датаОбработки;
		
		private System.Nullable<bool> _дСП;
		
		private string _выражениеДляЗначения;
		
		private System.Nullable<System.Guid> _идентификаторПакета;
		
		private string _листПредупреждения;
		
		private System.Nullable<bool> _уведомление;
		
		private string _пейджер;
		
		private string _имяФормы;
		
		private string _идентификаторФормы;
		
		private string _настройкаПравила;
		
		private string _рисунок;
		
		private string _увлечения;
		
		private string _зависимыйСрок;
		
		private string _корреспондент;
		
		private string _решениеПоВопросу;
		
		private string _имя2;
		
		private string _состояние;
		
		private string _отображатьОписание;
		
		private string _ячейкаЗначения;
		
		private string _версияФормы;
		
		private System.Nullable<bool> _проверятьНаИзменения;
		
		private string _uRLАдрес0;
		
		private string _отчетИзменен0;
		
		private System.Nullable<double> _фактическиеТрудозатраты;
		
		private string _запись;
		
		private string _описание9;
		
		private System.Nullable<System.Guid> _wSGUID;
		
		private System.Nullable<int> _типГруппы;
		
		private string _город;
		
		private System.Nullable<System.DateTime> _опубликовано;
		
		private System.Nullable<System.Guid> _идентификаторСопоставленияРабочегоПроцесса;
		
		private string _тема2;
		
		private string _сообщение;
		
		private System.Nullable<double> _значениеПоНормативу;
		
		private string _основнойТелефонОрганизации;
		
		private System.Nullable<int> _обсуждения;
		
		private string _странаИлиРегион;
		
		private string _uRLАдрес1;
		
		private string _инициалы;
		
		private System.Nullable<System.DateTime> _срокИсполненияПоручения;
		
		private string _обоМне;
		
		private System.Nullable<bool> _скрытое;
		
		private string _имя3;
		
		private System.Nullable<double> _лучшиеОтветы;
		
		private string _организацияПроизношение;
		
		private string _требуемыеПоля;
		
		private string _заметки0;
		
		private System.Nullable<System.Guid> _идентификаторСписка;
		
		private string _сверхурочные;
		
		private string _термины;
		
		private string _wSDescription;
		
		private System.Nullable<System.DateTime> _датаНачала;
		
		private string _адрес;
		
		private string _местоПроведенияЗаседания;
		
		private string _городДопАдрес;
		
		private string _дочерняяОрганизация;
		
		private string _номерПоручения;
		
		private string _настраиваемыйИдентификатор;
		
		private System.Nullable<bool> _сканКопияПротокола;
		
		private string _адресЭлектроннойПочтыКонтакта;
		
		private System.Nullable<bool> _показатьСсылкуДляЗагрузки;
		
		private System.Nullable<bool> _автоматическоеОбновление;
		
		private string _wSDisplayName;
		
		private System.Nullable<double> _числоЭлементов;
		
		private string _данные;
		
		private string _другойТелефон;
		
		private string _сетевоеИмяКомпьютера;
		
		private string _редакция;
		
		private string _отчетСоздан;
		
		private System.Nullable<bool> _вопрос;
		
		private string _расположение0;
		
		private System.Nullable<bool> _показыватьВРаскрывающемсяМеню;
		
		private System.Nullable<System.DateTime> _датаПроведения;
		
		private System.Nullable<double> _размерЗаданияЭкспорта;
		
		private System.Nullable<bool> _выполнятьПроверкуACL;
		
		private string _уход;
		
		private System.Nullable<bool> _разрешитьИзменение;
		
		private string _языкФормы;
		
		private System.Nullable<double> _порогПредупрежденияИндикатора;
		
		private string _допПоле2;
		
		private System.Nullable<System.Guid> _идентификаторШаблонаРабочегоПроцесса;
		
		private System.Nullable<int> _сводныйСчетчикОценокНравится;
		
		private System.Nullable<bool> _предупреждениеИзКниги;
		
		private string _фотографияКонтакта;
		
		private string _суффикс;
		
		private System.Nullable<int> _номерВопроса;
		
		private System.Nullable<int> _wSPublishState;
		
		private string _ошибки;
		
		private string _позднийПриход;
		
		private string _размерФайла;
		
		private System.Nullable<bool> _показыватьВКаталоге;
		
		private string _причинаВнешнегоУчастника;
		
		private System.Nullable<System.DateTime> _датаПоследнейЗаписи;
		
		private System.Nullable<System.DateTime> _датаВыполнения;
		
		private string _телефонВМашине;
		
		private string _имяПроизношение;
		
		private string _указанВСсылкеИз;
		
		private string _серверыСоСбоями;
		
		private string _изменить;
		
		private string _способУстранения;
		
		private System.Nullable<bool> _активный;
		
		private System.Nullable<System.DateTime> _окончание0;
		
		private string _образец;
		
		private System.Nullable<double> _длительность;
		
		private string _изображение;
		
		private string _идентификаторСтиляПредставления;
		
		private System.Nullable<double> _порогЦелиИндикатора;
		
		private string _свойстваИспользуемыеВУсловиях;
		
		private string _имяПравила;
		
		private string _опубликовавший;
		
		private string _uRLАдресИзображенияДляПросмотра;
		
		private string _gUIDПредставления;
		
		private System.Nullable<bool> _включенаЛиФункцияМашинногоПеревода;
		
		private string _имя4;
		
		private string _ошибкаОбновления;
		
		private System.Nullable<bool> _являетсяАдминистраторомСайта;
		
		private string _конечнаяБиблиотека;
		
		private string _расположение1;
		
		private System.Nullable<double> _размерЗаданияОтправки;
		
		private string _викиКонтент;
		
		private string _дополнительныйФакс;
		
		private string _темаСообщения;
		
		private System.Nullable<System.Guid> _wSEventSourceGUID;
		
		private string _wSEventContextKeys;
		
		private string _размерРисунка;
		
		private System.Nullable<bool> _обработано;
		
		private System.Nullable<System.DateTime> _начало0;
		
		private string _текстПоручения;
		
		private string _версия1;
		
		private System.Nullable<int> _идентификаторЛучшегоОтвета;
		
		private string _свойствоДляАвтоматическогоСозданияПапки;
		
		private System.Nullable<System.DateTime> _отправитьМеткуДатыКалендаря;
		
		private string _республикаОбластьИлиКрайДопАдрес;
		
		private System.Nullable<int> _высотаКадра;
		
		private string _элПочта3;
		
		private System.Nullable<System.DateTime> _дата;
		
		private string _областьДействия;
		
		private System.Nullable<System.DateTime> _датаЗавершения;
		
		private string _типЗависимостиПланируемойДаты;
		
		private System.Nullable<System.DateTime> _срок;
		
		private string _улицаДопАдрес;
		
		private string _подпись;
		
		private string _дата0;
		
		private string _заметки1;
		
		private System.Nullable<double> _длительность0;
		
		private string _тема3;
		
		private string _измененнаяСсылкаНаОтчет;
		
		private System.Nullable<double> _числоОтветовДоСледующегоУровня;
		
		private System.Nullable<bool> _показатьСсылкуДляВнедрения;
		
		private System.Nullable<System.DateTime> _изменено;
		
		private string _индексДомАдрес;
		
		private System.Nullable<System.DateTime> _когдаПоследнийРазНапечатан;
		
		private string _темаОбсуждения;
		
		private System.Nullable<double> _идентификаторРодительскогоЭлемента0;
		
		private string _название1;
		
		private System.Nullable<System.DateTime> _последнееДействие;
		
		private string _wSEventType;
		
		private string _номерФакса;
		
		private string _элПочта2;
		
		private string _автор0;
		
		private string _личныйИдентификатор;
		
		private string _флажокВыбора;
		
		private string _допПоле4;
		
		private System.Nullable<System.DateTime> _создано;
		
		private string _мобильныйТелефон;
		
		private string _названиеРабочегоПроцесса;
		
		private string _значок;
		
		private string _управлениеПравами;
		
		private System.Nullable<System.DateTime> _дата1;
		
		private string _категория;
		
		private string _примечание;
		
		private string _имяФормы0;
		
		private string _отдел0;
		
		private System.Nullable<int> _идентификаторПервичногоЭлемента;
		
		private string _языкПереводаСУчастиемЧеловека;
		
		private string _вебСтраница;
		
		private string _типКонтентаОтправки;
		
		private string _сайт;
		
		private string _республикаОбластьИлиКрай;
		
		private string _подтверждения;
		
		private string _рабочиеЧасы;
		
		private string _uRLАдрес2;
		
		private string _имя5;
		
		private System.Nullable<System.DateTime> _фактическийСрокИсполненияПоручения;
		
		private string _возврат;
		
		private string _псевдоним;
		
		private System.Nullable<bool> _связанныйФайл;
		
		private string _странаИлиРегионДомАдрес;
		
		private System.Nullable<int> _подномерВопроса;
		
		private string _личныйВебСайт;
		
		private string _серьезность;
		
		private string _адресСобытия;
		
		private string _значение;
		
		private string _индикатор;
		
		private string _источник;
		
		private System.Nullable<bool> _скрытьОтПоисковыхСистемВИнтернете;
		
		private string _формат;
		
		private string _день;
		
		private string _супругАИлиСожитель;
		
		private System.Nullable<System.DateTime> _срокДействия0;
		
		private System.Nullable<bool> _удален;
		
		private System.Nullable<System.DateTime> _датаСоздания;
		
		private System.Nullable<System.DateTime> _отчетСоздан0;
		
		private string _uRLАдресПредварительногоПросмотра;
		
		private string _ответ;
		
		private string _mETAСАтрибутомDescription;
		
		private string _целеваяОбласть;
		
		private System.Nullable<bool> _безопасноДляИспользованияСПроверкойПодлинности;
		
		private string _форматированноеЗначениеИндикатора;
		
		private System.Nullable<System.DateTime> _датаСтатьи;
		
		private string _домашнийТелефон;
		
		private string _сверхурочныеВПраздник;
		
		private System.Nullable<bool> _включитьДочерниеИндикаторы;
		
		private string _описание10;
		
		private string _объяснение;
		
		private System.Nullable<bool> _автоматическоеОбновление0;
		
		private string _папкаОтображения0;
		
		private string _uRLАдрес3;
		
		private System.Nullable<int> _ответов0;
		
		private System.Nullable<bool> _скрытыйШаблон;
		
		private System.Nullable<double> _популярность;
		
		private System.Nullable<double> _обсуждения0;
		
		private string _мобильныйТелефон0;
		
		private string _картинкаКатегории;
		
		private string _телетайпИлиТекстовыйТелефон;
		
		private string _роль;
		
		private string _расстояние;
		
		private System.Nullable<double> _количествоПродлений;
		
		private System.Nullable<System.DateTime> _времяОкончания;
		
		private string _типФайла;
		
		private string _листЗначения;
		
		private string _заголовкиЭлектроннойПочты;
		
		private string _cообщениеПолеКопия;
		
		private string _форматированнаяЦельИндикатора;
		
		private System.Nullable<bool> _вложения;
		
		private System.Nullable<bool> _целыйДень;
		
		private string _журнал;
		
		private string _допПоле1;
		
		private string _псевдонимы;
		
		private string _адрес0;
		
		private System.Nullable<bool> _скрытый;
		
		private string _мгнСообщения;
		
		private string _конечныйПуть;
		
		private System.Nullable<bool> _популярноеОбсуждение;
		
		private string _индексДопАдрес;
		
		private System.Nullable<bool> _рабочаяОбласть;
		
		private System.Nullable<int> _ширинаРисунка;
		
		private string _результат0;
		
		private string _отправительСообщения;
		
		private string _переведенныеЭлементы;
		
		private string _категория0;
		
		private string _список;
		
		private string _вЗависимостиОтЗаголовкаHTTP;
		
		private string _раннийУход;
		
		private string _кемСоздан;
		
		private System.Nullable<СостояниеПеревода> _состояниеПеревода;
		
		private System.Nullable<СостояниеКонтроляПоручения> _состояниеКонтроляПоручения;
		
		private System.Nullable<ЦельUDC> _цельUDC;
		
		private System.Nullable<СтатусПоручения> _статусПоручения;
		
		private System.Nullable<Важность> _важность0;
		
		private System.Nullable<ТипСписка> _типСписка;
		
		private System.Nullable<ТипПеревода> _типПеревода;
		
		private string _состояние0;
		
		private System.Nullable<СовместимыеВерсииИП> _совместимыеВерсииИП;
		
		private System.Nullable<ДлительностьОтпуска> _длительностьОтпуска;
		
		private System.Nullable<Категория> _категория1;
		
		private System.Nullable<СостояниеВопроса> _состояниеВопроса;
		
		private System.Nullable<Состояние0> _состояние1;
		
		private System.Nullable<КонечнаяВебЧасть> _конечнаяВебЧасть;
		
		private System.Nullable<ЦелевойТипЭлементаУправления> _целевойТипЭлементаУправления;
		
		private System.Nullable<ТипОтпуска> _типОтпуска;
		
		private System.Nullable<УровеньШаблона> _уровеньШаблона;
		
		private System.Nullable<Пол> _пол;
		
		private System.Nullable<Состояние1> _состояние2;
		
		private System.Nullable<ТипПодключения> _типПодключения;
		
		private System.Nullable<ЦелевойТипЭлементаУправленияПоиск> _целевойТипЭлементаУправленияПоиск;
		
		private System.Nullable<КатегорияКонтента> _категорияКонтента;
		
		private System.Nullable<СостояниеОтчета> _состояниеОтчета;
		
		private System.Nullable<Ответ> _ответ0;
		
		private System.Nullable<ТипДней> _типДней;
		
		private System.Nullable<Расписание> _расписание;
		
		private System.Nullable<КатегорияОтчета> _категорияОтчета;
		
		private System.Nullable<СовместимыеТипыДанныхДляПоиска> _совместимыеТипыДанныхДляПоиска;
		
		private System.Nullable<Автономно> _автономно;
		
		private System.Nullable<Статус> _статус;
		
		private System.Nullable<ВозможностьКэширования> _возможностьКэширования;
		
		private System.Nullable<СостояниеЗадачи> _состояниеЗадачи;
		
		private System.Nullable<Серьезность> _серьезность0;
		
		private System.Nullable<Область> _область;
		
		private string _категория2;
		
		private System.Nullable<СостояниеПеревода0> _состояниеПеревода0;
		
		private string _язык;
		
		private string _категория3;
		
		private System.Nullable<ХарактеристикаОтклоненияОтНорматива> _характеристикаОтклоненияОтНорматива;
		
		private System.Nullable<ЧастьРечи> _частьРечи;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _докладчик;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопрос0;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _исполнитель;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопрос1;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент> _заседание;
		
		private System.Nullable<int> _кемСозданоПриложениеId;
		
		private string _кемСозданоПриложениеTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _содокладчики;
		
		private System.Nullable<int> _кемСозданId;
		
		private string _кемСоздан0;
		
		private System.Nullable<int> _комуНазначеноId;
		
		private string _комуНазначено;
		
		private System.Nullable<int> _исходноеНазваниеПреобразованныйДокументId;
		
		private string _исходноеНазваниеПреобразованныйДокументParentLeafName;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _категорияId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _категорияTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент> _проектировщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопросПовестки;
		
		private System.Nullable<int> _кемСозданоId;
		
		private string _кемСоздано;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _соисполнители;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект;
		
		private System.Nullable<int> _кемРазмещеноId;
		
		private string _кемРазмещеноTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _единицаИзмерения;
		
		private Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент> _видРешения;
		
		private System.Nullable<int> _заметкиКВозвратуId;
		
		private string _заметкиКВозвратуCheckinComment;
		
		private System.Nullable<int> _кемОбработаноId;
		
		private string _кемОбработано;
		
		private System.Nullable<int> _владелецId;
		
		private string _владелецNameWithPictureAndDetails;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопрос2;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _авторЗаявки;
		
		private System.Nullable<int> _авторПоследнегоОтветаId;
		
		private string _авторПоследнегоОтвета;
		
		private System.Nullable<int> _группаЗадачId;
		
		private string _группаЗадач;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private System.Nullable<int> _подареннаяЭмблемаId;
		
		private string _подареннаяЭмблемаTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _организацияИсполнителя;
		
		private System.Nullable<int> _экспортирующийПользовательId;
		
		private string _экспортирующийПользователь;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _получателиId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _получателиImnName;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _людиНаВидеоId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _людиНаВидеоImnName;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _участникиId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _участникиImnName;
		
		private System.Nullable<int> _кемИзмененоId;
		
		private string _кемИзмененоNameWithPicture;
		
		private System.Nullable<int> _участникId;
		
		private string _участникNameWithPictureAndDetails;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition> _должностьИсполнителя;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект0;
		
		private System.Nullable<int> _авторИзмененийId;
		
		private string _авторИзменений0;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект1;
		
		private System.Nullable<int> _отправляющийПользовательId;
		
		private string _отправляющийПользователь;
		
		private System.Nullable<int> _редакторРодительскогоЭлементаId;
		
		private string _редакторРодительскогоЭлемента;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаявкиЭлемент> _заявка;
		
		private System.Nullable<int> _кемИзмененоId0;
		
		private string _кемИзменено;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _контролерПоручения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _застройщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения> _типПоручения;
		
		private System.Nullable<int> _владелецId0;
		
		private string _владелец;
		
		private System.Nullable<int> _контактId;
		
		private string _контакт;
		
		private System.Nullable<int> _авторПоследнейЗаписиId;
		
		private string _авторПоследнейЗаписи;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент> _заседание0;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПодгруппыАналитическихПоказателейЭлемент> _подгруппа;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		private System.Nullable<int> _категорияId0;
		
		private string _категорияTitle0;
		
		private System.Nullable<int> _кемИзмененоПриложениеId;
		
		private string _кемИзмененоПриложениеTitle;
		
		private System.Nullable<int> _исходнаяВерсияПреобразованныйДокументId;
		
		private string _исходнаяВерсияПреобразованныйДокументParentVersionString;
		
		private System.Nullable<int> _имяПользователяId;
		
		private string _имяПользователя;
		
		private System.Nullable<int> _созданоId;
		
		private string _созданоTimeCreated;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СистемнаяКоллекцияМультимедиа() {
			this._докладчик = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._докладчик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnДокладчикSync);
			this._докладчик.OnChanged += new System.EventHandler(this.OnДокладчикChanged);
			this._докладчик.OnChanging += new System.EventHandler(this.OnДокладчикChanging);
			this._вопрос0 = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопрос0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопрос0Sync);
			this._вопрос0.OnChanged += new System.EventHandler(this.OnВопрос0Changed);
			this._вопрос0.OnChanging += new System.EventHandler(this.OnВопрос0Changing);
			this._исполнитель = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._исполнитель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnИсполнительSync);
			this._исполнитель.OnChanged += new System.EventHandler(this.OnИсполнительChanged);
			this._исполнитель.OnChanging += new System.EventHandler(this.OnИсполнительChanging);
			this._вопрос1 = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопрос1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопрос1Sync);
			this._вопрос1.OnChanged += new System.EventHandler(this.OnВопрос1Changed);
			this._вопрос1.OnChanging += new System.EventHandler(this.OnВопрос1Changing);
			this._заседание = new Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент>();
			this._заседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент>>(this.OnЗаседаниеSync);
			this._заседание.OnChanged += new System.EventHandler(this.OnЗаседаниеChanged);
			this._заседание.OnChanging += new System.EventHandler(this.OnЗаседаниеChanging);
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this._содокладчики = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._содокладчики.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСодокладчикиSync);
			this._содокладчики.OnChanged += new System.EventHandler(this.OnСодокладчикиChanged);
			this._содокладчики.OnChanging += new System.EventHandler(this.OnСодокладчикиChanging);
			this._категорияId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._категорияId.OnChanged += new System.EventHandler(this.OnКатегорияIdChanged);
			this._категорияId.OnChanging += new System.EventHandler(this.OnКатегорияIdChanging);
			this._категорияTitle = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._категорияTitle.OnChanged += new System.EventHandler(this.OnКатегорияTitleChanged);
			this._категорияTitle.OnChanging += new System.EventHandler(this.OnКатегорияTitleChanging);
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this._проектировщик = new Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент>();
			this._проектировщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент>>(this.OnПроектировщикSync);
			this._проектировщик.OnChanged += new System.EventHandler(this.OnПроектировщикChanged);
			this._проектировщик.OnChanging += new System.EventHandler(this.OnПроектировщикChanging);
			this._вопросПовестки = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопросПовесткиSync);
			this._вопросПовестки.OnChanged += new System.EventHandler(this.OnВопросПовесткиChanged);
			this._вопросПовестки.OnChanging += new System.EventHandler(this.OnВопросПовесткиChanging);
			this._соисполнители = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._соисполнители.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСоисполнителиSync);
			this._соисполнители.OnChanged += new System.EventHandler(this.OnСоисполнителиChanged);
			this._соисполнители.OnChanging += new System.EventHandler(this.OnСоисполнителиChanging);
			this._объект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектSync);
			this._объект.OnChanged += new System.EventHandler(this.OnОбъектChanged);
			this._объект.OnChanging += new System.EventHandler(this.OnОбъектChanging);
			this._единицаИзмерения = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._единицаИзмерения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnЕдиницаИзмеренияSync);
			this._единицаИзмерения.OnChanged += new System.EventHandler(this.OnЕдиницаИзмеренияChanged);
			this._единицаИзмерения.OnChanging += new System.EventHandler(this.OnЕдиницаИзмеренияChanging);
			this._видРешения = new Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент>();
			this._видРешения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент>>(this.OnВидРешенияSync);
			this._видРешения.OnChanged += new System.EventHandler(this.OnВидРешенияChanged);
			this._видРешения.OnChanging += new System.EventHandler(this.OnВидРешенияChanging);
			this._вопрос2 = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопрос2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопрос2Sync);
			this._вопрос2.OnChanged += new System.EventHandler(this.OnВопрос2Changed);
			this._вопрос2.OnChanging += new System.EventHandler(this.OnВопрос2Changing);
			this._авторЗаявки = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._авторЗаявки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnАвторЗаявкиSync);
			this._авторЗаявки.OnChanged += new System.EventHandler(this.OnАвторЗаявкиChanged);
			this._авторЗаявки.OnChanging += new System.EventHandler(this.OnАвторЗаявкиChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._организацияИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._организацияИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnОрганизацияИсполнителяSync);
			this._организацияИсполнителя.OnChanged += new System.EventHandler(this.OnОрганизацияИсполнителяChanged);
			this._организацияИсполнителя.OnChanging += new System.EventHandler(this.OnОрганизацияИсполнителяChanging);
			this._получателиId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._получателиId.OnChanged += new System.EventHandler(this.OnПолучателиIdChanged);
			this._получателиId.OnChanging += new System.EventHandler(this.OnПолучателиIdChanging);
			this._получателиImnName = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._получателиImnName.OnChanged += new System.EventHandler(this.OnПолучателиImnNameChanged);
			this._получателиImnName.OnChanging += new System.EventHandler(this.OnПолучателиImnNameChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._людиНаВидеоId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._людиНаВидеоId.OnChanged += new System.EventHandler(this.OnЛюдиНаВидеоIdChanged);
			this._людиНаВидеоId.OnChanging += new System.EventHandler(this.OnЛюдиНаВидеоIdChanging);
			this._людиНаВидеоImnName = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._людиНаВидеоImnName.OnChanged += new System.EventHandler(this.OnЛюдиНаВидеоImnNameChanged);
			this._людиНаВидеоImnName.OnChanging += new System.EventHandler(this.OnЛюдиНаВидеоImnNameChanging);
			this._участникиId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._участникиId.OnChanged += new System.EventHandler(this.OnУчастникиIdChanged);
			this._участникиId.OnChanging += new System.EventHandler(this.OnУчастникиIdChanging);
			this._участникиImnName = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._участникиImnName.OnChanged += new System.EventHandler(this.OnУчастникиImnNameChanged);
			this._участникиImnName.OnChanging += new System.EventHandler(this.OnУчастникиImnNameChanging);
			this._должностьИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition>();
			this._должностьИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition>>(this.OnДолжностьИсполнителяSync);
			this._должностьИсполнителя.OnChanged += new System.EventHandler(this.OnДолжностьИсполнителяChanged);
			this._должностьИсполнителя.OnChanging += new System.EventHandler(this.OnДолжностьИсполнителяChanging);
			this._объект0 = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъект0Sync);
			this._объект0.OnChanged += new System.EventHandler(this.OnОбъект0Changed);
			this._объект0.OnChanging += new System.EventHandler(this.OnОбъект0Changing);
			this._объект1 = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъект1Sync);
			this._объект1.OnChanged += new System.EventHandler(this.OnОбъект1Changed);
			this._объект1.OnChanging += new System.EventHandler(this.OnОбъект1Changing);
			this._заявка = new Microsoft.SharePoint.Linq.EntityRef<РГЗаявкиЭлемент>();
			this._заявка.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnЗаявкаSync);
			this._заявка.OnChanged += new System.EventHandler(this.OnЗаявкаChanged);
			this._заявка.OnChanging += new System.EventHandler(this.OnЗаявкаChanging);
			this._контролерПоручения = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._контролерПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnКонтролерПорученияSync);
			this._контролерПоручения.OnChanged += new System.EventHandler(this.OnКонтролерПорученияChanged);
			this._контролерПоручения.OnChanging += new System.EventHandler(this.OnКонтролерПорученияChanging);
			this._застройщик = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._застройщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnЗастройщикSync);
			this._застройщик.OnChanged += new System.EventHandler(this.OnЗастройщикChanged);
			this._застройщик.OnChanging += new System.EventHandler(this.OnЗастройщикChanging);
			this._типПоручения = new Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения>();
			this._типПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения>>(this.OnТипПорученияSync);
			this._типПоручения.OnChanged += new System.EventHandler(this.OnТипПорученияChanged);
			this._типПоручения.OnChanging += new System.EventHandler(this.OnТипПорученияChanging);
			this._заседание0 = new Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент>();
			this._заседание0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент>>(this.OnЗаседание0Sync);
			this._заседание0.OnChanged += new System.EventHandler(this.OnЗаседание0Changed);
			this._заседание0.OnChanging += new System.EventHandler(this.OnЗаседание0Changing);
			this._подгруппа = new Microsoft.SharePoint.Linq.EntityRef<ПодгруппыАналитическихПоказателейЭлемент>();
			this._подгруппа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПодгруппыАналитическихПоказателейЭлемент>>(this.OnПодгруппаSync);
			this._подгруппа.OnChanged += new System.EventHandler(this.OnПодгруппаChanged);
			this._подгруппа.OnChanging += new System.EventHandler(this.OnПодгруппаChanging);
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Какие значения лучше: более низкие или более высокие
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LowerValuesAreBetter", Storage="_болееНизкиеЗначенияЛучше", FieldType="Boolean")]
		public virtual System.Nullable<bool> БолееНизкиеЗначенияЛучше {
			get {
				return this._болееНизкиеЗначенияЛучше;
			}
			set {
				if ((value != this._болееНизкиеЗначенияЛучше)) {
					this.OnPropertyChanging("БолееНизкиеЗначенияЛучше", this._болееНизкиеЗначенияЛучше);
					this._болееНизкиеЗначенияЛучше = value;
					this.OnPropertyChanged("БолееНизкиеЗначенияЛучше");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherAddressCountry", Storage="_странаИлиРегионДопАдрес", FieldType="Text")]
		public virtual string СтранаИлиРегионДопАдрес {
			get {
				return this._странаИлиРегионДопАдрес;
			}
			set {
				if ((value != this._странаИлиРегионДопАдрес)) {
					this.OnPropertyChanging("СтранаИлиРегионДопАдрес", this._странаИлиРегионДопАдрес);
					this._странаИлиРегионДопАдрес = value;
					this.OnPropertyChanged("СтранаИлиРегионДопАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Categories", Storage="_категории", FieldType="Text")]
		public virtual string Категории {
			get {
				return this._категории;
			}
			set {
				if ((value != this._категории)) {
					this.OnPropertyChanging("Категории", this._категории);
					this._категории = value;
					this.OnPropertyChanged("Категории");
				}
			}
		}
		
		/// <summary>
		/// Описание заявки МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrderTextMVK", Storage="_описаниеЗаявки", FieldType="Note")]
		public virtual string ОписаниеЗаявки {
			get {
				return this._описаниеЗаявки;
			}
			set {
				if ((value != this._описаниеЗаявки)) {
					this.OnPropertyChanging("ОписаниеЗаявки", this._описаниеЗаявки);
					this._описаниеЗаявки = value;
					this.OnPropertyChanged("ОписаниеЗаявки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ManagersName", Storage="_руководитель", FieldType="Text")]
		public virtual string Руководитель {
			get {
				return this._руководитель;
			}
			set {
				if ((value != this._руководитель)) {
					this.OnPropertyChanging("Руководитель", this._руководитель);
					this._руководитель = value;
					this.OnPropertyChanged("Руководитель");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ChildrensNames", Storage="_именаДетей", FieldType="Text")]
		public virtual string ИменаДетей {
			get {
				return this._именаДетей;
			}
			set {
				if ((value != this._именаДетей)) {
					this.OnPropertyChanging("ИменаДетей", this._именаДетей);
					this._именаДетей = value;
					this.OnPropertyChanged("ИменаДетей");
				}
			}
		}
		
		/// <summary>
		/// Дата последнего изменения этого ресурса
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_DCDateModified", Storage="_датаИзменения", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаИзменения {
			get {
				return this._датаИзменения;
			}
			set {
				if ((value != this._датаИзменения)) {
					this.OnPropertyChanging("ДатаИзменения", this._датаИзменения);
					this._датаИзменения = value;
					this.OnPropertyChanged("ДатаИзменения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Company", Storage="_организация", FieldType="Text")]
		public virtual string Организация {
			get {
				return this._организация;
			}
			set {
				if ((value != this._организация)) {
					this.OnPropertyChanging("Организация", this._организация);
					this._организация = value;
					this.OnPropertyChanged("Организация");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeAddressStateOrProvince", Storage="_республикаОбластьИлиКрайДомАдрес", FieldType="Text")]
		public virtual string РеспубликаОбластьИлиКрайДомАдрес {
			get {
				return this._республикаОбластьИлиКрайДомАдрес;
			}
			set {
				if ((value != this._республикаОбластьИлиКрайДомАдрес)) {
					this.OnPropertyChanging("РеспубликаОбластьИлиКрайДомАдрес", this._республикаОбластьИлиКрайДомАдрес);
					this._республикаОбластьИлиКрайДомАдрес = value;
					this.OnPropertyChanged("РеспубликаОбластьИлиКрайДомАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CallTime", Storage="_датаИВремя", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаИВремя {
			get {
				return this._датаИВремя;
			}
			set {
				if ((value != this._датаИВремя)) {
					this.OnPropertyChanging("ДатаИВремя", this._датаИВремя);
					this._датаИВремя = value;
					this.OnPropertyChanged("ДатаИВремя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportLink", Storage="_ссылкаНаОтчет", ReadOnly=true, FieldType="Computed")]
		public virtual string СсылкаНаОтчет {
			get {
				return this._ссылкаНаОтчет;
			}
			set {
				if ((value != this._ссылкаНаОтчет)) {
					this.OnPropertyChanging("СсылкаНаОтчет", this._ссылкаНаОтчет);
					this._ссылкаНаОтчет = value;
					this.OnPropertyChanged("СсылкаНаОтчет");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Break", Storage="_перерыв", FieldType="Text")]
		public virtual string Перерыв {
			get {
				return this._перерыв;
			}
			set {
				if ((value != this._перерыв)) {
					this.OnPropertyChanging("Перерыв", this._перерыв);
					this._перерыв = value;
					this.OnPropertyChanged("Перерыв");
				}
			}
		}
		
		/// <summary>
		/// Первоначальный автор
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_автор", FieldType="Text")]
		public virtual string Автор {
			get {
				return this._автор;
			}
			set {
				if ((value != this._автор)) {
					this.OnPropertyChanging("Автор", this._автор);
					this._автор = value;
					this.OnPropertyChanged("Автор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NightWork", Storage="_поздняяНочь", FieldType="Text")]
		public virtual string ПоздняяНочь {
			get {
				return this._поздняяНочь;
			}
			set {
				if ((value != this._поздняяНочь)) {
					this.OnPropertyChanging("ПоздняяНочь", this._поздняяНочь);
					this._поздняяНочь = value;
					this.OnPropertyChanged("ПоздняяНочь");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="End", Storage="_окончание", FieldType="Text")]
		public virtual string Окончание {
			get {
				return this._окончание;
			}
			set {
				if ((value != this._окончание)) {
					this.OnPropertyChanging("Окончание", this._окончание);
					this._окончание = value;
					this.OnPropertyChanged("Окончание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Oof", Storage="_нетНаМестеЛичное", FieldType="Text")]
		public virtual string НетНаМестеЛичное {
			get {
				return this._нетНаМестеЛичное;
			}
			set {
				if ((value != this._нетНаМестеЛичное)) {
					this.OnPropertyChanging("НетНаМестеЛичное", this._нетНаМестеЛичное);
					this._нетНаМестеЛичное = value;
					this.OnPropertyChanged("НетНаМестеЛичное");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingRuleDescription", Storage="_описание0", Required=true, FieldType="Text")]
		public virtual string Описание0 {
			get {
				return this._описание0;
			}
			set {
				if ((value != this._описание0)) {
					this.OnPropertyChanging("Описание0", this._описание0);
					this._описание0 = value;
					this.OnPropertyChanged("Описание0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingHidden", Storage="_скрытаяСтраница", FieldType="Boolean")]
		public virtual System.Nullable<bool> СкрытаяСтраница {
			get {
				return this._скрытаяСтраница;
			}
			set {
				if ((value != this._скрытаяСтраница)) {
					this.OnPropertyChanging("СкрытаяСтраница", this._скрытаяСтраница);
					this._скрытаяСтраница = value;
					this.OnPropertyChanged("СкрытаяСтраница");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingRuleExternal", Storage="_маршрутКВнешнемуРасположению", Required=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> МаршрутКВнешнемуРасположению {
			get {
				return this._маршрутКВнешнемуРасположению;
			}
			set {
				if ((value != this._маршрутКВнешнемуРасположению)) {
					this.OnPropertyChanging("МаршрутКВнешнемуРасположению", this._маршрутКВнешнемуРасположению);
					this._маршрутКВнешнемуРасположению = value;
					this.OnPropertyChanged("МаршрутКВнешнемуРасположению");
				}
			}
		}
		
		/// <summary>
		/// Отображаемое имя, используемое в списке доступных профилей кэша для владельцев сайтов и владельцев макетов страниц.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheDisplayName", Storage="_отображаемоеИмя", FieldType="Text")]
		public virtual string ОтображаемоеИмя {
			get {
				return this._отображаемоеИмя;
			}
			set {
				if ((value != this._отображаемоеИмя)) {
					this.OnPropertyChanging("ОтображаемоеИмя", this._отображаемоеИмя);
					this._отображаемоеИмя = value;
					this.OnPropertyChanged("ОтображаемоеИмя");
				}
			}
		}
		
		/// <summary>
		/// Значение предупреждения индикатора, отформатированное его поставщиком источников данных
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormattedWarning", Storage="_форматированноеПредупреждениеИндикатора", FieldType="Text")]
		public virtual string ФорматированноеПредупреждениеИндикатора {
			get {
				return this._форматированноеПредупреждениеИндикатора;
			}
			set {
				if ((value != this._форматированноеПредупреждениеИндикатора)) {
					this.OnPropertyChanging("ФорматированноеПредупреждениеИндикатора", this._форматированноеПредупреждениеИндикатора);
					this._форматированноеПредупреждениеИндикатора = value;
					this.OnPropertyChanged("ФорматированноеПредупреждениеИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DescendantRatingsCount", Storage="_сводныйСчетчикОценок", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> СводныйСчетчикОценок {
			get {
				return this._сводныйСчетчикОценок;
			}
			set {
				if ((value != this._сводныйСчетчикОценок)) {
					this.OnPropertyChanging("СводныйСчетчикОценок", this._сводныйСчетчикОценок);
					this._сводныйСчетчикОценок = value;
					this.OnPropertyChanged("СводныйСчетчикОценок");
				}
			}
		}
		
		/// <summary>
		/// "Имя контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типа контента страницы для указания имени контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactName", Storage="_имяКонтакта", FieldType="Text")]
		public virtual string ИмяКонтакта {
			get {
				return this._имяКонтакта;
			}
			set {
				if ((value != this._имяКонтакта)) {
					this.OnPropertyChanging("ИмяКонтакта", this._имяКонтакта);
					this._имяКонтакта = value;
					this.OnPropertyChanged("ИмяКонтакта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PrimaryNumber", Storage="_основнойТелефон", FieldType="Text")]
		public virtual string ОсновнойТелефон {
			get {
				return this._основнойТелефон;
			}
			set {
				if ((value != this._основнойТелефон)) {
					this.OnPropertyChanging("ОсновнойТелефон", this._основнойТелефон);
					this._основнойТелефон = value;
					this.OnPropertyChanged("ОсновнойТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HolidayWork", Storage="_праздник", FieldType="Text")]
		public virtual string Праздник {
			get {
				return this._праздник;
			}
			set {
				if ((value != this._праздник)) {
					this.OnPropertyChanging("Праздник", this._праздник);
					this._праздник = value;
					this.OnPropertyChanged("Праздник");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_название", Required=true, FieldType="Text")]
		public override string Название {
			get {
				return this._название;
			}
			set {
				if ((value != this._название)) {
					this.OnPropertyChanging("Название", this._название);
					this._название = value;
					this.OnPropertyChanged("Название");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingTargetFolder", Storage="_конечнаяПапка", Required=true, FieldType="Text")]
		public virtual string КонечнаяПапка {
			get {
				return this._конечнаяПапка;
			}
			set {
				if ((value != this._конечнаяПапка)) {
					this.OnPropertyChanging("КонечнаяПапка", this._конечнаяПапка);
					this._конечнаяПапка = value;
					this.OnPropertyChanged("КонечнаяПапка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingPageLayout", Storage="_макетСтраницы", ReadOnly=true, FieldType="Url")]
		public virtual string МакетСтраницы {
			get {
				return this._макетСтраницы;
			}
			set {
				if ((value != this._макетСтраницы)) {
					this.OnPropertyChanging("МакетСтраницы", this._макетСтраницы);
					this._макетСтраницы = value;
					this.OnPropertyChanged("МакетСтраницы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FullName", Storage="_полноеИмя", FieldType="Text")]
		public virtual string ПолноеИмя {
			get {
				return this._полноеИмя;
			}
			set {
				if ((value != this._полноеИмя)) {
					this.OnPropertyChanging("ПолноеИмя", this._полноеИмя);
					this._полноеИмя = value;
					this.OnPropertyChanged("ПолноеИмя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_описание1", ReadOnly=true, FieldType="Note")]
		public virtual string Описание1 {
			get {
				return this._описание1;
			}
			set {
				if ((value != this._описание1)) {
					this.OnPropertyChanging("Описание1", this._описание1);
					this._описание1 = value;
					this.OnPropertyChanged("Описание1");
				}
			}
		}
		
		/// <summary>
		/// Значок 64x48, представляющий этот стиль
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="XSLStyleIconUrl", Storage="_uRLАдресЗначка", FieldType="Url")]
		public virtual string URLАдресЗначка {
			get {
				return this._uRLАдресЗначка;
			}
			set {
				if ((value != this._uRLАдресЗначка)) {
					this.OnPropertyChanging("URLАдресЗначка", this._uRLАдресЗначка);
					this._uRLАдресЗначка = value;
					this.OnPropertyChanged("URLАдресЗначка");
				}
			}
		}
		
		/// <summary>
		/// Описание контента отчета
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportDescription", Storage="_описаниеОтчета", FieldType="Note")]
		public virtual string ОписаниеОтчета {
			get {
				return this._описаниеОтчета;
			}
			set {
				if ((value != this._описаниеОтчета)) {
					this.OnPropertyChanging("ОписаниеОтчета", this._описаниеОтчета);
					this._описаниеОтчета = value;
					this.OnPropertyChanged("ОписаниеОтчета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_иД", ReadOnly=true, FieldType="Counter")]
		public virtual System.Nullable<int> ИД {
			get {
				return this._иД;
			}
			set {
				if ((value != this._иД)) {
					this.OnPropertyChanging("ИД", this._иД);
					this._иД = value;
					this.OnPropertyChanged("ИД");
				}
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, периодически будет выполняться поиск этой ошибки.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleCheckEnabled", Storage="_включена", FieldType="Boolean")]
		public virtual System.Nullable<bool> Включена {
			get {
				return this._включена;
			}
			set {
				if ((value != this._включена)) {
					this.OnPropertyChanging("Включена", this._включена);
					this._включена = value;
					this.OnPropertyChanged("Включена");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MobileContent", Storage="_мобильныйКонтент", ReadOnly=true, FieldType="Url")]
		public virtual string МобильныйКонтент {
			get {
				return this._мобильныйКонтент;
			}
			set {
				if ((value != this._мобильныйКонтент)) {
					this.OnPropertyChanging("МобильныйКонтент", this._мобильныйКонтент);
					this._мобильныйКонтент = value;
					this.OnPropertyChanged("МобильныйКонтент");
				}
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.SetVaryByCustom в ASP.Net 2.0.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingVaryByCustom", Storage="_вЗависимостиОтНастраиваемогоПараметра", FieldType="Text")]
		public virtual string ВЗависимостиОтНастраиваемогоПараметра {
			get {
				return this._вЗависимостиОтНастраиваемогоПараметра;
			}
			set {
				if ((value != this._вЗависимостиОтНастраиваемогоПараметра)) {
					this.OnPropertyChanging("ВЗависимостиОтНастраиваемогоПараметра", this._вЗависимостиОтНастраиваемогоПараметра);
					this._вЗависимостиОтНастраиваемогоПараметра = value;
					this.OnPropertyChanged("ВЗависимостиОтНастраиваемогоПараметра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Profession", Storage="_профессия", FieldType="Text")]
		public virtual string Профессия {
			get {
				return this._профессия;
			}
			set {
				if ((value != this._профессия)) {
					this.OnPropertyChanging("Профессия", this._профессия);
					this._профессия = value;
					this.OnPropertyChanged("Профессия");
				}
			}
		}
		
		/// <summary>
		/// Описание вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueDescriptionMVK", Storage="_описание2", FieldType="Note")]
		public virtual string Описание2 {
			get {
				return this._описание2;
			}
			set {
				if ((value != this._описание2)) {
					this.OnPropertyChanging("Описание2", this._описание2);
					this._описание2 = value;
					this.OnPropertyChanged("Описание2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReputationScore", Storage="_оценкаРепутации", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> ОценкаРепутации {
			get {
				return this._оценкаРепутации;
			}
			set {
				if ((value != this._оценкаРепутации)) {
					this.OnPropertyChanging("ОценкаРепутации", this._оценкаРепутации);
					this._оценкаРепутации = value;
					this.OnPropertyChanged("ОценкаРепутации");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationalIDNumber", Storage="_кодОрганизации", FieldType="Text")]
		public virtual string КодОрганизации {
			get {
				return this._кодОрганизации;
			}
			set {
				if ((value != this._кодОрганизации)) {
					this.OnPropertyChanging("КодОрганизации", this._кодОрганизации);
					this._кодОрганизации = value;
					this.OnPropertyChanged("КодОрганизации");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_цепочкиОбсуждения", ReadOnly=true, FieldType="Computed")]
		public virtual string ЦепочкиОбсуждения {
			get {
				return this._цепочкиОбсуждения;
			}
			set {
				if ((value != this._цепочкиОбсуждения)) {
					this.OnPropertyChanging("ЦепочкиОбсуждения", this._цепочкиОбсуждения);
					this._цепочкиОбсуждения = value;
					this.OnPropertyChanged("ЦепочкиОбсуждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEComment2", Storage="_заметка2", FieldType="Text")]
		public virtual string Заметка2 {
			get {
				return this._заметка2;
			}
			set {
				if ((value != this._заметка2)) {
					this.OnPropertyChanging("Заметка2", this._заметка2);
					this._заметка2 = value;
					this.OnPropertyChanged("Заметка2");
				}
			}
		}
		
		/// <summary>
		/// Номер заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingNumberMVK", Storage="_номерЗаседания", Required=true, FieldType="Text")]
		public virtual string НомерЗаседания {
			get {
				return this._номерЗаседания;
			}
			set {
				if ((value != this._номерЗаседания)) {
					this.OnPropertyChanging("НомерЗаседания", this._номерЗаседания);
					this._номерЗаседания = value;
					this.OnPropertyChanged("НомерЗаседания");
				}
			}
		}
		
		/// <summary>
		/// Указывает, используется ли выражение для расчета процента
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentExpression", Storage="_процентноеВыражение", FieldType="Boolean")]
		public virtual System.Nullable<bool> ПроцентноеВыражение {
			get {
				return this._процентноеВыражение;
			}
			set {
				if ((value != this._процентноеВыражение)) {
					this.OnPropertyChanging("ПроцентноеВыражение", this._процентноеВыражение);
					this._процентноеВыражение = value;
					this.OnPropertyChanged("ПроцентноеВыражение");
				}
			}
		}
		
		/// <summary>
		/// Введите имена управляемых свойств поиска, с которыми будет использоваться этот шаблон отображения фильтра. Управляемые свойства, имена которых начинаются с введенных значений, смогут использовать этот шаблон отображения.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompatibleManagedProperties", Storage="_совместимыеУправляемыеСвойства", FieldType="Note")]
		public virtual string СовместимыеУправляемыеСвойства {
			get {
				return this._совместимыеУправляемыеСвойства;
			}
			set {
				if ((value != this._совместимыеУправляемыеСвойства)) {
					this.OnPropertyChanging("СовместимыеУправляемыеСвойства", this._совместимыеУправляемыеСвойства);
					this._совместимыеУправляемыеСвойства = value;
					this.OnPropertyChanged("СовместимыеУправляемыеСвойства");
				}
			}
		}
		
		/// <summary>
		/// Описание предоставляет сведения о назначении цели.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KpiDescription", Storage="_описание3", FieldType="Note")]
		public virtual string Описание3 {
			get {
				return this._описание3;
			}
			set {
				if ((value != this._описание3)) {
					this.OnPropertyChanging("Описание3", this._описание3);
					this._описание3 = value;
					this.OnPropertyChanged("Описание3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_контент", ReadOnly=true, FieldType="Url")]
		public virtual string Контент {
			get {
				return this._контент;
			}
			set {
				if ((value != this._контент)) {
					this.OnPropertyChanging("Контент", this._контент);
					this._контент = value;
					this.OnPropertyChanged("Контент");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEComment3", Storage="_заметка3", FieldType="Text")]
		public virtual string Заметка3 {
			get {
				return this._заметка3;
			}
			set {
				if ((value != this._заметка3)) {
					this.OnPropertyChanging("Заметка3", this._заметка3);
					this._заметка3 = value;
					this.OnPropertyChanged("Заметка3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsNonWorkingDay", Storage="_нерабочийДень", FieldType="Boolean")]
		public virtual System.Nullable<bool> НерабочийДень {
			get {
				return this._нерабочийДень;
			}
			set {
				if ((value != this._нерабочийДень)) {
					this.OnPropertyChanging("НерабочийДень", this._нерабочийДень);
					this._нерабочийДень = value;
					this.OnPropertyChanged("НерабочийДень");
				}
			}
		}
		
		/// <summary>
		/// При установке этого флажка всем пользователям потребуются идентичные эффективные права во всех защищаемых объектах для просмотра одной и той же кэшированной страницы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingVaryByRights", Storage="_вЗависимостиОтПравПользователя", FieldType="Boolean")]
		public virtual System.Nullable<bool> ВЗависимостиОтПравПользователя {
			get {
				return this._вЗависимостиОтПравПользователя;
			}
			set {
				if ((value != this._вЗависимостиОтПравПользователя)) {
					this.OnPropertyChanging("ВЗависимостиОтПравПользователя", this._вЗависимостиОтПравПользователя);
					this._вЗависимостиОтПравПользователя = value;
					this.OnPropertyChanged("ВЗависимостиОтПравПользователя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingPriority", Storage="_важность", Required=true, FieldType="Text")]
		public virtual string Важность {
			get {
				return this._важность;
			}
			set {
				if ((value != this._важность)) {
					this.OnPropertyChanging("Важность", this._важность);
					this._важность = value;
					this.OnPropertyChanged("Важность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_авторскиеПрава", FieldType="Text")]
		public virtual string АвторскиеПрава {
			get {
				return this._авторскиеПрава;
			}
			set {
				if ((value != this._авторскиеПрава)) {
					this.OnPropertyChanging("АвторскиеПрава", this._авторскиеПрава);
					this._авторскиеПрава = value;
					this.OnPropertyChanged("АвторскиеПрава");
				}
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данного предупреждения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarningCell", Storage="_ячейкаПредупреждения", FieldType="Text")]
		public virtual string ЯчейкаПредупреждения {
			get {
				return this._ячейкаПредупреждения;
			}
			set {
				if ((value != this._ячейкаПредупреждения)) {
					this.OnPropertyChanging("ЯчейкаПредупреждения", this._ячейкаПредупреждения);
					this._ячейкаПредупреждения = value;
					this.OnPropertyChanged("ЯчейкаПредупреждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_кемРазмещено", ReadOnly=true, FieldType="Computed")]
		public virtual string КемРазмещено {
			get {
				return this._кемРазмещено;
			}
			set {
				if ((value != this._кемРазмещено)) {
					this.OnPropertyChanging("КемРазмещено", this._кемРазмещено);
					this._кемРазмещено = value;
					this.OnPropertyChanged("КемРазмещено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoWidthInPixels", Storage="_ширинаКадра", FieldType="Integer")]
		public System.Nullable<int> ШиринаКадра {
			get {
				return this._ширинаКадра;
			}
			set {
				if ((value != this._ширинаКадра)) {
					this.OnPropertyChanging("ШиринаКадра", this._ширинаКадра);
					this._ширинаКадра = value;
					this.OnPropertyChanged("ШиринаКадра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailTo", Storage="_cообщениеПолеКому", FieldType="Note")]
		public virtual string CообщениеПолеКому {
			get {
				return this._cообщениеПолеКому;
			}
			set {
				if ((value != this._cообщениеПолеКому)) {
					this.OnPropertyChanging("CообщениеПолеКому", this._cообщениеПолеКому);
					this._cообщениеПолеКому = value;
					this.OnPropertyChanged("CообщениеПолеКому");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Outcome", Storage="_результат", FieldType="Text")]
		public virtual string Результат {
			get {
				return this._результат;
			}
			set {
				if ((value != this._результат)) {
					this.OnPropertyChanging("Результат", this._результат);
					this._результат = value;
					this.OnPropertyChanged("Результат");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TemplateId", Storage="_идентификаторШаблона", Required=true, FieldType="Text")]
		public virtual string ИдентификаторШаблона {
			get {
				return this._идентификаторШаблона;
			}
			set {
				if ((value != this._идентификаторШаблона)) {
					this.OnPropertyChanging("ИдентификаторШаблона", this._идентификаторШаблона);
					this._идентификаторШаблона = value;
					this.OnPropertyChanged("ИдентификаторШаблона");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormRelativeUrl", Storage="_относительныйURLАдресФормы", Required=true, FieldType="Text")]
		public virtual string ОтносительныйURLАдресФормы {
			get {
				return this._относительныйURLАдресФормы;
			}
			set {
				if ((value != this._относительныйURLАдресФормы)) {
					this.OnPropertyChanging("ОтносительныйURLАдресФормы", this._относительныйURLАдресФормы);
					this._относительныйURLАдресФормы = value;
					this.OnPropertyChanged("ОтносительныйURLАдресФормы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="User", Storage="_идентификаторПользователя", Required=true, FieldType="Integer")]
		public virtual System.Nullable<int> ИдентификаторПользователя {
			get {
				return this._идентификаторПользователя;
			}
			set {
				if ((value != this._идентификаторПользователя)) {
					this.OnPropertyChanging("ИдентификаторПользователя", this._идентификаторПользователя);
					this._идентификаторПользователя = value;
					this.OnPropertyChanged("ИдентификаторПользователя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEComment1", Storage="_заметка1", FieldType="Text")]
		public virtual string Заметка1 {
			get {
				return this._заметка1;
			}
			set {
				if ((value != this._заметка1)) {
					this.OnPropertyChanging("Заметка1", this._заметка1);
					this._заметка1 = value;
					this.OnPropertyChanged("Заметка1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CallBack", Storage="_обратныйВызов", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> ОбратныйВызов {
			get {
				return this._обратныйВызов;
			}
			set {
				if ((value != this._обратныйВызов)) {
					this.OnPropertyChanging("ОбратныйВызов", this._обратныйВызов);
					this._обратныйВызов = value;
					this.OnPropertyChanged("ОбратныйВызов");
				}
			}
		}
		
		/// <summary>
		/// Введите слоты и управляемые свойства, которые сопоставляются со слотами. Это поле будет использоваться для определения управляемых свойств, которые возвращает служба поиска SharePoint при использовании этого шаблона отображения. Используйте формат "имя слота":"имя свойства" и разделяйте элементы запятыми.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ManagedPropertyMapping", Storage="_сопоставленияУправляемыхСвойств", FieldType="Note")]
		public virtual string СопоставленияУправляемыхСвойств {
			get {
				return this._сопоставленияУправляемыхСвойств;
			}
			set {
				if ((value != this._сопоставленияУправляемыхСвойств)) {
					this.OnPropertyChanging("СопоставленияУправляемыхСвойств", this._сопоставленияУправляемыхСвойств);
					this._сопоставленияУправляемыхСвойств = value;
					this.OnPropertyChanged("СопоставленияУправляемыхСвойств");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Value", Storage="_значениеИндикатора", FieldType="Number")]
		public virtual System.Nullable<double> ЗначениеИндикатора {
			get {
				return this._значениеИндикатора;
			}
			set {
				if ((value != this._значениеИндикатора)) {
					this.OnPropertyChanging("ЗначениеИндикатора", this._значениеИндикатора);
					this._значениеИндикатора = value;
					this.OnPropertyChanged("ЗначениеИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentName", Storage="_имяРодительскогоОтчета", FieldType="Text")]
		public virtual string ИмяРодительскогоОтчета {
			get {
				return this._имяРодительскогоОтчета;
			}
			set {
				if ((value != this._имяРодительскогоОтчета)) {
					this.OnPropertyChanging("ИмяРодительскогоОтчета", this._имяРодительскогоОтчета);
					this._имяРодительскогоОтчета = value;
					this.OnPropertyChanged("ИмяРодительскогоОтчета");
				}
			}
		}
		
		/// <summary>
		/// Если этот флажок установлен, физический URL-адрес этой страницы не отображается в результатах поиска. Полнотекстовый URL-адрес, назначенный этой странице, отображается всегда.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingIsFurlPage", Storage="_скрыватьФизическийURLАдресВРезультатахПоиска", FieldType="Boolean")]
		public virtual System.Nullable<bool> СкрыватьФизическийURLАдресВРезультатахПоиска {
			get {
				return this._скрыватьФизическийURLАдресВРезультатахПоиска;
			}
			set {
				if ((value != this._скрыватьФизическийURLАдресВРезультатахПоиска)) {
					this.OnPropertyChanging("СкрыватьФизическийURLАдресВРезультатахПоиска", this._скрыватьФизическийURLАдресВРезультатахПоиска);
					this._скрыватьФизическийURLАдресВРезультатахПоиска = value;
					this.OnPropertyChanged("СкрыватьФизическийURLАдресВРезультатахПоиска");
				}
			}
		}
		
		/// <summary>
		/// Ответственное лицо
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PPSMA_PersonResponsible", Storage="_ответственноеЛицо", FieldType="Text")]
		public virtual string ОтветственноеЛицо {
			get {
				return this._ответственноеЛицо;
			}
			set {
				if ((value != this._ответственноеЛицо)) {
					this.OnPropertyChanging("ОтветственноеЛицо", this._ответственноеЛицо);
					this._ответственноеЛицо = value;
					this.OnPropertyChanged("ОтветственноеЛицо");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateStartTime", Storage="_времяОтправки", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ВремяОтправки {
			get {
				return this._времяОтправки;
			}
			set {
				if ((value != this._времяОтправки)) {
					this.OnPropertyChanging("ВремяОтправки", this._времяОтправки);
					this._времяОтправки = value;
					this.OnPropertyChanged("ВремяОтправки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_датаСозданияРисунка", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаСозданияРисунка {
			get {
				return this._датаСозданияРисунка;
			}
			set {
				if ((value != this._датаСозданияРисунка)) {
					this.OnPropertyChanging("ДатаСозданияРисунка", this._датаСозданияРисунка);
					this._датаСозданияРисунка = value;
					this.OnPropertyChanged("ДатаСозданияРисунка");
				}
			}
		}
		
		/// <summary>
		/// Идентификатор типа шаблона списка, к которому применяется это переопределение.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSTargetListTemplate", Storage="_идентификаторЦелевогоШаблонаСписка", FieldType="Text")]
		public virtual string ИдентификаторЦелевогоШаблонаСписка {
			get {
				return this._идентификаторЦелевогоШаблонаСписка;
			}
			set {
				if ((value != this._идентификаторЦелевогоШаблонаСписка)) {
					this.OnPropertyChanging("ИдентификаторЦелевогоШаблонаСписка", this._идентификаторЦелевогоШаблонаСписка);
					this._идентификаторЦелевогоШаблонаСписка = value;
					this.OnPropertyChanged("ИдентификаторЦелевогоШаблонаСписка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Birthday", Storage="_деньРождения", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДеньРождения {
			get {
				return this._деньРождения;
			}
			set {
				if ((value != this._деньРождения)) {
					this.OnPropertyChanging("ДеньРождения", this._деньРождения);
					this._деньРождения = value;
					this.OnPropertyChanged("ДеньРождения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Preview", Storage="_вебПросмотр", ReadOnly=true, FieldType="Computed")]
		public virtual string ВебПросмотр {
			get {
				return this._вебПросмотр;
			}
			set {
				if ((value != this._вебПросмотр)) {
					this.OnPropertyChanging("ВебПросмотр", this._вебПросмотр);
					this._вебПросмотр = value;
					this.OnPropertyChanged("ВебПросмотр");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateDownloadLink", Storage="_ссылкаДляЗагрузки", FieldType="Url")]
		public virtual string СсылкаДляЗагрузки {
			get {
				return this._ссылкаДляЗагрузки;
			}
			set {
				if ((value != this._ссылкаДляЗагрузки)) {
					this.OnPropertyChanging("СсылкаДляЗагрузки", this._ссылкаДляЗагрузки);
					this._ссылкаДляЗагрузки = value;
					this.OnPropertyChanged("СсылкаДляЗагрузки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkFilenameNoMenu", Storage="_имя0", ReadOnly=true, FieldType="Computed")]
		public virtual string Имя0 {
			get {
				return this._имя0;
			}
			set {
				if ((value != this._имя0)) {
					this.OnPropertyChanging("Имя0", this._имя0);
					this._имя0 = value;
					this.OnPropertyChanged("Имя0");
				}
			}
		}
		
		/// <summary>
		/// Является ли источником цели книга или определение индикатора
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoalFromWorkBook", Storage="_цельИзКниги", FieldType="Boolean")]
		public virtual System.Nullable<bool> ЦельИзКниги {
			get {
				return this._цельИзКниги;
			}
			set {
				if ((value != this._цельИзКниги)) {
					this.OnPropertyChanging("ЦельИзКниги", this._цельИзКниги);
					this._цельИзКниги = value;
					this.OnPropertyChanged("ЦельИзКниги");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_рабочийТелефон", FieldType="Text")]
		public virtual string РабочийТелефон {
			get {
				return this._рабочийТелефон;
			}
			set {
				if ((value != this._рабочийТелефон)) {
					this.OnPropertyChanging("РабочийТелефон", this._рабочийТелефон);
					this._рабочийТелефон = value;
					this.OnPropertyChanged("РабочийТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Subject", Storage="_тема", FieldType="Text")]
		public virtual string Тема {
			get {
				return this._тема;
			}
			set {
				if ((value != this._тема)) {
					this.OnPropertyChanging("Тема", this._тема);
					this._тема = value;
					this.OnPropertyChanged("Тема");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MiddleName", Storage="_отчество", FieldType="Text")]
		public virtual string Отчество {
			get {
				return this._отчество;
			}
			set {
				if ((value != this._отчество)) {
					this.OnPropertyChanging("Отчество", this._отчество);
					this._отчество = value;
					this.OnPropertyChanged("Отчество");
				}
			}
		}
		
		/// <summary>
		/// Заголовок обозревателя — это столбец сайта, созданный средством публикации. Он отображается вверху окна браузера и может отображаться в результатах поиска в Интернете.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoBrowserTitle", Storage="_заголовокБраузера", FieldType="Text")]
		public virtual string ЗаголовокБраузера {
			get {
				return this._заголовокБраузера;
			}
			set {
				if ((value != this._заголовокБраузера)) {
					this.OnPropertyChanging("ЗаголовокБраузера", this._заголовокБраузера);
					this._заголовокБраузера = value;
					this.OnPropertyChanged("ЗаголовокБраузера");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ISDNNumber", Storage="_iSDN", FieldType="Text")]
		public virtual string ISDN {
			get {
				return this._iSDN;
			}
			set {
				if ((value != this._iSDN)) {
					this.OnPropertyChanging("ISDN", this._iSDN);
					this._iSDN = value;
					this.OnPropertyChanged("ISDN");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ThumbnailOnForm", Storage="_просмотрЭскизов", FieldType="Computed")]
		public virtual string ПросмотрЭскизов {
			get {
				return this._просмотрЭскизов;
			}
			set {
				if ((value != this._просмотрЭскизов)) {
					this.OnPropertyChanging("ПросмотрЭскизов", this._просмотрЭскизов);
					this._просмотрЭскизов = value;
					this.OnPropertyChanged("ПросмотрЭскизов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_версия", ReadOnly=true, FieldType="Text")]
		public virtual string Версия {
			get {
				return this._версия;
			}
			set {
				if ((value != this._версия)) {
					this.OnPropertyChanging("Версия", this._версия);
					this._версия = value;
					this.OnPropertyChanged("Версия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailCalendarSequence", Storage="_отправитьСериюКалендаря", FieldType="Integer")]
		public virtual System.Nullable<int> ОтправитьСериюКалендаря {
			get {
				return this._отправитьСериюКалендаря;
			}
			set {
				if ((value != this._отправитьСериюКалендаря)) {
					this.OnPropertyChanging("ОтправитьСериюКалендаря", this._отправитьСериюКалендаря);
					this._отправитьСериюКалендаря = value;
					this.OnPropertyChanged("ОтправитьСериюКалендаря");
				}
			}
		}
		
		/// <summary>
		/// Примечания описывают текущее состояние индикатора и могут предоставлять сведения о причинах неполадок.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KpiComments", Storage="_примечанияИндикатора", FieldType="Note")]
		public virtual string ПримечанияИндикатора {
			get {
				return this._примечанияИндикатора;
			}
			set {
				if ((value != this._примечанияИндикатора)) {
					this.OnPropertyChanging("ПримечанияИндикатора", this._примечанияИндикатора);
					this._примечанияИндикатора = value;
					this.OnPropertyChanged("ПримечанияИндикатора");
				}
			}
		}
		
		/// <summary>
		/// Ссылка для перехода к странице подробностей 
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DetailLink", Storage="_ссылкаНаПодробности", FieldType="Url")]
		public virtual string СсылкаНаПодробности {
			get {
				return this._ссылкаНаПодробности;
			}
			set {
				if ((value != this._ссылкаНаПодробности)) {
					this.OnPropertyChanging("СсылкаНаПодробности", this._ссылкаНаПодробности);
					this._ссылкаНаПодробности = value;
					this.OnPropertyChanged("СсылкаНаПодробности");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MemberStatusInt", Storage="_состояниеУчастника", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> СостояниеУчастника {
			get {
				return this._состояниеУчастника;
			}
			set {
				if ((value != this._состояниеУчастника)) {
					this.OnPropertyChanging("СостояниеУчастника", this._состояниеУчастника);
					this._состояниеУчастника = value;
					this.OnPropertyChanged("СостояниеУчастника");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Anniversary", Storage="_годовщина", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Годовщина {
			get {
				return this._годовщина;
			}
			set {
				if ((value != this._годовщина)) {
					this.OnPropertyChanging("Годовщина", this._годовщина);
					this._годовщина = value;
					this.OnPropertyChanged("Годовщина");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_основнойТекст", FieldType="Note")]
		public virtual string ОсновнойТекст {
			get {
				return this._основнойТекст;
			}
			set {
				if ((value != this._основнойТекст)) {
					this.OnPropertyChanging("ОсновнойТекст", this._основнойТекст);
					this._основнойТекст = value;
					this.OnPropertyChanged("ОсновнойТекст");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_учетнаяЗапись", ReadOnly=true, FieldType="Text")]
		public virtual string УчетнаяЗапись {
			get {
				return this._учетнаяЗапись;
			}
			set {
				if ((value != this._учетнаяЗапись)) {
					this.OnPropertyChanging("УчетнаяЗапись", this._учетнаяЗапись);
					this._учетнаяЗапись = value;
					this.OnPropertyChanged("УчетнаяЗапись");
				}
			}
		}
		
		/// <summary>
		/// URL-адрес источника данных
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DataSource", Storage="_источникДанных", FieldType="Url")]
		public virtual string ИсточникДанных {
			get {
				return this._источникДанных;
			}
			set {
				if ((value != this._источникДанных)) {
					this.OnPropertyChanging("ИсточникДанных", this._источникДанных);
					this._источникДанных = value;
					this.OnPropertyChanged("ИсточникДанных");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoingHome", Storage="_домойИзМестнойКомандировки", FieldType="Boolean")]
		public virtual System.Nullable<bool> ДомойИзМестнойКомандировки {
			get {
				return this._домойИзМестнойКомандировки;
			}
			set {
				if ((value != this._домойИзМестнойКомандировки)) {
					this.OnPropertyChanging("ДомойИзМестнойКомандировки", this._домойИзМестнойКомандировки);
					this._домойИзМестнойКомандировки = value;
					this.OnPropertyChanged("ДомойИзМестнойКомандировки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoRenditionBitRate", Storage="_скоростьПотока", FieldType="Integer")]
		public virtual System.Nullable<int> СкоростьПотока {
			get {
				return this._скоростьПотока;
			}
			set {
				if ((value != this._скоростьПотока)) {
					this.OnPropertyChanging("СкоростьПотока", this._скоростьПотока);
					this._скоростьПотока = value;
					this.OnPropertyChanged("СкоростьПотока");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OffsiteParticipant", Storage="_внешнийУчастник", ReadOnly=true, FieldType="Text")]
		public virtual string ВнешнийУчастник {
			get {
				return this._внешнийУчастник;
			}
			set {
				if ((value != this._внешнийУчастник)) {
					this.OnPropertyChanging("ВнешнийУчастник", this._внешнийУчастник);
					this._внешнийУчастник = value;
					this.OnPropertyChanged("ВнешнийУчастник");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_vti_ItemDeclaredRecord", Storage="_объявленнаяЗапись", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ОбъявленнаяЗапись {
			get {
				return this._объявленнаяЗапись;
			}
			set {
				if ((value != this._объявленнаяЗапись)) {
					this.OnPropertyChanging("ОбъявленнаяЗапись", this._объявленнаяЗапись);
					this._объявленнаяЗапись = value;
					this.OnPropertyChanged("ОбъявленнаяЗапись");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_расположение", FieldType="Text")]
		public virtual string Расположение {
			get {
				return this._расположение;
			}
			set {
				if ((value != this._расположение)) {
					this.OnPropertyChanging("Расположение", this._расположение);
					this._расположение = value;
					this.OnPropertyChanged("Расположение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssistantNumber", Storage="_телефонПомощника", FieldType="Text")]
		public virtual string ТелефонПомощника {
			get {
				return this._телефонПомощника;
			}
			set {
				if ((value != this._телефонПомощника)) {
					this.OnPropertyChanging("ТелефонПомощника", this._телефонПомощника);
					this._телефонПомощника = value;
					this.OnPropertyChanged("ТелефонПомощника");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModifiedByDisplay", Storage="_авторИзменений", ReadOnly=true, FieldType="Computed")]
		public virtual string АвторИзменений {
			get {
				return this._авторИзменений;
			}
			set {
				if ((value != this._авторИзменений)) {
					this.OnPropertyChanging("АвторИзменений", this._авторИзменений);
					this._авторИзменений = value;
					this.OnPropertyChanged("АвторИзменений");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Occurred", Storage="_датаСобытия", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаСобытия {
			get {
				return this._датаСобытия;
			}
			set {
				if ((value != this._датаСобытия)) {
					this.OnPropertyChanging("ДатаСобытия", this._датаСобытия);
					this._датаСобытия = value;
					this.OnPropertyChanged("ДатаСобытия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_высотаРисунка", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> ВысотаРисунка {
			get {
				return this._высотаРисунка;
			}
			set {
				if ((value != this._высотаРисунка)) {
					this.OnPropertyChanging("ВысотаРисунка", this._высотаРисунка);
					this._высотаРисунка = value;
					this.OnPropertyChanged("ВысотаРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateUploadTime", Storage="_времяОтправки0", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ВремяОтправки0 {
			get {
				return this._времяОтправки0;
			}
			set {
				if ((value != this._времяОтправки0)) {
					this.OnPropertyChanging("ВремяОтправки0", this._времяОтправки0);
					this._времяОтправки0 = value;
					this.OnPropertyChanged("ВремяОтправки0");
				}
			}
		}
		
		/// <summary>
		/// При каждом сохранении этого документа его копия будет добавляться в журнал отчета.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SaveToReportHistory", Storage="_сохранитьВЖурналеОтчета", FieldType="Boolean")]
		public virtual System.Nullable<bool> СохранитьВЖурналеОтчета {
			get {
				return this._сохранитьВЖурналеОтчета;
			}
			set {
				if ((value != this._сохранитьВЖурналеОтчета)) {
					this.OnPropertyChanging("СохранитьВЖурналеОтчета", this._сохранитьВЖурналеОтчета);
					this._сохранитьВЖурналеОтчета = value;
					this.OnPropertyChanged("СохранитьВЖурналеОтчета");
				}
			}
		}
		
		/// <summary>
		/// Тренд изменения индикатора
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Trend", Storage="_автоматическоеОпределениеШага", FieldType="Number")]
		public virtual System.Nullable<double> АвтоматическоеОпределениеШага {
			get {
				return this._автоматическоеОпределениеШага;
			}
			set {
				if ((value != this._автоматическоеОпределениеШага)) {
					this.OnPropertyChanging("АвтоматическоеОпределениеШага", this._автоматическоеОпределениеШага);
					this._автоматическоеОпределениеШага = value;
					this.OnPropertyChanged("АвтоматическоеОпределениеШага");
				}
			}
		}
		
		/// <summary>
		/// Состояние индикатора
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KpiStatus", Storage="_состояниеИндикатора", FieldType="Number")]
		public virtual System.Nullable<double> СостояниеИндикатора {
			get {
				return this._состояниеИндикатора;
			}
			set {
				if ((value != this._состояниеИндикатора)) {
					this.OnPropertyChanging("СостояниеИндикатора", this._состояниеИндикатора);
					this._состояниеИндикатора = value;
					this.OnPropertyChanged("СостояниеИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitleNoMenu", Storage="_название0", ReadOnly=true, FieldType="Computed")]
		public virtual string Название0 {
			get {
				return this._название0;
			}
			set {
				if ((value != this._название0)) {
					this.OnPropertyChanging("Название0", this._название0);
					this._название0 = value;
					this.OnPropertyChanged("Название0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Checkmark", Storage="_завершено", ReadOnly=true, IsCalculated=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Завершено {
			get {
				return this._завершено;
			}
			set {
				if ((value != this._завершено)) {
					this.OnPropertyChanging("Завершено", this._завершено);
					this._завершено = value;
					this.OnPropertyChanged("Завершено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_длительностьС", FieldType="Integer")]
		public System.Nullable<int> ДлительностьС {
			get {
				return this._длительностьС;
			}
			set {
				if ((value != this._длительностьС)) {
					this.OnPropertyChanging("ДлительностьС", this._длительностьС);
					this._длительностьС = value;
					this.OnPropertyChanged("ДлительностьС");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentItemID", Storage="_идентификаторРодительскогоЭлемента", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> ИдентификаторРодительскогоЭлемента {
			get {
				return this._идентификаторРодительскогоЭлемента;
			}
			set {
				if ((value != this._идентификаторРодительскогоЭлемента)) {
					this.OnPropertyChanging("ИдентификаторРодительскогоЭлемента", this._идентификаторРодительскогоЭлемента);
					this._идентификаторРодительскогоЭлемента = value;
					this.OnPropertyChanged("ИдентификаторРодительскогоЭлемента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Thumbnail", Storage="_эскиз", ReadOnly=true, FieldType="Computed")]
		public virtual string Эскиз {
			get {
				return this._эскиз;
			}
			set {
				if ((value != this._эскиз)) {
					this.OnPropertyChanging("Эскиз", this._эскиз);
					this._эскиз = value;
					this.OnPropertyChanged("Эскиз");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Business2Number", Storage="_рабТелефон2", FieldType="Text")]
		public virtual string РабТелефон2 {
			get {
				return this._рабТелефон2;
			}
			set {
				if ((value != this._рабТелефон2)) {
					this.OnPropertyChanging("РабТелефон2", this._рабТелефон2);
					this._рабТелефон2 = value;
					this.OnPropertyChanged("РабТелефон2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateExportTime", Storage="_времяЭкспорта", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ВремяЭкспорта {
			get {
				return this._времяЭкспорта;
			}
			set {
				if ((value != this._времяЭкспорта)) {
					this.OnPropertyChanging("ВремяЭкспорта", this._времяЭкспорта);
					this._времяЭкспорта = value;
					this.OnPropertyChanged("ВремяЭкспорта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TelexNumber", Storage="_телекс", FieldType="Text")]
		public virtual string Телекс {
			get {
				return this._телекс;
			}
			set {
				if ((value != this._телекс)) {
					this.OnPropertyChanging("Телекс", this._телекс);
					this._телекс = value;
					this.OnPropertyChanged("Телекс");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSPublishError", Storage="_wSPublishError", FieldType="Note")]
		public virtual string WSPublishError {
			get {
				return this._wSPublishError;
			}
			set {
				if ((value != this._wSPublishError)) {
					this.OnPropertyChanging("WSPublishError", this._wSPublishError);
					this._wSPublishError = value;
					this.OnPropertyChanged("WSPublishError");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserField3", Storage="_допПоле3", FieldType="Text")]
		public virtual string ДопПоле3 {
			get {
				return this._допПоле3;
			}
			set {
				if ((value != this._допПоле3)) {
					this.OnPropertyChanging("ДопПоле3", this._допПоле3);
					this._допПоле3 = value;
					this.OnPropertyChanged("ДопПоле3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkDiscussionTitleNoMenu", Storage="_тема0", ReadOnly=true, FieldType="Computed")]
		public virtual string Тема0 {
			get {
				return this._тема0;
			}
			set {
				if ((value != this._тема0)) {
					this.OnPropertyChanging("Тема0", this._тема0);
					this._тема0 = value;
					this.OnPropertyChanged("Тема0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_завершения", FieldType="Number")]
		public virtual System.Nullable<double> Завершения {
			get {
				return this._завершения;
			}
			set {
				if ((value != this._завершения)) {
					this.OnPropertyChanging("Завершения", this._завершения);
					this._завершения = value;
					this.OnPropertyChanged("Завершения");
				}
			}
		}
		
		/// <summary>
		/// Добавить XSL-файл, который будет использоваться для создания HTML-кода при просмотре страницы программами-обходчиками.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CrawlerXSLFile", Storage="_xSLФайлПрограммыОбходчика", FieldType="Url")]
		public virtual string XSLФайлПрограммыОбходчика {
			get {
				return this._xSLФайлПрограммыОбходчика;
			}
			set {
				if ((value != this._xSLФайлПрограммыОбходчика)) {
					this.OnPropertyChanging("XSLФайлПрограммыОбходчика", this._xSLФайлПрограммыОбходчика);
					this._xSLФайлПрограммыОбходчика = value;
					this.OnPropertyChanged("XSLФайлПрограммыОбходчика");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeAddressStreet", Storage="_улицаДомАдрес", FieldType="Text")]
		public virtual string УлицаДомАдрес {
			get {
				return this._улицаДомАдрес;
			}
			set {
				if ((value != this._улицаДомАдрес)) {
					this.OnPropertyChanging("УлицаДомАдрес", this._улицаДомАдрес);
					this._улицаДомАдрес = value;
					this.OnPropertyChanged("УлицаДомАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReusableText", Storage="_текстДляПовторногоИспользования", FieldType="Note")]
		public virtual string ТекстДляПовторногоИспользования {
			get {
				return this._текстДляПовторногоИспользования;
			}
			set {
				if ((value != this._текстДляПовторногоИспользования)) {
					this.OnPropertyChanging("ТекстДляПовторногоИспользования", this._текстДляПовторногоИспользования);
					this._текстДляПовторногоИспользования = value;
					this.OnPropertyChanged("ТекстДляПовторногоИспользования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateListUrl", Storage="_ссылкаСписка", FieldType="Url")]
		public virtual string СсылкаСписка {
			get {
				return this._ссылкаСписка;
			}
			set {
				if ((value != this._ссылкаСписка)) {
					this.OnPropertyChanging("СсылкаСписка", this._ссылкаСписка);
					this._ссылкаСписка = value;
					this.OnPropertyChanged("СсылкаСписка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModified", Storage="_отчетИзменен", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ОтчетИзменен {
			get {
				return this._отчетИзменен;
			}
			set {
				if ((value != this._отчетИзменен)) {
					this.OnPropertyChanging("ОтчетИзменен", this._отчетИзменен);
					this._отчетИзменен = value;
					this.OnPropertyChanged("ОтчетИзменен");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkDiscussionTitle2", Storage="_тема1", ReadOnly=true, FieldType="Computed")]
		public virtual string Тема1 {
			get {
				return this._тема1;
			}
			set {
				if ((value != this._тема1)) {
					this.OnPropertyChanging("Тема1", this._тема1);
					this._тема1 = value;
					this.OnPropertyChanged("Тема1");
				}
			}
		}
		
		/// <summary>
		/// Описание элемента
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PPSMA_Description", Storage="_описание4", FieldType="Note")]
		public virtual string Описание4 {
			get {
				return this._описание4;
			}
			set {
				if ((value != this._описание4)) {
					this.OnPropertyChanging("Описание4", this._описание4);
					this._описание4 = value;
					this.OnPropertyChanged("Описание4");
				}
			}
		}
		
		/// <summary>
		/// Дополнительная информация по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueInfoMVK", Storage="_информация", FieldType="Text")]
		public virtual string Информация {
			get {
				return this._информация;
			}
			set {
				if ((value != this._информация)) {
					this.OnPropertyChanging("Информация", this._информация);
					this._информация = value;
					this.OnPropertyChanged("Информация");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShortComment", Storage="_заметки", ReadOnly=true, FieldType="Text")]
		public virtual string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequiredField", Storage="_обязательноеПоле", ReadOnly=true, FieldType="Computed")]
		public virtual string ОбязательноеПоле {
			get {
				return this._обязательноеПоле;
			}
			set {
				if ((value != this._обязательноеПоле)) {
					this.OnPropertyChanging("ОбязательноеПоле", this._обязательноеПоле);
					this._обязательноеПоле = value;
					this.OnPropertyChanged("ОбязательноеПоле");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingCustomRouter", Storage="_настраиваемыйМаршрутизатор", Required=true, FieldType="Text")]
		public virtual string НастраиваемыйМаршрутизатор {
			get {
				return this._настраиваемыйМаршрутизатор;
			}
			set {
				if ((value != this._настраиваемыйМаршрутизатор)) {
					this.OnPropertyChanging("НастраиваемыйМаршрутизатор", this._настраиваемыйМаршрутизатор);
					this._настраиваемыйМаршрутизатор = value;
					this.OnPropertyChanged("НастраиваемыйМаршрутизатор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_адресЭлектроннойПочты", FieldType="Text")]
		public virtual string АдресЭлектроннойПочты {
			get {
				return this._адресЭлектроннойПочты;
			}
			set {
				if ((value != this._адресЭлектроннойПочты)) {
					this.OnPropertyChanging("АдресЭлектроннойПочты", this._адресЭлектроннойПочты);
					this._адресЭлектроннойПочты = value;
					this.OnPropertyChanged("АдресЭлектроннойПочты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocIcon", Storage="_тип", ReadOnly=true, FieldType="Computed")]
		public virtual string Тип {
			get {
				return this._тип;
			}
			set {
				if ((value != this._тип)) {
					this.OnPropertyChanging("Тип", this._тип);
					this._тип = value;
					this.OnPropertyChanged("Тип");
				}
			}
		}
		
		/// <summary>
		/// Краткое описание канала устройства
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ChannelDescription", Storage="_описание5", FieldType="Note")]
		public virtual string Описание5 {
			get {
				return this._описание5;
			}
			set {
				if ((value != this._описание5)) {
					this.OnPropertyChanging("Описание5", this._описание5);
					this._описание5 = value;
					this.OnPropertyChanged("Описание5");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssistantsName", Storage="_имяПомощника", FieldType="Text")]
		public virtual string ИмяПомощника {
			get {
				return this._имяПомощника;
			}
			set {
				if ((value != this._имяПомощника)) {
					this.OnPropertyChanging("ИмяПомощника", this._имяПомощника);
					this._имяПомощника = value;
					this.OnPropertyChanged("ИмяПомощника");
				}
			}
		}
		
		/// <summary>
		/// Инвестор по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueInvestorMVK", Storage="_инвестор", FieldType="Note")]
		public virtual string Инвестор {
			get {
				return this._инвестор;
			}
			set {
				if ((value != this._инвестор)) {
					this.OnPropertyChanging("Инвестор", this._инвестор);
					this._инвестор = value;
					this.OnPropertyChanged("Инвестор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormCategory", Storage="_категорияФормы", FieldType="Text")]
		public virtual string КатегорияФормы {
			get {
				return this._категорияФормы;
			}
			set {
				if ((value != this._категорияФормы)) {
					this.OnPropertyChanging("КатегорияФормы", this._категорияФормы);
					this._категорияФормы = value;
					this.OnPropertyChanged("КатегорияФормы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RadioNumber", Storage="_радиотелефон", FieldType="Text")]
		public virtual string Радиотелефон {
			get {
				return this._радиотелефон;
			}
			set {
				if ((value != this._радиотелефон)) {
					this.OnPropertyChanging("Радиотелефон", this._радиотелефон);
					this._радиотелефон = value;
					this.OnPropertyChanged("Радиотелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEDisplay", Storage="_отображать", FieldType="Text")]
		public virtual string Отображать {
			get {
				return this._отображать;
			}
			set {
				if ((value != this._отображать)) {
					this.OnPropertyChanging("Отображать", this._отображать);
					this._отображать = value;
					this.OnPropertyChanged("Отображать");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_ключевыеСлова", FieldType="Note")]
		public virtual string КлючевыеСлова {
			get {
				return this._ключевыеСлова;
			}
			set {
				if ((value != this._ключевыеСлова)) {
					this.OnPropertyChanging("КлючевыеСлова", this._ключевыеСлова);
					this._ключевыеСлова = value;
					this.OnPropertyChanged("КлючевыеСлова");
				}
			}
		}
		
		/// <summary>
		/// Службы, не соответствующие правилу анализатора работоспособности.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportServices", Storage="_службыСоСбоями", FieldType="Note")]
		public virtual string СлужбыСоСбоями {
			get {
				return this._службыСоСбоями;
			}
			set {
				if ((value != this._службыСоСбоями)) {
					this.OnPropertyChanging("СлужбыСоСбоями", this._службыСоСбоями);
					this._службыСоСбоями = value;
					this.OnPropertyChanged("СлужбыСоСбоями");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_должность", FieldType="Text")]
		public virtual string Должность {
			get {
				return this._должность;
			}
			set {
				if ((value != this._должность)) {
					this.OnPropertyChanging("Должность", this._должность);
					this._должность = value;
					this.OnPropertyChanged("Должность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CategoryDescription", Storage="_описание6", FieldType="Text")]
		public virtual string Описание6 {
			get {
				return this._описание6;
			}
			set {
				if ((value != this._описание6)) {
					this.OnPropertyChanging("Описание6", this._описание6);
					this._описание6 = value;
					this.OnPropertyChanged("Описание6");
				}
			}
		}
		
		/// <summary>
		/// При установке этого флажка не выполняется обычный запрет кэширования страниц пользователей, имеющих разрешения на изменение. Этот флажок следует устанавливать только в сценариях, в которых известно, что страница будет опубликована, но не будет иметь контент, который может быть извлечен или может являться черновиком.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheAllowWriters", Storage="_разрешитьАвторамПросматриватьКэшированныйКонтент", FieldType="Boolean")]
		public virtual System.Nullable<bool> РазрешитьАвторамПросматриватьКэшированныйКонтент {
			get {
				return this._разрешитьАвторамПросматриватьКэшированныйКонтент;
			}
			set {
				if ((value != this._разрешитьАвторамПросматриватьКэшированныйКонтент)) {
					this.OnPropertyChanging("РазрешитьАвторамПросматриватьКэшированныйКонтент", this._разрешитьАвторамПросматриватьКэшированныйКонтент);
					this._разрешитьАвторамПросматриватьКэшированныйКонтент = value;
					this.OnPropertyChanged("РазрешитьАвторамПросматриватьКэшированныйКонтент");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_EndDate", Storage="_датаОкончания", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаОкончания {
			get {
				return this._датаОкончания;
			}
			set {
				if ((value != this._датаОкончания)) {
					this.OnPropertyChanging("ДатаОкончания", this._датаОкончания);
					this._датаОкончания = value;
					this.OnPropertyChanged("ДатаОкончания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="V3Comments", Storage="_сопровождающиеЗаметки", FieldType="Note")]
		public virtual string СопровождающиеЗаметки {
			get {
				return this._сопровождающиеЗаметки;
			}
			set {
				if ((value != this._сопровождающиеЗаметки)) {
					this.OnPropertyChanging("СопровождающиеЗаметки", this._сопровождающиеЗаметки);
					this._сопровождающиеЗаметки = value;
					this.OnPropertyChanged("СопровождающиеЗаметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_описание7", FieldType="Note")]
		public virtual string Описание7 {
			get {
				return this._описание7;
			}
			set {
				if ((value != this._описание7)) {
					this.OnPropertyChanging("Описание7", this._описание7);
					this._описание7 = value;
					this.OnPropertyChanged("Описание7");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowLink", Storage="_связанныйКонтент", ReadOnly=true, FieldType="Url")]
		public virtual string СвязанныйКонтент {
			get {
				return this._связанныйКонтент;
			}
			set {
				if ((value != this._связанныйКонтент)) {
					this.OnPropertyChanging("СвязанныйКонтент", this._связанныйКонтент);
					this._связанныйКонтент = value;
					this.OnPropertyChanged("СвязанныйКонтент");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Department", Storage="_отдел", FieldType="Text")]
		public virtual string Отдел {
			get {
				return this._отдел;
			}
			set {
				if ((value != this._отдел)) {
					this.OnPropertyChanging("Отдел", this._отдел);
					this._отдел = value;
					this.OnPropertyChanged("Отдел");
				}
			}
		}
		
		/// <summary>
		/// Ссылки на связанные ресурсы
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Relation", Storage="_отношение", FieldType="Note")]
		public virtual string Отношение {
			get {
				return this._отношение;
			}
			set {
				if ((value != this._отношение)) {
					this.OnPropertyChanging("Отношение", this._отношение);
					this._отношение = value;
					this.OnPropertyChanged("Отношение");
				}
			}
		}
		
		/// <summary>
		/// Версия
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleVersion", Storage="_версия0", FieldType="Text")]
		public virtual string Версия0 {
			get {
				return this._версия0;
			}
			set {
				if ((value != this._версия0)) {
					this.OnPropertyChanging("Версия0", this._версия0);
					this._версия0 = value;
					this.OnPropertyChanged("Версия0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_индекс", FieldType="Text")]
		public virtual string Индекс {
			get {
				return this._индекс;
			}
			set {
				if ((value != this._индекс)) {
					this.OnPropertyChanging("Индекс", this._индекс);
					this._индекс = value;
					this.OnPropertyChanged("Индекс");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DLC_Description", Storage="_описание8", FieldType="Text")]
		public virtual string Описание8 {
			get {
				return this._описание8;
			}
			set {
				if ((value != this._описание8)) {
					this.OnPropertyChanging("Описание8", this._описание8);
					this._описание8 = value;
					this.OnPropertyChanged("Описание8");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_повторение", FieldType="Recurrence")]
		public virtual System.Nullable<bool> Повторение {
			get {
				return this._повторение;
			}
			set {
				if ((value != this._повторение)) {
					this.OnPropertyChanging("Повторение", this._повторение);
					this._повторение = value;
					this.OnPropertyChanged("Повторение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionLastUpdated", Storage="_обновлено", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Обновлено {
			get {
				return this._обновлено;
			}
			set {
				if ((value != this._обновлено)) {
					this.OnPropertyChanging("Обновлено", this._обновлено);
					this._обновлено = value;
					this.OnPropertyChanged("Обновлено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeAddressCity", Storage="_городДомАдрес", FieldType="Text")]
		public virtual string ГородДомАдрес {
			get {
				return this._городДомАдрес;
			}
			set {
				if ((value != this._городДомАдрес)) {
					this.OnPropertyChanging("ГородДомАдрес", this._городДомАдрес);
					this._городДомАдрес = value;
					this.OnPropertyChanged("ГородДомАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CallbackNumber", Storage="_номерДляОбратногоВызова", FieldType="Text")]
		public virtual string НомерДляОбратногоВызова {
			get {
				return this._номерДляОбратногоВызова;
			}
			set {
				if ((value != this._номерДляОбратногоВызова)) {
					this.OnPropertyChanging("НомерДляОбратногоВызова", this._номерДляОбратногоВызова);
					this._номерДляОбратногоВызова = value;
					this.OnPropertyChanged("НомерДляОбратногоВызова");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkIssueIDNoMenu", Storage="_идентификаторВопроса", ReadOnly=true, FieldType="Computed")]
		public virtual string ИдентификаторВопроса {
			get {
				return this._идентификаторВопроса;
			}
			set {
				if ((value != this._идентификаторВопроса)) {
					this.OnPropertyChanging("ИдентификаторВопроса", this._идентификаторВопроса);
					this._идентификаторВопроса = value;
					this.OnPropertyChanged("ИдентификаторВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeFaxNumber", Storage="_домашнийФакс", FieldType="Text")]
		public virtual string ДомашнийФакс {
			get {
				return this._домашнийФакс;
			}
			set {
				if ((value != this._домашнийФакс)) {
					this.OnPropertyChanging("ДомашнийФакс", this._домашнийФакс);
					this._домашнийФакс = value;
					this.OnPropertyChanged("ДомашнийФакс");
				}
			}
		}
		
		/// <summary>
		/// Количество дней на решение (поручение МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDaysForResolveMVK", Storage="_количествоДнейНаРешение", FieldType="Integer")]
		public virtual System.Nullable<int> КоличествоДнейНаРешение {
			get {
				return this._количествоДнейНаРешение;
			}
			set {
				if ((value != this._количествоДнейНаРешение)) {
					this.OnPropertyChanging("КоличествоДнейНаРешение", this._количествоДнейНаРешение);
					this._количествоДнейНаРешение = value;
					this.OnPropertyChanged("КоличествоДнейНаРешение");
				}
			}
		}
		
		/// <summary>
		/// Папка отображения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PPSMA_DisplayFolder", Storage="_папкаОтображения", FieldType="Text")]
		public virtual string ПапкаОтображения {
			get {
				return this._папкаОтображения;
			}
			set {
				if ((value != this._папкаОтображения)) {
					this.OnPropertyChanging("ПапкаОтображения", this._папкаОтображения);
					this._папкаОтображения = value;
					this.OnPropertyChanged("ПапкаОтображения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslatorName", Storage="_имяПереводчика", FieldType="Text")]
		public virtual string ИмяПереводчика {
			get {
				return this._имяПереводчика;
			}
			set {
				if ((value != this._имяПереводчика)) {
					this.OnPropertyChanging("ИмяПереводчика", this._имяПереводчика);
					this._имяПереводчика = value;
					this.OnPropertyChanged("ИмяПереводчика");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DefaultCssFile", Storage="_cSSФайлПоУмолчанию", FieldType="Text")]
		public virtual string CSSФайлПоУмолчанию {
			get {
				return this._cSSФайлПоУмолчанию;
			}
			set {
				if ((value != this._cSSФайлПоУмолчанию)) {
					this.OnPropertyChanging("CSSФайлПоУмолчанию", this._cSSФайлПоУмолчанию);
					this._cSSФайлПоУмолчанию = value;
					this.OnPropertyChanged("CSSФайлПоУмолчанию");
				}
			}
		}
		
		/// <summary>
		/// Последнее обновление индикатора из его поставщика источников данных
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastUpdated", Storage="_самоеПоследнееОбновлениеДанныхИндикатора", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> СамоеПоследнееОбновлениеДанныхИндикатора {
			get {
				return this._самоеПоследнееОбновлениеДанныхИндикатора;
			}
			set {
				if ((value != this._самоеПоследнееОбновлениеДанныхИндикатора)) {
					this.OnPropertyChanging("СамоеПоследнееОбновлениеДанныхИндикатора", this._самоеПоследнееОбновлениеДанныхИндикатора);
					this._самоеПоследнееОбновлениеДанныхИндикатора = value;
					this.OnPropertyChanged("СамоеПоследнееОбновлениеДанныхИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfReplies", Storage="_ответов", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> Ответов {
			get {
				return this._ответов;
			}
			set {
				if ((value != this._ответов)) {
					this.OnPropertyChanging("Ответов", this._ответов);
					this._ответов = value;
					this.OnPropertyChanged("Ответов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalWork", Storage="_общиеТрудозатраты", FieldType="Number")]
		public virtual System.Nullable<double> ОбщиеТрудозатраты {
			get {
				return this._общиеТрудозатраты;
			}
			set {
				if ((value != this._общиеТрудозатраты)) {
					this.OnPropertyChanging("ОбщиеТрудозатраты", this._общиеТрудозатраты);
					this._общиеТрудозатраты = value;
					this.OnPropertyChanged("ОбщиеТрудозатраты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishedLinksDisplayName", Storage="_отображаемоеИмя0", FieldType="Text")]
		public virtual string ОтображаемоеИмя0 {
			get {
				return this._отображаемоеИмя0;
			}
			set {
				if ((value != this._отображаемоеИмя0)) {
					this.OnPropertyChanging("ОтображаемоеИмя0", this._отображаемоеИмя0);
					this._отображаемоеИмя0 = value;
					this.OnPropertyChanged("ОтображаемоеИмя0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingEnabled", Storage="_активно", Required=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Активно {
			get {
				return this._активно;
			}
			set {
				if ((value != this._активно)) {
					this.OnPropertyChanging("Активно", this._активно);
					this._активно = value;
					this.OnPropertyChanged("Активно");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_срокДействия", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> СрокДействия {
			get {
				return this._срокДействия;
			}
			set {
				if ((value != this._срокДействия)) {
					this.OnPropertyChanging("СрокДействия", this._срокДействия);
					this._срокДействия = value;
					this.OnPropertyChanged("СрокДействия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormDescription", Storage="_описаниеФормы", FieldType="Text")]
		public virtual string ОписаниеФормы {
			get {
				return this._описаниеФормы;
			}
			set {
				if ((value != this._описаниеФормы)) {
					this.OnPropertyChanging("ОписаниеФормы", this._описаниеФормы);
					this._описаниеФормы = value;
					this.OnPropertyChanged("ОписаниеФормы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SipAddress", Storage="_адресSIP", FieldType="Text")]
		public virtual string АдресSIP {
			get {
				return this._адресSIP;
			}
			set {
				if ((value != this._адресSIP)) {
					this.OnPropertyChanging("АдресSIP", this._адресSIP);
					this._адресSIP = value;
					this.OnPropertyChanged("АдресSIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Home2Number", Storage="_домТелефон2", FieldType="Text")]
		public virtual string ДомТелефон2 {
			get {
				return this._домТелефон2;
			}
			set {
				if ((value != this._домТелефон2)) {
					this.OnPropertyChanging("ДомТелефон2", this._домТелефон2);
					this._домТелефон2 = value;
					this.OnPropertyChanged("ДомТелефон2");
				}
			}
		}
		
		/// <summary>
		/// При выборе значения "Автоматическое исправление" программа SharePoint попытается исправить ошибки сразу после того, как они будут найдены.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleAutoRepairEnabled", Storage="_автоматическоеИсправление", FieldType="Boolean")]
		public virtual System.Nullable<bool> АвтоматическоеИсправление {
			get {
				return this._автоматическоеИсправление;
			}
			set {
				if ((value != this._автоматическоеИсправление)) {
					this.OnPropertyChanging("АвтоматическоеИсправление", this._автоматическоеИсправление);
					this._автоматическоеИсправление = value;
					this.OnPropertyChanged("АвтоматическоеИсправление");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoFromHome", Storage="_изДомаВМестнуюКомандировку", FieldType="Boolean")]
		public virtual System.Nullable<bool> ИзДомаВМестнуюКомандировку {
			get {
				return this._изДомаВМестнуюКомандировку;
			}
			set {
				if ((value != this._изДомаВМестнуюКомандировку)) {
					this.OnPropertyChanging("ИзДомаВМестнуюКомандировку", this._изДомаВМестнуюКомандировку);
					this._изДомаВМестнуюКомандировку = value;
					this.OnPropertyChanged("ИзДомаВМестнуюКомандировку");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MachineTranslationLanguageFieldName", Storage="_языкМашинногоПеревода", FieldType="Text")]
		public virtual string ЯзыкМашинногоПеревода {
			get {
				return this._языкМашинногоПеревода;
			}
			set {
				if ((value != this._языкМашинногоПеревода)) {
					this.OnPropertyChanging("ЯзыкМашинногоПеревода", this._языкМашинногоПеревода);
					this._языкМашинногоПеревода = value;
					this.OnPropertyChanged("ЯзыкМашинногоПеревода");
				}
			}
		}
		
		/// <summary>
		/// Идентификационная строка или номер, обычно соответствующие требованиям формальной системы идентификации
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Identifier", Storage="_идентификаторРесурса", FieldType="Text")]
		public virtual string ИдентификаторРесурса {
			get {
				return this._идентификаторРесурса;
			}
			set {
				if ((value != this._идентификаторРесурса)) {
					this.OnPropertyChanging("ИдентификаторРесурса", this._идентификаторРесурса);
					this._идентификаторРесурса = value;
					this.OnPropertyChanged("ИдентификаторРесурса");
				}
			}
		}
		
		/// <summary>
		/// Комментарий к заседанию МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingCommentMVK", Storage="_комментарий", FieldType="Note")]
		public virtual string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		/// <summary>
		/// "Картинка контакта" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для размещения картинки контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactPicture", Storage="_картинкаКонтакта", FieldType="Url")]
		public virtual string КартинкаКонтакта {
			get {
				return this._картинкаКонтакта;
			}
			set {
				if ((value != this._картинкаКонтакта)) {
					this.OnPropertyChanging("КартинкаКонтакта", this._картинкаКонтакта);
					this._картинкаКонтакта = value;
					this.OnPropertyChanged("КартинкаКонтакта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailFrom", Storage="_cообщениеПолеОт", FieldType="Text")]
		public virtual string CообщениеПолеОт {
			get {
				return this._cообщениеПолеОт;
			}
			set {
				if ((value != this._cообщениеПолеОт)) {
					this.OnPropertyChanging("CообщениеПолеОт", this._cообщениеПолеОт);
					this._cообщениеПолеОт = value;
					this.OnPropertyChanged("CообщениеПолеОт");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingAttachmentDescriptionMVK", Storage="_описаниеВложения", FieldType="Note")]
		public virtual string ОписаниеВложения {
			get {
				return this._описаниеВложения;
			}
			set {
				if ((value != this._описаниеВложения)) {
					this.OnPropertyChanging("ОписаниеВложения", this._описаниеВложения);
					this._описаниеВложения = value;
					this.OnPropertyChanged("ОписаниеВложения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSEnabled", Storage="_wSEnabled", FieldType="Boolean")]
		public virtual System.Nullable<bool> WSEnabled {
			get {
				return this._wSEnabled;
			}
			set {
				if ((value != this._wSEnabled)) {
					this.OnPropertyChanging("WSEnabled", this._wSEnabled);
					this._wSEnabled = value;
					this.OnPropertyChanged("WSEnabled");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsHumanTranslationEnabledFieldName", Storage="_включенаЛиФункцияПереводаСУчастиемЧеловека", FieldType="Boolean")]
		public virtual System.Nullable<bool> ВключенаЛиФункцияПереводаСУчастиемЧеловека {
			get {
				return this._включенаЛиФункцияПереводаСУчастиемЧеловека;
			}
			set {
				if ((value != this._включенаЛиФункцияПереводаСУчастиемЧеловека)) {
					this.OnPropertyChanging("ВключенаЛиФункцияПереводаСУчастиемЧеловека", this._включенаЛиФункцияПереводаСУчастиемЧеловека);
					this._включенаЛиФункцияПереводаСУчастиемЧеловека = value;
					this.OnPropertyChanged("ВключенаЛиФункцияПереводаСУчастиемЧеловека");
				}
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.VaryByParams в ASP.Net 2.0.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingVaryByParam", Storage="_вЗависимостиОтПараметровСтрокиЗапроса", FieldType="Text")]
		public virtual string ВЗависимостиОтПараметровСтрокиЗапроса {
			get {
				return this._вЗависимостиОтПараметровСтрокиЗапроса;
			}
			set {
				if ((value != this._вЗависимостиОтПараметровСтрокиЗапроса)) {
					this.OnPropertyChanging("ВЗависимостиОтПараметровСтрокиЗапроса", this._вЗависимостиОтПараметровСтрокиЗапроса);
					this._вЗависимостиОтПараметровСтрокиЗапроса = value;
					this.OnPropertyChanged("ВЗависимостиОтПараметровСтрокиЗапроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateTranslatorName", Storage="_имяПереводчика0", FieldType="Text")]
		public virtual string ИмяПереводчика0 {
			get {
				return this._имяПереводчика0;
			}
			set {
				if ((value != this._имяПереводчика0)) {
					this.OnPropertyChanging("ИмяПереводчика0", this._имяПереводчика0);
					this._имяПереводчика0 = value;
					this.OnPropertyChanged("ИмяПереводчика0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishedLinksURL", Storage="_uRLАдрес", FieldType="Url")]
		public virtual string URLАдрес {
			get {
				return this._uRLАдрес;
			}
			set {
				if ((value != this._uRLАдрес)) {
					this.OnPropertyChanging("URLАдрес", this._uRLАдрес);
					this._uRLАдрес = value;
					this.OnPropertyChanged("URLАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailCalendarUid", Storage="_отправитьИдентификаторUIDКалендаря", FieldType="Note")]
		public virtual string ОтправитьИдентификаторUIDКалендаря {
			get {
				return this._отправитьИдентификаторUIDКалендаря;
			}
			set {
				if ((value != this._отправитьИдентификаторUIDКалендаря)) {
					this.OnPropertyChanging("ОтправитьИдентификаторUIDКалендаря", this._отправитьИдентификаторUIDКалендаря);
					this._отправитьИдентификаторUIDКалендаря = value;
					this.OnPropertyChanged("ОтправитьИдентификаторUIDКалендаря");
				}
			}
		}
		
		/// <summary>
		/// При установке этого флажка включается кэширование. Если этот флажок снят, кэширование не выполняется, независимо от места выбора профиля. Это полезно при устранении неполадок формирования всех сайтов и макетов страниц, связанных с данным профилем кэша. По завершении устранения неполадок не забудьте установить этот флажок. 
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheEnabled", Storage="_включена0", FieldType="Boolean")]
		public virtual System.Nullable<bool> Включена0 {
			get {
				return this._включена0;
			}
			set {
				if ((value != this._включена0)) {
					this.OnPropertyChanging("Включена0", this._включена0);
					this._включена0 = value;
					this.OnPropertyChanged("Включена0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationLanguage", Storage="_языкПеревода", FieldType="Text")]
		public virtual string ЯзыкПеревода {
			get {
				return this._языкПеревода;
			}
			set {
				if ((value != this._языкПеревода)) {
					this.OnPropertyChanging("ЯзыкПеревода", this._языкПеревода);
					this._языкПеревода = value;
					this.OnPropertyChanged("ЯзыкПеревода");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSEventSource", Storage="_wSEventSource", FieldType="Text")]
		public virtual string WSEventSource {
			get {
				return this._wSEventSource;
			}
			set {
				if ((value != this._wSEventSource)) {
					this.OnPropertyChanging("WSEventSource", this._wSEventSource);
					this._wSEventSource = value;
					this.OnPropertyChanged("WSEventSource");
				}
			}
		}
		
		/// <summary>
		/// META с атрибутом Keywords
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoKeywords", Storage="_mETAСАтрибутомKeywords", FieldType="Text")]
		public virtual string METAСАтрибутомKeywords {
			get {
				return this._mETAСАтрибутомKeywords;
			}
			set {
				if ((value != this._mETAСАтрибутомKeywords)) {
					this.OnPropertyChanging("METAСАтрибутомKeywords", this._mETAСАтрибутомKeywords);
					this._mETAСАтрибутомKeywords = value;
					this.OnPropertyChanged("METAСАтрибутомKeywords");
				}
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данной цели
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoalCell", Storage="_ячейкаЦели", FieldType="Text")]
		public virtual string ЯчейкаЦели {
			get {
				return this._ячейкаЦели;
			}
			set {
				if ((value != this._ячейкаЦели)) {
					this.OnPropertyChanging("ЯчейкаЦели", this._ячейкаЦели);
					this._ячейкаЦели = value;
					this.OnPropertyChanged("ЯчейкаЦели");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BillingInformation", Storage="_адресДляВыставленияСчетов", FieldType="Text")]
		public virtual string АдресДляВыставленияСчетов {
			get {
				return this._адресДляВыставленияСчетов;
			}
			set {
				if ((value != this._адресДляВыставленияСчетов)) {
					this.OnPropertyChanging("АдресДляВыставленияСчетов", this._адресДляВыставленияСчетов);
					this._адресДляВыставленияСчетов = value;
					this.OnPropertyChanged("АдресДляВыставленияСчетов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start", Storage="_начало", FieldType="Text")]
		public virtual string Начало {
			get {
				return this._начало;
			}
			set {
				if ((value != this._начало)) {
					this.OnPropertyChanging("Начало", this._начало);
					this._начало = value;
					this.OnPropertyChanged("Начало");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_HasCopyDestinations", Storage="_имеетКопии", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> ИмеетКопии {
			get {
				return this._имеетКопии;
			}
			set {
				if ((value != this._имеетКопии)) {
					this.OnPropertyChanging("ИмеетКопии", this._имеетКопии);
					this._имеетКопии = value;
					this.OnPropertyChanged("ИмеетКопии");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingPreviewImage", Storage="_просмотрРисунка", FieldType="Url")]
		public virtual string ПросмотрРисунка {
			get {
				return this._просмотрРисунка;
			}
			set {
				if ((value != this._просмотрРисунка)) {
					this.OnPropertyChanging("ПросмотрРисунка", this._просмотрРисунка);
					this._просмотрРисунка = value;
					this.OnPropertyChanged("ПросмотрРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastNamePhonetic", Storage="_фамилияПроизношение", FieldType="Text")]
		public virtual string ФамилияПроизношение {
			get {
				return this._фамилияПроизношение;
			}
			set {
				if ((value != this._фамилияПроизношение)) {
					this.OnPropertyChanging("ФамилияПроизношение", this._фамилияПроизношение);
					this._фамилияПроизношение = value;
					this.OnPropertyChanged("ФамилияПроизношение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_CopySource", Storage="_источникКопии", ReadOnly=true, FieldType="Text")]
		public virtual string ИсточникКопии {
			get {
				return this._источникКопии;
			}
			set {
				if ((value != this._источникКопии)) {
					this.OnPropertyChanging("ИсточникКопии", this._источникКопии);
					this._источникКопии = value;
					this.OnPropertyChanged("ИсточникКопии");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportLinkFilename", Storage="_имя1", ReadOnly=true, FieldType="Computed")]
		public virtual string Имя1 {
			get {
				return this._имя1;
			}
			set {
				if ((value != this._имя1)) {
					this.OnPropertyChanging("Имя1", this._имя1);
					this._имя1 = value;
					this.OnPropertyChanged("Имя1");
				}
			}
		}
		
		/// <summary>
		/// "URL-адрес перенаправления" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница перенаправления" для указания веб-адреса, на который будет перенаправлять страница.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RedirectURL", Storage="_uRLАдресПеренаправления", FieldType="Url")]
		public virtual string URLАдресПеренаправления {
			get {
				return this._uRLАдресПеренаправления;
			}
			set {
				if ((value != this._uRLАдресПеренаправления)) {
					this.OnPropertyChanging("URLАдресПеренаправления", this._uRLАдресПеренаправления);
					this._uRLАдресПеренаправления = value;
					this.OnPropertyChanged("URLАдресПеренаправления");
				}
			}
		}
		
		/// <summary>
		/// Имя листа для данной цели
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoalSheet", Storage="_листЦели", FieldType="Text")]
		public virtual string ЛистЦели {
			get {
				return this._листЦели;
			}
			set {
				if ((value != this._листЦели)) {
					this.OnPropertyChanging("ЛистЦели", this._листЦели);
					this._листЦели = value;
					this.OnPropertyChanged("ЛистЦели");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FTPSite", Storage="_адресFTP", FieldType="Url")]
		public virtual string АдресFTP {
			get {
				return this._адресFTP;
			}
			set {
				if ((value != this._адресFTP)) {
					this.OnPropertyChanging("АдресFTP", this._адресFTP);
					this._адресFTP = value;
					this.OnPropertyChanged("АдресFTP");
				}
			}
		}
		
		/// <summary>
		/// Кадастровый номер вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueCadastreIdMVK", Storage="_кадастровыйНомер", FieldType="Text")]
		public virtual string КадастровыйНомер {
			get {
				return this._кадастровыйНомер;
			}
			set {
				if ((value != this._кадастровыйНомер)) {
					this.OnPropertyChanging("КадастровыйНомер", this._кадастровыйНомер);
					this._кадастровыйНомер = value;
					this.OnPropertyChanged("КадастровыйНомер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateEndTime", Storage="_времяВыполненияЗадания", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ВремяВыполненияЗадания {
			get {
				return this._времяВыполненияЗадания;
			}
			set {
				if ((value != this._времяВыполненияЗадания)) {
					this.OnPropertyChanging("ВремяВыполненияЗадания", this._времяВыполненияЗадания);
					this._времяВыполненияЗадания = value;
					this.OnPropertyChanged("ВремяВыполненияЗадания");
				}
			}
		}
		
		/// <summary>
		/// Ответственный исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentResponsibleExecutorMVK", Storage="_ответственныйИсполнитель", FieldType="Text")]
		public virtual string ОтветственныйИсполнитель {
			get {
				return this._ответственныйИсполнитель;
			}
			set {
				if ((value != this._ответственныйИсполнитель)) {
					this.OnPropertyChanging("ОтветственныйИсполнитель", this._ответственныйИсполнитель);
					this._ответственныйИсполнитель = value;
					this.OnPropertyChanged("ОтветственныйИсполнитель");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowInstance", Storage="_родительскийЭкземплярЖурналаРабочихПроцессов", Required=true, FieldType="Guid")]
		public virtual System.Nullable<System.Guid> РодительскийЭкземплярЖурналаРабочихПроцессов {
			get {
				return this._родительскийЭкземплярЖурналаРабочихПроцессов;
			}
			set {
				if ((value != this._родительскийЭкземплярЖурналаРабочихПроцессов)) {
					this.OnPropertyChanging("РодительскийЭкземплярЖурналаРабочихПроцессов", this._родительскийЭкземплярЖурналаРабочихПроцессов);
					this._родительскийЭкземплярЖурналаРабочихПроцессов = value;
					this.OnPropertyChanged("РодительскийЭкземплярЖурналаРабочихПроцессов");
				}
			}
		}
		
		/// <summary>
		/// Набор категорий, функций, стилей и уровней обобщения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_ResourceType", Storage="_типРесурса", FieldType="Text")]
		public virtual string ТипРесурса {
			get {
				return this._типРесурса;
			}
			set {
				if ((value != this._типРесурса)) {
					this.OnPropertyChanging("ТипРесурса", this._типРесурса);
					this._типРесурса = value;
					this.OnPropertyChanged("ТипРесурса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ResolvedDate", Storage="_датаОбработки", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаОбработки {
			get {
				return this._датаОбработки;
			}
			set {
				if ((value != this._датаОбработки)) {
					this.OnPropertyChanging("ДатаОбработки", this._датаОбработки);
					this._датаОбработки = value;
					this.OnPropertyChanged("ДатаОбработки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Confidential", Storage="_дСП", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> ДСП {
			get {
				return this._дСП;
			}
			set {
				if ((value != this._дСП)) {
					this.OnPropertyChanging("ДСП", this._дСП);
					this._дСП = value;
					this.OnPropertyChanged("ДСП");
				}
			}
		}
		
		/// <summary>
		/// Выражение, используемое для определения значения индикатора.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValueExpression", Storage="_выражениеДляЗначения", FieldType="Note")]
		public virtual string ВыражениеДляЗначения {
			get {
				return this._выражениеДляЗначения;
			}
			set {
				if ((value != this._выражениеДляЗначения)) {
					this.OnPropertyChanging("ВыражениеДляЗначения", this._выражениеДляЗначения);
					this._выражениеДляЗначения = value;
					this.OnPropertyChanged("ВыражениеДляЗначения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateJobId", Storage="_идентификаторПакета", Required=true, FieldType="Guid")]
		public virtual System.Nullable<System.Guid> ИдентификаторПакета {
			get {
				return this._идентификаторПакета;
			}
			set {
				if ((value != this._идентификаторПакета)) {
					this.OnPropertyChanging("ИдентификаторПакета", this._идентификаторПакета);
					this._идентификаторПакета = value;
					this.OnPropertyChanged("ИдентификаторПакета");
				}
			}
		}
		
		/// <summary>
		/// Имя листа для данного предупреждения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarningSheet", Storage="_листПредупреждения", FieldType="Text")]
		public virtual string ЛистПредупреждения {
			get {
				return this._листПредупреждения;
			}
			set {
				if ((value != this._листПредупреждения)) {
					this.OnPropertyChanging("ЛистПредупреждения", this._листПредупреждения);
					this._листПредупреждения = value;
					this.OnPropertyChanged("ЛистПредупреждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WhatsNew", Storage="_уведомление", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Уведомление {
			get {
				return this._уведомление;
			}
			set {
				if ((value != this._уведомление)) {
					this.OnPropertyChanging("Уведомление", this._уведомление);
					this._уведомление = value;
					this.OnPropertyChanged("Уведомление");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PagerNumber", Storage="_пейджер", FieldType="Text")]
		public virtual string Пейджер {
			get {
				return this._пейджер;
			}
			set {
				if ((value != this._пейджер)) {
					this.OnPropertyChanging("Пейджер", this._пейджер);
					this._пейджер = value;
					this.OnPropertyChanged("Пейджер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTemplateName", Storage="_имяФормы", ReadOnly=true, FieldType="Computed")]
		public virtual string ИмяФормы {
			get {
				return this._имяФормы;
			}
			set {
				if ((value != this._имяФормы)) {
					this.OnPropertyChanging("ИмяФормы", this._имяФормы);
					this._имяФормы = value;
					this.OnPropertyChanged("ИмяФормы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormId", Storage="_идентификаторФормы", FieldType="Text")]
		public virtual string ИдентификаторФормы {
			get {
				return this._идентификаторФормы;
			}
			set {
				if ((value != this._идентификаторФормы)) {
					this.OnPropertyChanging("ИдентификаторФормы", this._идентификаторФормы);
					this._идентификаторФормы = value;
					this.OnPropertyChanged("ИдентификаторФормы");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на страницу параметров, определяющих условия и область выполнения правила.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleReportLink", Storage="_настройкаПравила", Required=true, FieldType="Url")]
		public virtual string НастройкаПравила {
			get {
				return this._настройкаПравила;
			}
			set {
				if ((value != this._настройкаПравила)) {
					this.OnPropertyChanging("НастройкаПравила", this._настройкаПравила);
					this._настройкаПравила = value;
					this.OnPropertyChanged("НастройкаПравила");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Picture", Storage="_рисунок", FieldType="Url")]
		public virtual string Рисунок {
			get {
				return this._рисунок;
			}
			set {
				if ((value != this._рисунок)) {
					this.OnPropertyChanging("Рисунок", this._рисунок);
					this._рисунок = value;
					this.OnPropertyChanged("Рисунок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Hobbies", Storage="_увлечения", FieldType="Text")]
		public virtual string Увлечения {
			get {
				return this._увлечения;
			}
			set {
				if ((value != this._увлечения)) {
					this.OnPropertyChanging("Увлечения", this._увлечения);
					this._увлечения = value;
					this.OnPropertyChanged("Увлечения");
				}
			}
		}
		
		/// <summary>
		/// Зависимый срок (текстовое представление зависимости от другого поручения МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDependentTermTextMVK", Storage="_зависимыйСрок", FieldType="Text")]
		public virtual string ЗависимыйСрок {
			get {
				return this._зависимыйСрок;
			}
			set {
				if ((value != this._зависимыйСрок)) {
					this.OnPropertyChanging("ЗависимыйСрок", this._зависимыйСрок);
					this._зависимыйСрок = value;
					this.OnPropertyChanged("ЗависимыйСрок");
				}
			}
		}
		
		/// <summary>
		/// Пользователи или организации, добавлявшие содержимое в данный ресурс
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Contributor", Storage="_корреспондент", FieldType="Note")]
		public virtual string Корреспондент {
			get {
				return this._корреспондент;
			}
			set {
				if ((value != this._корреспондент)) {
					this.OnPropertyChanging("Корреспондент", this._корреспондент);
					this._корреспондент = value;
					this.OnPropertyChanged("Корреспондент");
				}
			}
		}
		
		/// <summary>
		/// Решение по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueDecisionMVK", Storage="_решениеПоВопросу", FieldType="Note")]
		public virtual string РешениеПоВопросу {
			get {
				return this._решениеПоВопросу;
			}
			set {
				if ((value != this._решениеПоВопросу)) {
					this.OnPropertyChanging("РешениеПоВопросу", this._решениеПоВопросу);
					this._решениеПоВопросу = value;
					this.OnPropertyChanged("РешениеПоВопросу");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkFilename", Storage="_имя2", ReadOnly=true, FieldType="Computed")]
		public virtual string Имя2 {
			get {
				return this._имя2;
			}
			set {
				if ((value != this._имя2)) {
					this.OnPropertyChanging("Имя2", this._имя2);
					this._имя2 = value;
					this.OnPropertyChanged("Имя2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HtmlDesignStatusAndPreview", Storage="_состояние", FieldType="Url")]
		public virtual string Состояние {
			get {
				return this._состояние;
			}
			set {
				if ((value != this._состояние)) {
					this.OnPropertyChanging("Состояние", this._состояние);
					this._состояние = value;
					this.OnPropertyChanged("Состояние");
				}
			}
		}
		
		/// <summary>
		/// Отображаемое описание, используемое в списке доступных профилей кэша для владельцев сайтов и владельцев макетов страниц.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheDisplayDescription", Storage="_отображатьОписание", FieldType="Text")]
		public virtual string ОтображатьОписание {
			get {
				return this._отображатьОписание;
			}
			set {
				if ((value != this._отображатьОписание)) {
					this.OnPropertyChanging("ОтображатьОписание", this._отображатьОписание);
					this._отображатьОписание = value;
					this.OnPropertyChanged("ОтображатьОписание");
				}
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данного значения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValueCell", Storage="_ячейкаЗначения", FieldType="Text")]
		public virtual string ЯчейкаЗначения {
			get {
				return this._ячейкаЗначения;
			}
			set {
				if ((value != this._ячейкаЗначения)) {
					this.OnPropertyChanging("ЯчейкаЗначения", this._ячейкаЗначения);
					this._ячейкаЗначения = value;
					this.OnPropertyChanged("ЯчейкаЗначения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormVersion", Storage="_версияФормы", FieldType="Text")]
		public virtual string ВерсияФормы {
			get {
				return this._версияФормы;
			}
			set {
				if ((value != this._версияФормы)) {
					this.OnPropertyChanging("ВерсияФормы", this._версияФормы);
					this._версияФормы = value;
					this.OnPropertyChanged("ВерсияФормы");
				}
			}
		}
		
		/// <summary>
		/// При установке этого флажка для каждого запроса страницы проверяется наличие изменений сайта, и в случае изменения сайта кэш очищается. Сняв этот флажок, можно повысить быстродействие за счет пропуска проверки обновлений для сайта в течение интервала в секундах, указанных в поле длительности. 
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheCheckForChanges", Storage="_проверятьНаИзменения", FieldType="Boolean")]
		public virtual System.Nullable<bool> ПроверятьНаИзменения {
			get {
				return this._проверятьНаИзменения;
			}
			set {
				if ((value != this._проверятьНаИзменения)) {
					this.OnPropertyChanging("ПроверятьНаИзменения", this._проверятьНаИзменения);
					this._проверятьНаИзменения = value;
					this.OnPropertyChanged("ПроверятьНаИзменения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRLАдрес0", FieldType="Url")]
		public virtual string URLАдрес0 {
			get {
				return this._uRLАдрес0;
			}
			set {
				if ((value != this._uRLАдрес0)) {
					this.OnPropertyChanging("URLАдрес0", this._uRLАдрес0);
					this._uRLАдрес0 = value;
					this.OnPropertyChanged("URLАдрес0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModifiedDisplay", Storage="_отчетИзменен0", ReadOnly=true, FieldType="Computed")]
		public virtual string ОтчетИзменен0 {
			get {
				return this._отчетИзменен0;
			}
			set {
				if ((value != this._отчетИзменен0)) {
					this.OnPropertyChanging("ОтчетИзменен0", this._отчетИзменен0);
					this._отчетИзменен0 = value;
					this.OnPropertyChanged("ОтчетИзменен0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActualWork", Storage="_фактическиеТрудозатраты", FieldType="Number")]
		public virtual System.Nullable<double> ФактическиеТрудозатраты {
			get {
				return this._фактическиеТрудозатраты;
			}
			set {
				if ((value != this._фактическиеТрудозатраты)) {
					this.OnPropertyChanging("ФактическиеТрудозатраты", this._фактическиеТрудозатраты);
					this._фактическиеТрудозатраты = value;
					this.OnPropertyChanged("ФактическиеТрудозатраты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_запись", ReadOnly=true, FieldType="Computed")]
		public virtual string Запись {
			get {
				return this._запись;
			}
			set {
				if ((value != this._запись)) {
					this.OnPropertyChanging("Запись", this._запись);
					this._запись = value;
					this.OnPropertyChanged("Запись");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishedLinksDescription", Storage="_описание9", FieldType="Note")]
		public virtual string Описание9 {
			get {
				return this._описание9;
			}
			set {
				if ((value != this._описание9)) {
					this.OnPropertyChanging("Описание9", this._описание9);
					this._описание9 = value;
					this.OnPropertyChanged("Описание9");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSGUID", Storage="_wSGUID", FieldType="Guid")]
		public virtual System.Nullable<System.Guid> WSGUID {
			get {
				return this._wSGUID;
			}
			set {
				if ((value != this._wSGUID)) {
					this.OnPropertyChanging("WSGUID", this._wSGUID);
					this._wSGUID = value;
					this.OnPropertyChanged("WSGUID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Group", Storage="_типГруппы", FieldType="Integer")]
		public virtual System.Nullable<int> ТипГруппы {
			get {
				return this._типГруппы;
			}
			set {
				if ((value != this._типГруппы)) {
					this.OnPropertyChanging("ТипГруппы", this._типГруппы);
					this._типГруппы = value;
					this.OnPropertyChanged("ТипГруппы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_город", FieldType="Text")]
		public virtual string Город {
			get {
				return this._город;
			}
			set {
				if ((value != this._город)) {
					this.OnPropertyChanging("Город", this._город);
					this._город = value;
					this.OnPropertyChanged("Город");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishedDate", Storage="_опубликовано", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Опубликовано {
			get {
				return this._опубликовано;
			}
			set {
				if ((value != this._опубликовано)) {
					this.OnPropertyChanging("Опубликовано", this._опубликовано);
					this._опубликовано = value;
					this.OnPropertyChanged("Опубликовано");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowAssociation", Storage="_идентификаторСопоставленияРабочегоПроцесса", Required=true, FieldType="Guid")]
		public virtual System.Nullable<System.Guid> ИдентификаторСопоставленияРабочегоПроцесса {
			get {
				return this._идентификаторСопоставленияРабочегоПроцесса;
			}
			set {
				if ((value != this._идентификаторСопоставленияРабочегоПроцесса)) {
					this.OnPropertyChanging("ИдентификаторСопоставленияРабочегоПроцесса", this._идентификаторСопоставленияРабочегоПроцесса);
					this._идентификаторСопоставленияРабочегоПроцесса = value;
					this.OnPropertyChanged("ИдентификаторСопоставленияРабочегоПроцесса");
				}
			}
		}
		
		/// <summary>
		/// Тема вопроса заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueThemeMVK", Storage="_тема2", Required=true, FieldType="Note")]
		public virtual string Тема2 {
			get {
				return this._тема2;
			}
			set {
				if ((value != this._тема2)) {
					this.OnPropertyChanging("Тема2", this._тема2);
					this._тема2 = value;
					this.OnPropertyChanged("Тема2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Detail", Storage="_сообщение", ReadOnly=true, FieldType="Note")]
		public virtual string Сообщение {
			get {
				return this._сообщение;
			}
			set {
				if ((value != this._сообщение)) {
					this.OnPropertyChanging("Сообщение", this._сообщение);
					this._сообщение = value;
					this.OnPropertyChanged("Сообщение");
				}
			}
		}
		
		/// <summary>
		/// Значение по нормативу
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Значение по нормативу", Storage="_значениеПоНормативу", FieldType="Number")]
		public virtual System.Nullable<double> ЗначениеПоНормативу {
			get {
				return this._значениеПоНормативу;
			}
			set {
				if ((value != this._значениеПоНормативу)) {
					this.OnPropertyChanging("ЗначениеПоНормативу", this._значениеПоНормативу);
					this._значениеПоНормативу = value;
					this.OnPropertyChanged("ЗначениеПоНормативу");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyNumber", Storage="_основнойТелефонОрганизации", FieldType="Text")]
		public virtual string ОсновнойТелефонОрганизации {
			get {
				return this._основнойТелефонОрганизации;
			}
			set {
				if ((value != this._основнойТелефонОрганизации)) {
					this.OnPropertyChanging("ОсновнойТелефонОрганизации", this._основнойТелефонОрганизации);
					this._основнойТелефонОрганизации = value;
					this.OnPropertyChanged("ОсновнойТелефонОрганизации");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TopicCount", Storage="_обсуждения", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> Обсуждения {
			get {
				return this._обсуждения;
			}
			set {
				if ((value != this._обсуждения)) {
					this.OnPropertyChanging("Обсуждения", this._обсуждения);
					this._обсуждения = value;
					this.OnPropertyChanged("Обсуждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_странаИлиРегион", FieldType="Text")]
		public virtual string СтранаИлиРегион {
			get {
				return this._странаИлиРегион;
			}
			set {
				if ((value != this._странаИлиРегион)) {
					this.OnPropertyChanging("СтранаИлиРегион", this._странаИлиРегион);
					this._странаИлиРегион = value;
					this.OnPropertyChanged("СтранаИлиРегион");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEUrl", Storage="_uRLАдрес1", FieldType="Url")]
		public virtual string URLАдрес1 {
			get {
				return this._uRLАдрес1;
			}
			set {
				if ((value != this._uRLАдрес1)) {
					this.OnPropertyChanging("URLАдрес1", this._uRLАдрес1);
					this._uRLАдрес1 = value;
					this.OnPropertyChanged("URLАдрес1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Initials", Storage="_инициалы", FieldType="Text")]
		public virtual string Инициалы {
			get {
				return this._инициалы;
			}
			set {
				if ((value != this._инициалы)) {
					this.OnPropertyChanging("Инициалы", this._инициалы);
					this._инициалы = value;
					this.OnPropertyChanged("Инициалы");
				}
			}
		}
		
		/// <summary>
		/// Планируемый срок исполнения поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanDateMVK", Storage="_срокИсполненияПоручения", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> СрокИсполненияПоручения {
			get {
				return this._срокИсполненияПоручения;
			}
			set {
				if ((value != this._срокИсполненияПоручения)) {
					this.OnPropertyChanging("СрокИсполненияПоручения", this._срокИсполненияПоручения);
					this._срокИсполненияПоручения = value;
					this.OnPropertyChanged("СрокИсполненияПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Notes", Storage="_обоМне", FieldType="Note")]
		public virtual string ОбоМне {
			get {
				return this._обоМне;
			}
			set {
				if ((value != this._обоМне)) {
					this.OnPropertyChanging("ОбоМне", this._обоМне);
					this._обоМне = value;
					this.OnPropertyChanged("ОбоМне");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserInfoHidden", Storage="_скрытое", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Скрытое {
			get {
				return this._скрытое;
			}
			set {
				if ((value != this._скрытое)) {
					this.OnPropertyChanging("Скрытое", this._скрытое);
					this._скрытое = value;
					this.OnPropertyChanged("Скрытое");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NameOrTitle", Storage="_имя3", ReadOnly=true, FieldType="Computed")]
		public virtual string Имя3 {
			get {
				return this._имя3;
			}
			set {
				if ((value != this._имя3)) {
					this.OnPropertyChanging("Имя3", this._имя3);
					this._имя3 = value;
					this.OnPropertyChanged("Имя3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfBestResponses", Storage="_лучшиеОтветы", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> ЛучшиеОтветы {
			get {
				return this._лучшиеОтветы;
			}
			set {
				if ((value != this._лучшиеОтветы)) {
					this.OnPropertyChanging("ЛучшиеОтветы", this._лучшиеОтветы);
					this._лучшиеОтветы = value;
					this.OnPropertyChanged("ЛучшиеОтветы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyPhonetic", Storage="_организацияПроизношение", FieldType="Text")]
		public virtual string ОрганизацияПроизношение {
			get {
				return this._организацияПроизношение;
			}
			set {
				if ((value != this._организацияПроизношение)) {
					this.OnPropertyChanging("ОрганизацияПроизношение", this._организацияПроизношение);
					this._организацияПроизношение = value;
					this.OnPropertyChanged("ОрганизацияПроизношение");
				}
			}
		}
		
		/// <summary>
		/// Обязательные поля для этого стиля в формате: поле1; поле2;
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="XSLStyleRequiredFields", Storage="_требуемыеПоля", FieldType="Text")]
		public virtual string ТребуемыеПоля {
			get {
				return this._требуемыеПоля;
			}
			set {
				if ((value != this._требуемыеПоля)) {
					this.OnPropertyChanging("ТребуемыеПоля", this._требуемыеПоля);
					this._требуемыеПоля = value;
					this.OnPropertyChanged("ТребуемыеПоля");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_заметки0", FieldType="Note")]
		public virtual string Заметки0 {
			get {
				return this._заметки0;
			}
			set {
				if ((value != this._заметки0)) {
					this.OnPropertyChanging("Заметки0", this._заметки0);
					this._заметки0 = value;
					this.OnPropertyChanged("Заметки0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="List", Storage="_идентификаторСписка", Required=true, FieldType="Guid")]
		public virtual System.Nullable<System.Guid> ИдентификаторСписка {
			get {
				return this._идентификаторСписка;
			}
			set {
				if ((value != this._идентификаторСписка)) {
					this.OnPropertyChanging("ИдентификаторСписка", this._идентификаторСписка);
					this._идентификаторСписка = value;
					this.OnPropertyChanged("ИдентификаторСписка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Overtime", Storage="_сверхурочные", FieldType="Text")]
		public virtual string Сверхурочные {
			get {
				return this._сверхурочные;
			}
			set {
				if ((value != this._сверхурочные)) {
					this.OnPropertyChanging("Сверхурочные", this._сверхурочные);
					this._сверхурочные = value;
					this.OnPropertyChanged("Сверхурочные");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateTermInformation", Storage="_термины", FieldType="Note")]
		public virtual string Термины {
			get {
				return this._термины;
			}
			set {
				if ((value != this._термины)) {
					this.OnPropertyChanging("Термины", this._термины);
					this._термины = value;
					this.OnPropertyChanged("Термины");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSDescription", Storage="_wSDescription", FieldType="Text")]
		public virtual string WSDescription {
			get {
				return this._wSDescription;
			}
			set {
				if ((value != this._wSDescription)) {
					this.OnPropertyChanging("WSDescription", this._wSDescription);
					this._wSDescription = value;
					this.OnPropertyChanged("WSDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_датаНачала", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаНачала {
			get {
				return this._датаНачала;
			}
			set {
				if ((value != this._датаНачала)) {
					this.OnPropertyChanging("ДатаНачала", this._датаНачала);
					this._датаНачала = value;
					this.OnPropertyChanged("ДатаНачала");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkAddress", Storage="_адрес", FieldType="Note")]
		public virtual string Адрес {
			get {
				return this._адрес;
			}
			set {
				if ((value != this._адрес)) {
					this.OnPropertyChanging("Адрес", this._адрес);
					this._адрес = value;
					this.OnPropertyChanged("Адрес");
				}
			}
		}
		
		/// <summary>
		/// Место проведения заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingPlaceMVK", Storage="_местоПроведенияЗаседания", FieldType="Note")]
		public virtual string МестоПроведенияЗаседания {
			get {
				return this._местоПроведенияЗаседания;
			}
			set {
				if ((value != this._местоПроведенияЗаседания)) {
					this.OnPropertyChanging("МестоПроведенияЗаседания", this._местоПроведенияЗаседания);
					this._местоПроведенияЗаседания = value;
					this.OnPropertyChanged("МестоПроведенияЗаседания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherAddressCity", Storage="_городДопАдрес", FieldType="Text")]
		public virtual string ГородДопАдрес {
			get {
				return this._городДопАдрес;
			}
			set {
				if ((value != this._городДопАдрес)) {
					this.OnPropertyChanging("ГородДопАдрес", this._городДопАдрес);
					this._городДопАдрес = value;
					this.OnPropertyChanged("ГородДопАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskCompanies", Storage="_дочерняяОрганизация", FieldType="Text")]
		public virtual string ДочерняяОрганизация {
			get {
				return this._дочерняяОрганизация;
			}
			set {
				if ((value != this._дочерняяОрганизация)) {
					this.OnPropertyChanging("ДочерняяОрганизация", this._дочерняяОрганизация);
					this._дочерняяОрганизация = value;
					this.OnPropertyChanged("ДочерняяОрганизация");
				}
			}
		}
		
		/// <summary>
		/// Номер поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AsignmentNumberMVK", Storage="_номерПоручения", Required=true, FieldType="Text")]
		public virtual string НомерПоручения {
			get {
				return this._номерПоручения;
			}
			set {
				if ((value != this._номерПоручения)) {
					this.OnPropertyChanging("НомерПоручения", this._номерПоручения);
					this._номерПоручения = value;
					this.OnPropertyChanged("НомерПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomerID", Storage="_настраиваемыйИдентификатор", FieldType="Text")]
		public virtual string НастраиваемыйИдентификатор {
			get {
				return this._настраиваемыйИдентификатор;
			}
			set {
				if ((value != this._настраиваемыйИдентификатор)) {
					this.OnPropertyChanging("НастраиваемыйИдентификатор", this._настраиваемыйИдентификатор);
					this._настраиваемыйИдентификатор = value;
					this.OnPropertyChanged("НастраиваемыйИдентификатор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingAttachmentProtocolCopyMVK", Storage="_сканКопияПротокола", FieldType="Boolean")]
		public virtual System.Nullable<bool> СканКопияПротокола {
			get {
				return this._сканКопияПротокола;
			}
			set {
				if ((value != this._сканКопияПротокола)) {
					this.OnPropertyChanging("СканКопияПротокола", this._сканКопияПротокола);
					this._сканКопияПротокола = value;
					this.OnPropertyChanged("СканКопияПротокола");
				}
			}
		}
		
		/// <summary>
		/// "Адрес эл. почты контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания адреса электронной почты контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactEmail", Storage="_адресЭлектроннойПочтыКонтакта", FieldType="Text")]
		public virtual string АдресЭлектроннойПочтыКонтакта {
			get {
				return this._адресЭлектроннойПочтыКонтакта;
			}
			set {
				if ((value != this._адресЭлектроннойПочтыКонтакта)) {
					this.OnPropertyChanging("АдресЭлектроннойПочтыКонтакта", this._адресЭлектроннойПочтыКонтакта);
					this._адресЭлектроннойПочтыКонтакта = value;
					this.OnPropertyChanged("АдресЭлектроннойПочтыКонтакта");
				}
			}
		}
		
		/// <summary>
		/// Определяет, отображается ли на странице видеопроигрывателя кнопка, позволяющая пользователю загрузить воспроизводимое видео.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoSetShowDownloadLink", Storage="_показатьСсылкуДляЗагрузки", FieldType="Boolean")]
		public System.Nullable<bool> ПоказатьСсылкуДляЗагрузки {
			get {
				return this._показатьСсылкуДляЗагрузки;
			}
			set {
				if ((value != this._показатьСсылкуДляЗагрузки)) {
					this.OnPropertyChanging("ПоказатьСсылкуДляЗагрузки", this._показатьСсылкуДляЗагрузки);
					this._показатьСсылкуДляЗагрузки = value;
					this.OnPropertyChanged("ПоказатьСсылкуДляЗагрузки");
				}
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, контент данного элемента списка будет вставляться на веб-страницы как ссылка только для чтения. Новые версии данного элемента будут отображаться на веб-страницах автоматически. Если параметр не выбран, контент данного элемента списка будет вставляться на веб-страницы как копия, доступная авторам страниц для изменения. Новые версии данного элемента не будут автоматически отображаться на веб-страницах. Любые изменения этого параметра не будут влиять на существующие веб-страницы, использующие данный элемент.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutomaticUpdate", Storage="_автоматическоеОбновление", FieldType="Boolean")]
		public virtual System.Nullable<bool> АвтоматическоеОбновление {
			get {
				return this._автоматическоеОбновление;
			}
			set {
				if ((value != this._автоматическоеОбновление)) {
					this.OnPropertyChanging("АвтоматическоеОбновление", this._автоматическоеОбновление);
					this._автоматическоеОбновление = value;
					this.OnPropertyChanged("АвтоматическоеОбновление");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSDisplayName", Storage="_wSDisplayName", FieldType="Text")]
		public virtual string WSDisplayName {
			get {
				return this._wSDisplayName;
			}
			set {
				if ((value != this._wSDisplayName)) {
					this.OnPropertyChanging("WSDisplayName", this._wSDisplayName);
					this._wSDisplayName = value;
					this.OnPropertyChanged("WSDisplayName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateNumberOfItems", Storage="_числоЭлементов", FieldType="Number")]
		public virtual System.Nullable<double> ЧислоЭлементов {
			get {
				return this._числоЭлементов;
			}
			set {
				if ((value != this._числоЭлементов)) {
					this.OnPropertyChanging("ЧислоЭлементов", this._числоЭлементов);
					this._числоЭлементов = value;
					this.OnPropertyChanged("ЧислоЭлементов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Data", Storage="_данные", FieldType="Note")]
		public virtual string Данные {
			get {
				return this._данные;
			}
			set {
				if ((value != this._данные)) {
					this.OnPropertyChanging("Данные", this._данные);
					this._данные = value;
					this.OnPropertyChanged("Данные");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherNumber", Storage="_другойТелефон", FieldType="Text")]
		public virtual string ДругойТелефон {
			get {
				return this._другойТелефон;
			}
			set {
				if ((value != this._другойТелефон)) {
					this.OnPropertyChanging("ДругойТелефон", this._другойТелефон);
					this._другойТелефон = value;
					this.OnPropertyChanged("ДругойТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ComputerNetworkName", Storage="_сетевоеИмяКомпьютера", FieldType="Text")]
		public virtual string СетевоеИмяКомпьютера {
			get {
				return this._сетевоеИмяКомпьютера;
			}
			set {
				if ((value != this._сетевоеИмяКомпьютера)) {
					this.OnPropertyChanging("СетевоеИмяКомпьютера", this._сетевоеИмяКомпьютера);
					this._сетевоеИмяКомпьютера = value;
					this.OnPropertyChanged("СетевоеИмяКомпьютера");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Revision", Storage="_редакция", FieldType="Text")]
		public virtual string Редакция {
			get {
				return this._редакция;
			}
			set {
				if ((value != this._редакция)) {
					this.OnPropertyChanging("Редакция", this._редакция);
					this._редакция = value;
					this.OnPropertyChanged("Редакция");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCreatedDisplay", Storage="_отчетСоздан", ReadOnly=true, FieldType="Computed")]
		public virtual string ОтчетСоздан {
			get {
				return this._отчетСоздан;
			}
			set {
				if ((value != this._отчетСоздан)) {
					this.OnPropertyChanging("ОтчетСоздан", this._отчетСоздан);
					this._отчетСоздан = value;
					this.OnPropertyChanged("ОтчетСоздан");
				}
			}
		}
		
		/// <summary>
		/// Я задаю вопрос и хочу получить ответы от других участников.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsQuestion", Storage="_вопрос", FieldType="Boolean")]
		public virtual System.Nullable<bool> Вопрос {
			get {
				return this._вопрос;
			}
			set {
				if ((value != this._вопрос)) {
					this.OnPropertyChanging("Вопрос", this._вопрос);
					this._вопрос = value;
					this.OnPropertyChanged("Вопрос");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GbwLocation", Storage="_расположение0", ReadOnly=true, FieldType="Text")]
		public virtual string Расположение0 {
			get {
				return this._расположение0;
			}
			set {
				if ((value != this._расположение0)) {
					this.OnPropertyChanging("Расположение0", this._расположение0);
					this._расположение0 = value;
					this.OnPropertyChanged("Расположение0");
				}
			}
		}
		
		/// <summary>
		/// Выберите данный параметр, если необходимо вывести этот повторно используемый элемент контента в раскрывающемся меню, доступном при редактировании страницы. Это позволяет быстро добавлять элементы на странице.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInRibbon", Storage="_показыватьВРаскрывающемсяМеню", FieldType="Boolean")]
		public virtual System.Nullable<bool> ПоказыватьВРаскрывающемсяМеню {
			get {
				return this._показыватьВРаскрывающемсяМеню;
			}
			set {
				if ((value != this._показыватьВРаскрывающемсяМеню)) {
					this.OnPropertyChanging("ПоказыватьВРаскрывающемсяМеню", this._показыватьВРаскрывающемсяМеню);
					this._показыватьВРаскрывающемсяМеню = value;
					this.OnPropertyChanged("ПоказыватьВРаскрывающемсяМеню");
				}
			}
		}
		
		/// <summary>
		/// Дата проведения заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingDateMVK", Storage="_датаПроведения", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаПроведения {
			get {
				return this._датаПроведения;
			}
			set {
				if ((value != this._датаПроведения)) {
					this.OnPropertyChanging("ДатаПроведения", this._датаПроведения);
					this._датаПроведения = value;
					this.OnPropertyChanged("ДатаПроведения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateExportJobSize", Storage="_размерЗаданияЭкспорта", FieldType="Number")]
		public virtual System.Nullable<double> РазмерЗаданияЭкспорта {
			get {
				return this._размерЗаданияЭкспорта;
			}
			set {
				if ((value != this._размерЗаданияЭкспорта)) {
					this.OnPropertyChanging("РазмерЗаданияЭкспорта", this._размерЗаданияЭкспорта);
					this._размерЗаданияЭкспорта = value;
					this.OnPropertyChanged("РазмерЗаданияЭкспорта");
				}
			}
		}
		
		/// <summary>
		/// При установке этого флажка обеспечивается фильтрация кэша в соответствии с ролями безопасности. Если данный флажок снят, повышается быстродействие, но это должно применяться только к сайтам или макетам страниц, которые не содержат сведений, требующих фильтрации по ролям.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCachePerformACLCheck", Storage="_выполнятьПроверкуACL", FieldType="Boolean")]
		public virtual System.Nullable<bool> ВыполнятьПроверкуACL {
			get {
				return this._выполнятьПроверкуACL;
			}
			set {
				if ((value != this._выполнятьПроверкуACL)) {
					this.OnPropertyChanging("ВыполнятьПроверкуACL", this._выполнятьПроверкуACL);
					this._выполнятьПроверкуACL = value;
					this.OnPropertyChanged("ВыполнятьПроверкуACL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Out", Storage="_уход", FieldType="Text")]
		public virtual string Уход {
			get {
				return this._уход;
			}
			set {
				if ((value != this._уход)) {
					this.OnPropertyChanging("Уход", this._уход);
					this._уход = value;
					this.OnPropertyChanged("Уход");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AllowEditing", Storage="_разрешитьИзменение", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> РазрешитьИзменение {
			get {
				return this._разрешитьИзменение;
			}
			set {
				if ((value != this._разрешитьИзменение)) {
					this.OnPropertyChanging("РазрешитьИзменение", this._разрешитьИзменение);
					this._разрешитьИзменение = value;
					this.OnPropertyChanged("РазрешитьИзменение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormLocale", Storage="_языкФормы", FieldType="Text")]
		public virtual string ЯзыкФормы {
			get {
				return this._языкФормы;
			}
			set {
				if ((value != this._языкФормы)) {
					this.OnPropertyChanging("ЯзыкФормы", this._языкФормы);
					this._языкФормы = value;
					this.OnPropertyChanged("ЯзыкФормы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Warning", Storage="_порогПредупрежденияИндикатора", FieldType="Number")]
		public virtual System.Nullable<double> ПорогПредупрежденияИндикатора {
			get {
				return this._порогПредупрежденияИндикатора;
			}
			set {
				if ((value != this._порогПредупрежденияИндикатора)) {
					this.OnPropertyChanging("ПорогПредупрежденияИндикатора", this._порогПредупрежденияИндикатора);
					this._порогПредупрежденияИндикатора = value;
					this.OnPropertyChanged("ПорогПредупрежденияИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserField2", Storage="_допПоле2", FieldType="Text")]
		public virtual string ДопПоле2 {
			get {
				return this._допПоле2;
			}
			set {
				if ((value != this._допПоле2)) {
					this.OnPropertyChanging("ДопПоле2", this._допПоле2);
					this._допПоле2 = value;
					this.OnPropertyChanged("ДопПоле2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowTemplate", Storage="_идентификаторШаблонаРабочегоПроцесса", Required=true, FieldType="Guid")]
		public virtual System.Nullable<System.Guid> ИдентификаторШаблонаРабочегоПроцесса {
			get {
				return this._идентификаторШаблонаРабочегоПроцесса;
			}
			set {
				if ((value != this._идентификаторШаблонаРабочегоПроцесса)) {
					this.OnPropertyChanging("ИдентификаторШаблонаРабочегоПроцесса", this._идентификаторШаблонаРабочегоПроцесса);
					this._идентификаторШаблонаРабочегоПроцесса = value;
					this.OnPropertyChanged("ИдентификаторШаблонаРабочегоПроцесса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DescendantLikesCount", Storage="_сводныйСчетчикОценокНравится", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> СводныйСчетчикОценокНравится {
			get {
				return this._сводныйСчетчикОценокНравится;
			}
			set {
				if ((value != this._сводныйСчетчикОценокНравится)) {
					this.OnPropertyChanging("СводныйСчетчикОценокНравится", this._сводныйСчетчикОценокНравится);
					this._сводныйСчетчикОценокНравится = value;
					this.OnPropertyChanged("СводныйСчетчикОценокНравится");
				}
			}
		}
		
		/// <summary>
		/// Является ли источником предупреждения книга или определение индикатора
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarningFromWorkBook", Storage="_предупреждениеИзКниги", FieldType="Boolean")]
		public virtual System.Nullable<bool> ПредупреждениеИзКниги {
			get {
				return this._предупреждениеИзКниги;
			}
			set {
				if ((value != this._предупреждениеИзКниги)) {
					this.OnPropertyChanging("ПредупреждениеИзКниги", this._предупреждениеИзКниги);
					this._предупреждениеИзКниги = value;
					this.OnPropertyChanged("ПредупреждениеИзКниги");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Photo", Storage="_фотографияКонтакта", FieldType="Url")]
		public virtual string ФотографияКонтакта {
			get {
				return this._фотографияКонтакта;
			}
			set {
				if ((value != this._фотографияКонтакта)) {
					this.OnPropertyChanging("ФотографияКонтакта", this._фотографияКонтакта);
					this._фотографияКонтакта = value;
					this.OnPropertyChanged("ФотографияКонтакта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Suffix", Storage="_суффикс", FieldType="Text")]
		public virtual string Суффикс {
			get {
				return this._суффикс;
			}
			set {
				if ((value != this._суффикс)) {
					this.OnPropertyChanging("Суффикс", this._суффикс);
					this._суффикс = value;
					this.OnPropertyChanged("Суффикс");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueNumberMVK", Storage="_номерВопроса", FieldType="Integer")]
		public virtual System.Nullable<int> НомерВопроса {
			get {
				return this._номерВопроса;
			}
			set {
				if ((value != this._номерВопроса)) {
					this.OnPropertyChanging("НомерВопроса", this._номерВопроса);
					this._номерВопроса = value;
					this.OnPropertyChanged("НомерВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSPublishState", Storage="_wSPublishState", FieldType="Integer")]
		public virtual System.Nullable<int> WSPublishState {
			get {
				return this._wSPublishState;
			}
			set {
				if ((value != this._wSPublishState)) {
					this.OnPropertyChanging("WSPublishState", this._wSPublishState);
					this._wSPublishState = value;
					this.OnPropertyChanged("WSPublishState");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateErrors", Storage="_ошибки", FieldType="Note")]
		public virtual string Ошибки {
			get {
				return this._ошибки;
			}
			set {
				if ((value != this._ошибки)) {
					this.OnPropertyChanging("Ошибки", this._ошибки);
					this._ошибки = value;
					this.OnPropertyChanged("Ошибки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Late", Storage="_позднийПриход", FieldType="Text")]
		public virtual string ПозднийПриход {
			get {
				return this._позднийПриход;
			}
			set {
				if ((value != this._позднийПриход)) {
					this.OnPropertyChanging("ПозднийПриход", this._позднийПриход);
					this._позднийПриход = value;
					this.OnPropertyChanged("ПозднийПриход");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileSizeDisplay", Storage="_размерФайла", ReadOnly=true, FieldType="Computed")]
		public virtual string РазмерФайла {
			get {
				return this._размерФайла;
			}
			set {
				if ((value != this._размерФайла)) {
					this.OnPropertyChanging("РазмерФайла", this._размерФайла);
					this._размерФайла = value;
					this.OnPropertyChanged("РазмерФайла");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInCatalog", Storage="_показыватьВКаталоге", FieldType="Boolean")]
		public virtual System.Nullable<bool> ПоказыватьВКаталоге {
			get {
				return this._показыватьВКаталоге;
			}
			set {
				if ((value != this._показыватьВКаталоге)) {
					this.OnPropertyChanging("ПоказыватьВКаталоге", this._показыватьВКаталоге);
					this._показыватьВКаталоге = value;
					this.OnPropertyChanged("ПоказыватьВКаталоге");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OffsiteParticipantReason", Storage="_причинаВнешнегоУчастника", ReadOnly=true, FieldType="Text")]
		public virtual string ПричинаВнешнегоУчастника {
			get {
				return this._причинаВнешнегоУчастника;
			}
			set {
				if ((value != this._причинаВнешнегоУчастника)) {
					this.OnPropertyChanging("ПричинаВнешнегоУчастника", this._причинаВнешнегоУчастника);
					this._причинаВнешнегоУчастника = value;
					this.OnPropertyChanged("ПричинаВнешнегоУчастника");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastPostDate", Storage="_датаПоследнейЗаписи", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаПоследнейЗаписи {
			get {
				return this._датаПоследнейЗаписи;
			}
			set {
				if ((value != this._датаПоследнейЗаписи)) {
					this.OnPropertyChanging("ДатаПоследнейЗаписи", this._датаПоследнейЗаписи);
					this._датаПоследнейЗаписи = value;
					this.OnPropertyChanged("ДатаПоследнейЗаписи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_датаВыполнения", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаВыполнения {
			get {
				return this._датаВыполнения;
			}
			set {
				if ((value != this._датаВыполнения)) {
					this.OnPropertyChanging("ДатаВыполнения", this._датаВыполнения);
					this._датаВыполнения = value;
					this.OnPropertyChanged("ДатаВыполнения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarNumber", Storage="_телефонВМашине", FieldType="Text")]
		public virtual string ТелефонВМашине {
			get {
				return this._телефонВМашине;
			}
			set {
				if ((value != this._телефонВМашине)) {
					this.OnPropertyChanging("ТелефонВМашине", this._телефонВМашине);
					this._телефонВМашине = value;
					this.OnPropertyChanged("ТелефонВМашине");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FirstNamePhonetic", Storage="_имяПроизношение", FieldType="Text")]
		public virtual string ИмяПроизношение {
			get {
				return this._имяПроизношение;
			}
			set {
				if ((value != this._имяПроизношение)) {
					this.OnPropertyChanging("ИмяПроизношение", this._имяПроизношение);
					this._имяПроизношение = value;
					this.OnPropertyChanged("ИмяПроизношение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferredBy", Storage="_указанВСсылкеИз", FieldType="Text")]
		public virtual string УказанВСсылкеИз {
			get {
				return this._указанВСсылкеИз;
			}
			set {
				if ((value != this._указанВСсылкеИз)) {
					this.OnPropertyChanging("УказанВСсылкеИз", this._указанВСсылкеИз);
					this._указанВСсылкеИз = value;
					this.OnPropertyChanged("УказанВСсылкеИз");
				}
			}
		}
		
		/// <summary>
		/// Службы, для которых обнаружено несоответствие правилу анализатора работоспособности при последней проверке.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportServers", Storage="_серверыСоСбоями", FieldType="Note")]
		public virtual string СерверыСоСбоями {
			get {
				return this._серверыСоСбоями;
			}
			set {
				if ((value != this._серверыСоСбоями)) {
					this.OnPropertyChanging("СерверыСоСбоями", this._серверыСоСбоями);
					this._серверыСоСбоями = value;
					this.OnPropertyChanged("СерверыСоСбоями");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Edit", Storage="_изменить", ReadOnly=true, FieldType="Computed")]
		public virtual string Изменить {
			get {
				return this._изменить;
			}
			set {
				if ((value != this._изменить)) {
					this.OnPropertyChanging("Изменить", this._изменить);
					this._изменить = value;
					this.OnPropertyChanged("Изменить");
				}
			}
		}
		
		/// <summary>
		/// Возможные способы устранения ошибки
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportRemedy", Storage="_способУстранения", Required=true, FieldType="Note")]
		public virtual string СпособУстранения {
			get {
				return this._способУстранения;
			}
			set {
				if ((value != this._способУстранения)) {
					this.OnPropertyChanging("СпособУстранения", this._способУстранения);
					this._способУстранения = value;
					this.OnPropertyChanged("СпособУстранения");
				}
			}
		}
		
		/// <summary>
		/// Установите этот флажок, если ваш сайт оптимизирован для данного канала. Если вы работаете над активным сайтом, не активируйте этот канал, пока не завершите его разработку.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ChannelIsActive", Storage="_активный", FieldType="Boolean")]
		public virtual System.Nullable<bool> Активный {
			get {
				return this._активный;
			}
			set {
				if ((value != this._активный)) {
					this.OnPropertyChanging("Активный", this._активный);
					this._активный = value;
					this.OnPropertyChanged("Активный");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Until", Storage="_окончание0", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Окончание0 {
			get {
				return this._окончание0;
			}
			set {
				if ((value != this._окончание0)) {
					this.OnPropertyChanging("Окончание0", this._окончание0);
					this._окончание0 = value;
					this.OnPropertyChanged("Окончание0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_образец", FieldType="Computed")]
		public virtual string Образец {
			get {
				return this._образец;
			}
			set {
				if ((value != this._образец)) {
					this.OnPropertyChanging("Образец", this._образец);
					this._образец = value;
					this.OnPropertyChanged("Образец");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DLC_Duration", Storage="_длительность", FieldType="Number")]
		public virtual System.Nullable<double> Длительность {
			get {
				return this._длительность;
			}
			set {
				if ((value != this._длительность)) {
					this.OnPropertyChanging("Длительность", this._длительность);
					this._длительность = value;
					this.OnPropertyChanged("Длительность");
				}
			}
		}
		
		/// <summary>
		/// Изображение
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PPSMA_FCOImage", Storage="_изображение", FieldType="Url")]
		public virtual string Изображение {
			get {
				return this._изображение;
			}
			set {
				if ((value != this._изображение)) {
					this.OnPropertyChanging("Изображение", this._изображение);
					this._изображение = value;
					this.OnPropertyChanged("Изображение");
				}
			}
		}
		
		/// <summary>
		/// Идентификатор стиля представления для этого стиля
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="XSLStyleBaseView", Storage="_идентификаторСтиляПредставления", FieldType="Text")]
		public virtual string ИдентификаторСтиляПредставления {
			get {
				return this._идентификаторСтиляПредставления;
			}
			set {
				if ((value != this._идентификаторСтиляПредставления)) {
					this.OnPropertyChanging("ИдентификаторСтиляПредставления", this._идентификаторСтиляПредставления);
					this._идентификаторСтиляПредставления = value;
					this.OnPropertyChanged("ИдентификаторСтиляПредставления");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal", Storage="_порогЦелиИндикатора", FieldType="Number")]
		public virtual System.Nullable<double> ПорогЦелиИндикатора {
			get {
				return this._порогЦелиИндикатора;
			}
			set {
				if ((value != this._порогЦелиИндикатора)) {
					this.OnPropertyChanging("ПорогЦелиИндикатора", this._порогЦелиИндикатора);
					this._порогЦелиИндикатора = value;
					this.OnPropertyChanged("ПорогЦелиИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingConditionProperties", Storage="_свойстваИспользуемыеВУсловиях", Required=true, FieldType="Note")]
		public virtual string СвойстваИспользуемыеВУсловиях {
			get {
				return this._свойстваИспользуемыеВУсловиях;
			}
			set {
				if ((value != this._свойстваИспользуемыеВУсловиях)) {
					this.OnPropertyChanging("СвойстваИспользуемыеВУсловиях", this._свойстваИспользуемыеВУсловиях);
					this._свойстваИспользуемыеВУсловиях = value;
					this.OnPropertyChanged("СвойстваИспользуемыеВУсловиях");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingRuleName", Storage="_имяПравила", Required=true, FieldType="Text")]
		public virtual string ИмяПравила {
			get {
				return this._имяПравила;
			}
			set {
				if ((value != this._имяПравила)) {
					this.OnPropertyChanging("ИмяПравила", this._имяПравила);
					this._имяПравила = value;
					this.OnPropertyChanged("ИмяПравила");
				}
			}
		}
		
		/// <summary>
		/// Пользователь, организация или служба, опубликовавшие данный ресурс
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Publisher", Storage="_опубликовавший", FieldType="Text")]
		public virtual string Опубликовавший {
			get {
				return this._опубликовавший;
			}
			set {
				if ((value != this._опубликовавший)) {
					this.OnPropertyChanging("Опубликовавший", this._опубликовавший);
					this._опубликовавший = value;
					this.OnPropertyChanged("Опубликовавший");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_uRLАдресИзображенияДляПросмотра", FieldType="Url")]
		public string URLАдресИзображенияДляПросмотра {
			get {
				return this._uRLАдресИзображенияДляПросмотра;
			}
			set {
				if ((value != this._uRLАдресИзображенияДляПросмотра)) {
					this.OnPropertyChanging("URLАдресИзображенияДляПросмотра", this._uRLАдресИзображенияДляПросмотра);
					this._uRLАдресИзображенияДляПросмотра = value;
					this.OnPropertyChanged("URLАдресИзображенияДляПросмотра");
				}
			}
		}
		
		/// <summary>
		/// GUID представления
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ViewGuid", Storage="_gUIDПредставления", FieldType="Text")]
		public virtual string GUIDПредставления {
			get {
				return this._gUIDПредставления;
			}
			set {
				if ((value != this._gUIDПредставления)) {
					this.OnPropertyChanging("GUIDПредставления", this._gUIDПредставления);
					this._gUIDПредставления = value;
					this.OnPropertyChanged("GUIDПредставления");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsMachineTranslationEnabledFieldName", Storage="_включенаЛиФункцияМашинногоПеревода", FieldType="Boolean")]
		public virtual System.Nullable<bool> ВключенаЛиФункцияМашинногоПеревода {
			get {
				return this._включенаЛиФункцияМашинногоПеревода;
			}
			set {
				if ((value != this._включенаЛиФункцияМашинногоПеревода)) {
					this.OnPropertyChanging("ВключенаЛиФункцияМашинногоПеревода", this._включенаЛиФункцияМашинногоПеревода);
					this._включенаЛиФункцияМашинногоПеревода = value;
					this.OnPropertyChanged("ВключенаЛиФункцияМашинногоПеревода");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportName", Storage="_имя4", ReadOnly=true, FieldType="Computed")]
		public virtual string Имя4 {
			get {
				return this._имя4;
			}
			set {
				if ((value != this._имя4)) {
					this.OnPropertyChanging("Имя4", this._имя4);
					this._имя4 = value;
					this.OnPropertyChanged("Имя4");
				}
			}
		}
		
		/// <summary>
		/// Содержит сообщение об ошибке последнего обновления, если таковая имела место
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UpdateError", Storage="_ошибкаОбновления", FieldType="Note")]
		public virtual string ОшибкаОбновления {
			get {
				return this._ошибкаОбновления;
			}
			set {
				if ((value != this._ошибкаОбновления)) {
					this.OnPropertyChanging("ОшибкаОбновления", this._ошибкаОбновления);
					this._ошибкаОбновления = value;
					this.OnPropertyChanged("ОшибкаОбновления");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsSiteAdmin", Storage="_являетсяАдминистраторомСайта", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> ЯвляетсяАдминистраторомСайта {
			get {
				return this._являетсяАдминистраторомСайта;
			}
			set {
				if ((value != this._являетсяАдминистраторомСайта)) {
					this.OnPropertyChanging("ЯвляетсяАдминистраторомСайта", this._являетсяАдминистраторомСайта);
					this._являетсяАдминистраторомСайта = value;
					this.OnPropertyChanged("ЯвляетсяАдминистраторомСайта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingTargetLibrary", Storage="_конечнаяБиблиотека", Required=true, FieldType="Text")]
		public virtual string КонечнаяБиблиотека {
			get {
				return this._конечнаяБиблиотека;
			}
			set {
				if ((value != this._конечнаяБиблиотека)) {
					this.OnPropertyChanging("КонечнаяБиблиотека", this._конечнаяБиблиотека);
					this._конечнаяБиблиотека = value;
					this.OnPropertyChanged("КонечнаяБиблиотека");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Office", Storage="_расположение1", FieldType="Text")]
		public virtual string Расположение1 {
			get {
				return this._расположение1;
			}
			set {
				if ((value != this._расположение1)) {
					this.OnPropertyChanging("Расположение1", this._расположение1);
					this._расположение1 = value;
					this.OnPropertyChanged("Расположение1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateImportJobSize", Storage="_размерЗаданияОтправки", FieldType="Number")]
		public virtual System.Nullable<double> РазмерЗаданияОтправки {
			get {
				return this._размерЗаданияОтправки;
			}
			set {
				if ((value != this._размерЗаданияОтправки)) {
					this.OnPropertyChanging("РазмерЗаданияОтправки", this._размерЗаданияОтправки);
					this._размерЗаданияОтправки = value;
					this.OnPropertyChanged("РазмерЗаданияОтправки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_викиКонтент", FieldType="Note")]
		public virtual string ВикиКонтент {
			get {
				return this._викиКонтент;
			}
			set {
				if ((value != this._викиКонтент)) {
					this.OnPropertyChanging("ВикиКонтент", this._викиКонтент);
					this._викиКонтент = value;
					this.OnPropertyChanged("ВикиКонтент");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherFaxNumber", Storage="_дополнительныйФакс", FieldType="Text")]
		public virtual string ДополнительныйФакс {
			get {
				return this._дополнительныйФакс;
			}
			set {
				if ((value != this._дополнительныйФакс)) {
					this.OnPropertyChanging("ДополнительныйФакс", this._дополнительныйФакс);
					this._дополнительныйФакс = value;
					this.OnPropertyChanged("ДополнительныйФакс");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSubject", Storage="_темаСообщения", FieldType="Text")]
		public virtual string ТемаСообщения {
			get {
				return this._темаСообщения;
			}
			set {
				if ((value != this._темаСообщения)) {
					this.OnPropertyChanging("ТемаСообщения", this._темаСообщения);
					this._темаСообщения = value;
					this.OnPropertyChanged("ТемаСообщения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSEventSourceGUID", Storage="_wSEventSourceGUID", FieldType="Guid")]
		public virtual System.Nullable<System.Guid> WSEventSourceGUID {
			get {
				return this._wSEventSourceGUID;
			}
			set {
				if ((value != this._wSEventSourceGUID)) {
					this.OnPropertyChanging("WSEventSourceGUID", this._wSEventSourceGUID);
					this._wSEventSourceGUID = value;
					this.OnPropertyChanged("WSEventSourceGUID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSEventContextKeys", Storage="_wSEventContextKeys", FieldType="Note")]
		public virtual string WSEventContextKeys {
			get {
				return this._wSEventContextKeys;
			}
			set {
				if ((value != this._wSEventContextKeys)) {
					this.OnPropertyChanging("WSEventContextKeys", this._wSEventContextKeys);
					this._wSEventContextKeys = value;
					this.OnPropertyChanged("WSEventContextKeys");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_размерРисунка", FieldType="Computed")]
		public virtual string РазмерРисунка {
			get {
				return this._размерРисунка;
			}
			set {
				if ((value != this._размерРисунка)) {
					this.OnPropertyChanging("РазмерРисунка", this._размерРисунка);
					this._размерРисунка = value;
					this.OnPropertyChanged("РазмерРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Resolved", Storage="_обработано", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Обработано {
			get {
				return this._обработано;
			}
			set {
				if ((value != this._обработано)) {
					this.OnPropertyChanging("Обработано", this._обработано);
					this._обработано = value;
					this.OnPropertyChanged("Обработано");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="From", Storage="_начало0", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Начало0 {
			get {
				return this._начало0;
			}
			set {
				if ((value != this._начало0)) {
					this.OnPropertyChanging("Начало0", this._начало0);
					this._начало0 = value;
					this.OnPropertyChanged("Начало0");
				}
			}
		}
		
		/// <summary>
		/// Текст поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentTextMVK", Storage="_текстПоручения", FieldType="Note")]
		public virtual string ТекстПоручения {
			get {
				return this._текстПоручения;
			}
			set {
				if ((value != this._текстПоручения)) {
					this.OnPropertyChanging("ТекстПоручения", this._текстПоручения);
					this._текстПоручения = value;
					this.OnPropertyChanged("ТекстПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Version", Storage="_версия1", FieldType="Text")]
		public virtual string Версия1 {
			get {
				return this._версия1;
			}
			set {
				if ((value != this._версия1)) {
					this.OnPropertyChanging("Версия1", this._версия1);
					this._версия1 = value;
					this.OnPropertyChanged("Версия1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BestAnswerId", Storage="_идентификаторЛучшегоОтвета", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> ИдентификаторЛучшегоОтвета {
			get {
				return this._идентификаторЛучшегоОтвета;
			}
			set {
				if ((value != this._идентификаторЛучшегоОтвета)) {
					this.OnPropertyChanging("ИдентификаторЛучшегоОтвета", this._идентификаторЛучшегоОтвета);
					this._идентификаторЛучшегоОтвета = value;
					this.OnPropertyChanged("ИдентификаторЛучшегоОтвета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingAutoFolderProp", Storage="_свойствоДляАвтоматическогоСозданияПапки", Required=true, FieldType="Text")]
		public virtual string СвойствоДляАвтоматическогоСозданияПапки {
			get {
				return this._свойствоДляАвтоматическогоСозданияПапки;
			}
			set {
				if ((value != this._свойствоДляАвтоматическогоСозданияПапки)) {
					this.OnPropertyChanging("СвойствоДляАвтоматическогоСозданияПапки", this._свойствоДляАвтоматическогоСозданияПапки);
					this._свойствоДляАвтоматическогоСозданияПапки = value;
					this.OnPropertyChanged("СвойствоДляАвтоматическогоСозданияПапки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailCalendarDateStamp", Storage="_отправитьМеткуДатыКалендаря", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ОтправитьМеткуДатыКалендаря {
			get {
				return this._отправитьМеткуДатыКалендаря;
			}
			set {
				if ((value != this._отправитьМеткуДатыКалендаря)) {
					this.OnPropertyChanging("ОтправитьМеткуДатыКалендаря", this._отправитьМеткуДатыКалендаря);
					this._отправитьМеткуДатыКалендаря = value;
					this.OnPropertyChanged("ОтправитьМеткуДатыКалендаря");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherAddressStateOrProvince", Storage="_республикаОбластьИлиКрайДопАдрес", FieldType="Text")]
		public virtual string РеспубликаОбластьИлиКрайДопАдрес {
			get {
				return this._республикаОбластьИлиКрайДопАдрес;
			}
			set {
				if ((value != this._республикаОбластьИлиКрайДопАдрес)) {
					this.OnPropertyChanging("РеспубликаОбластьИлиКрайДопАдрес", this._республикаОбластьИлиКрайДопАдрес);
					this._республикаОбластьИлиКрайДопАдрес = value;
					this.OnPropertyChanged("РеспубликаОбластьИлиКрайДопАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoHeightInPixels", Storage="_высотаКадра", FieldType="Integer")]
		public System.Nullable<int> ВысотаКадра {
			get {
				return this._высотаКадра;
			}
			set {
				if ((value != this._высотаКадра)) {
					this.OnPropertyChanging("ВысотаКадра", this._высотаКадра);
					this._высотаКадра = value;
					this.OnPropertyChanged("ВысотаКадра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Email3", Storage="_элПочта3", FieldType="Text")]
		public virtual string ЭлПочта3 {
			get {
				return this._элПочта3;
			}
			set {
				if ((value != this._элПочта3)) {
					this.OnPropertyChanging("ЭлПочта3", this._элПочта3);
					this._элПочта3 = value;
					this.OnPropertyChanged("ЭлПочта3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="V4HolidayDate", Storage="_дата", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Дата {
			get {
				return this._дата;
			}
			set {
				if ((value != this._дата)) {
					this.OnPropertyChanging("Дата", this._дата);
					this._дата = value;
					this.OnPropertyChanged("Дата");
				}
			}
		}
		
		/// <summary>
		/// Размер или диапазон
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Coverage", Storage="_областьДействия", FieldType="Text")]
		public virtual string ОбластьДействия {
			get {
				return this._областьДействия;
			}
			set {
				if ((value != this._областьДействия)) {
					this.OnPropertyChanging("ОбластьДействия", this._областьДействия);
					this._областьДействия = value;
					this.OnPropertyChanged("ОбластьДействия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DateCompleted", Storage="_датаЗавершения", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаЗавершения {
			get {
				return this._датаЗавершения;
			}
			set {
				if ((value != this._датаЗавершения)) {
					this.OnPropertyChanging("ДатаЗавершения", this._датаЗавершения);
					this._датаЗавершения = value;
					this.OnPropertyChanged("ДатаЗавершения");
				}
			}
		}
		
		/// <summary>
		/// Тип зависимости планируемой даты поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanIsDependentMVK", Storage="_типЗависимостиПланируемойДаты", FieldType="Text")]
		public virtual string ТипЗависимостиПланируемойДаты {
			get {
				return this._типЗависимостиПланируемойДаты;
			}
			set {
				if ((value != this._типЗависимостиПланируемойДаты)) {
					this.OnPropertyChanging("ТипЗависимостиПланируемойДаты", this._типЗависимостиПланируемойДаты);
					this._типЗависимостиПланируемойДаты = value;
					this.OnPropertyChanged("ТипЗависимостиПланируемойДаты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_срок", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherAddressStreet", Storage="_улицаДопАдрес", FieldType="Text")]
		public virtual string УлицаДопАдрес {
			get {
				return this._улицаДопАдрес;
			}
			set {
				if ((value != this._улицаДопАдрес)) {
					this.OnPropertyChanging("УлицаДопАдрес", this._улицаДопАдрес);
					this._улицаДопАдрес = value;
					this.OnPropertyChanged("УлицаДопАдрес");
				}
			}
		}
		
		/// <summary>
		/// Текст, отображаемый в видеопроигрывателе для данного представления
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoRenditionLabel", Storage="_подпись", FieldType="Text")]
		public virtual string Подпись {
			get {
				return this._подпись;
			}
			set {
				if ((value != this._подпись)) {
					this.OnPropertyChanging("Подпись", this._подпись);
					this._подпись = value;
					this.OnPropertyChanged("Подпись");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HolidayDate", Storage="_дата0", FieldType="Text")]
		public virtual string Дата0 {
			get {
				return this._дата0;
			}
			set {
				if ((value != this._дата0)) {
					this.OnPropertyChanging("Дата0", this._дата0);
					this._дата0 = value;
					this.OnPropertyChanged("Дата0");
				}
			}
		}
		
		/// <summary>
		/// Сводные сведения об этом ресурсе
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_заметки1", FieldType="Note")]
		public virtual string Заметки1 {
			get {
				return this._заметки1;
			}
			set {
				if ((value != this._заметки1)) {
					this.OnPropertyChanging("Заметки1", this._заметки1);
					this._заметки1 = value;
					this.OnPropertyChanged("Заметки1");
				}
			}
		}
		
		/// <summary>
		/// Длительность поддержания доступности кэшированной версии в секундах.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheDuration", Storage="_длительность0", FieldType="Number")]
		public virtual System.Nullable<double> Длительность0 {
			get {
				return this._длительность0;
			}
			set {
				if ((value != this._длительность0)) {
					this.OnPropertyChanging("Длительность0", this._длительность0);
					this._длительность0 = value;
					this.OnPropertyChanged("Длительность0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkDiscussionTitle", Storage="_тема3", ReadOnly=true, FieldType="Computed")]
		public virtual string Тема3 {
			get {
				return this._тема3;
			}
			set {
				if ((value != this._тема3)) {
					this.OnPropertyChanging("Тема3", this._тема3);
					this._тема3 = value;
					this.OnPropertyChanged("Тема3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModifiedLink", Storage="_измененнаяСсылкаНаОтчет", ReadOnly=true, FieldType="Computed")]
		public virtual string ИзмененнаяСсылкаНаОтчет {
			get {
				return this._измененнаяСсылкаНаОтчет;
			}
			set {
				if ((value != this._измененнаяСсылкаНаОтчет)) {
					this.OnPropertyChanging("ИзмененнаяСсылкаНаОтчет", this._измененнаяСсылкаНаОтчет);
					this._измененнаяСсылкаНаОтчет = value;
					this.OnPropertyChanged("ИзмененнаяСсылкаНаОтчет");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfRepliesToReachNextLevel", Storage="_числоОтветовДоСледующегоУровня", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> ЧислоОтветовДоСледующегоУровня {
			get {
				return this._числоОтветовДоСледующегоУровня;
			}
			set {
				if ((value != this._числоОтветовДоСледующегоУровня)) {
					this.OnPropertyChanging("ЧислоОтветовДоСледующегоУровня", this._числоОтветовДоСледующегоУровня);
					this._числоОтветовДоСледующегоУровня = value;
					this.OnPropertyChanged("ЧислоОтветовДоСледующегоУровня");
				}
			}
		}
		
		/// <summary>
		/// Определяет, отображается ли на странице видеопроигрывателя кнопка, позволяющая пользователю получить код внедрения воспроизводимого видео.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoSetShowEmbedLink", Storage="_показатьСсылкуДляВнедрения", FieldType="Boolean")]
		public System.Nullable<bool> ПоказатьСсылкуДляВнедрения {
			get {
				return this._показатьСсылкуДляВнедрения;
			}
			set {
				if ((value != this._показатьСсылкуДляВнедрения)) {
					this.OnPropertyChanging("ПоказатьСсылкуДляВнедрения", this._показатьСсылкуДляВнедрения);
					this._показатьСсылкуДляВнедрения = value;
					this.OnPropertyChanged("ПоказатьСсылкуДляВнедрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified", Storage="_изменено", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Изменено {
			get {
				return this._изменено;
			}
			set {
				if ((value != this._изменено)) {
					this.OnPropertyChanging("Изменено", this._изменено);
					this._изменено = value;
					this.OnPropertyChanged("Изменено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeAddressPostalCode", Storage="_индексДомАдрес", FieldType="Text")]
		public virtual string ИндексДомАдрес {
			get {
				return this._индексДомАдрес;
			}
			set {
				if ((value != this._индексДомАдрес)) {
					this.OnPropertyChanging("ИндексДомАдрес", this._индексДомАдрес);
					this._индексДомАдрес = value;
					this.OnPropertyChanged("ИндексДомАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_LastPrinted", Storage="_когдаПоследнийРазНапечатан", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> КогдаПоследнийРазНапечатан {
			get {
				return this._когдаПоследнийРазНапечатан;
			}
			set {
				if ((value != this._когдаПоследнийРазНапечатан)) {
					this.OnPropertyChanging("КогдаПоследнийРазНапечатан", this._когдаПоследнийРазНапечатан);
					this._когдаПоследнийРазНапечатан = value;
					this.OnPropertyChanged("КогдаПоследнийРазНапечатан");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_темаОбсуждения", ReadOnly=true, FieldType="Computed")]
		public virtual string ТемаОбсуждения {
			get {
				return this._темаОбсуждения;
			}
			set {
				if ((value != this._темаОбсуждения)) {
					this.OnPropertyChanging("ТемаОбсуждения", this._темаОбсуждения);
					this._темаОбсуждения = value;
					this.OnPropertyChanged("ТемаОбсуждения");
				}
			}
		}
		
		/// <summary>
		/// Идентификатор родительского элемента данного отчета
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentId", Storage="_идентификаторРодительскогоЭлемента0", FieldType="Number")]
		public virtual System.Nullable<double> ИдентификаторРодительскогоЭлемента0 {
			get {
				return this._идентификаторРодительскогоЭлемента0;
			}
			set {
				if ((value != this._идентификаторРодительскогоЭлемента0)) {
					this.OnPropertyChanging("ИдентификаторРодительскогоЭлемента0", this._идентификаторРодительскогоЭлемента0);
					this._идентификаторРодительскогоЭлемента0 = value;
					this.OnPropertyChanged("ИдентификаторРодительскогоЭлемента0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_название1", ReadOnly=true, FieldType="Computed")]
		public virtual string Название1 {
			get {
				return this._название1;
			}
			set {
				if ((value != this._название1)) {
					this.OnPropertyChanging("Название1", this._название1);
					this._название1 = value;
					this.OnPropertyChanged("Название1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastActivity", Storage="_последнееДействие", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ПоследнееДействие {
			get {
				return this._последнееДействие;
			}
			set {
				if ((value != this._последнееДействие)) {
					this.OnPropertyChanging("ПоследнееДействие", this._последнееДействие);
					this._последнееДействие = value;
					this.OnPropertyChanged("ПоследнееДействие");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WSEventType", Storage="_wSEventType", FieldType="Text")]
		public virtual string WSEventType {
			get {
				return this._wSEventType;
			}
			set {
				if ((value != this._wSEventType)) {
					this.OnPropertyChanging("WSEventType", this._wSEventType);
					this._wSEventType = value;
					this.OnPropertyChanged("WSEventType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkFax", Storage="_номерФакса", FieldType="Text")]
		public virtual string НомерФакса {
			get {
				return this._номерФакса;
			}
			set {
				if ((value != this._номерФакса)) {
					this.OnPropertyChanging("НомерФакса", this._номерФакса);
					this._номерФакса = value;
					this.OnPropertyChanged("НомерФакса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Email2", Storage="_элПочта2", FieldType="Text")]
		public virtual string ЭлПочта2 {
			get {
				return this._элПочта2;
			}
			set {
				if ((value != this._элПочта2)) {
					this.OnPropertyChanging("ЭлПочта2", this._элПочта2);
					this._элПочта2 = value;
					this.OnPropertyChanged("ЭлПочта2");
				}
			}
		}
		
		/// <summary>
		/// "Автор" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания автора страницы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleByLine", Storage="_автор0", FieldType="Text")]
		public virtual string Автор0 {
			get {
				return this._автор0;
			}
			set {
				if ((value != this._автор0)) {
					this.OnPropertyChanging("Автор0", this._автор0);
					this._автор0 = value;
					this.OnPropertyChanged("Автор0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GovernmentIDNumber", Storage="_личныйИдентификатор", FieldType="Text")]
		public virtual string ЛичныйИдентификатор {
			get {
				return this._личныйИдентификатор;
			}
			set {
				if ((value != this._личныйИдентификатор)) {
					this.OnPropertyChanging("ЛичныйИдентификатор", this._личныйИдентификатор);
					this._личныйИдентификатор = value;
					this.OnPropertyChanged("ЛичныйИдентификатор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SelectedFlag", Storage="_флажокВыбора", ReadOnly=true, FieldType="Computed")]
		public virtual string ФлажокВыбора {
			get {
				return this._флажокВыбора;
			}
			set {
				if ((value != this._флажокВыбора)) {
					this.OnPropertyChanging("ФлажокВыбора", this._флажокВыбора);
					this._флажокВыбора = value;
					this.OnPropertyChanged("ФлажокВыбора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserField4", Storage="_допПоле4", FieldType="Text")]
		public virtual string ДопПоле4 {
			get {
				return this._допПоле4;
			}
			set {
				if ((value != this._допПоле4)) {
					this.OnPropertyChanging("ДопПоле4", this._допПоле4);
					this._допПоле4 = value;
					this.OnPropertyChanged("ДопПоле4");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created", Storage="_создано", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Создано {
			get {
				return this._создано;
			}
			set {
				if ((value != this._создано)) {
					this.OnPropertyChanging("Создано", this._создано);
					this._создано = value;
					this.OnPropertyChanged("Создано");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MobilePhone", Storage="_мобильныйТелефон", FieldType="Text")]
		public virtual string МобильныйТелефон {
			get {
				return this._мобильныйТелефон;
			}
			set {
				if ((value != this._мобильныйТелефон)) {
					this.OnPropertyChanging("МобильныйТелефон", this._мобильныйТелефон);
					this._мобильныйТелефон = value;
					this.OnPropertyChanged("МобильныйТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowName", Storage="_названиеРабочегоПроцесса", FieldType="Text")]
		public virtual string НазваниеРабочегоПроцесса {
			get {
				return this._названиеРабочегоПроцесса;
			}
			set {
				if ((value != this._названиеРабочегоПроцесса)) {
					this.OnPropertyChanging("НазваниеРабочегоПроцесса", this._названиеРабочегоПроцесса);
					this._названиеРабочегоПроцесса = value;
					this.OnPropertyChanged("НазваниеРабочегоПроцесса");
				}
			}
		}
		
		/// <summary>
		/// Значок, который будет отображаться для этого переопределения.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSIconUrl", Storage="_значок", FieldType="Url")]
		public virtual string Значок {
			get {
				return this._значок;
			}
			set {
				if ((value != this._значок)) {
					this.OnPropertyChanging("Значок", this._значок);
					this._значок = value;
					this.OnPropertyChanged("Значок");
				}
			}
		}
		
		/// <summary>
		/// Сведения о правах, которыми владеет этот ресурс
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_RightsManagement", Storage="_управлениеПравами", FieldType="Note")]
		public virtual string УправлениеПравами {
			get {
				return this._управлениеПравами;
			}
			set {
				if ((value != this._управлениеПравами)) {
					this.OnPropertyChanging("УправлениеПравами", this._управлениеПравами);
					this._управлениеПравами = value;
					this.OnPropertyChanged("УправлениеПравами");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Date", Storage="_дата1", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> Дата1 {
			get {
				return this._дата1;
			}
			set {
				if ((value != this._дата1)) {
					this.OnPropertyChanging("Дата1", this._дата1);
					this._дата1 = value;
					this.OnPropertyChanged("Дата1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Category", Storage="_категория", FieldType="Text")]
		public virtual string Категория {
			get {
				return this._категория;
			}
			set {
				if ((value != this._категория)) {
					this.OnPropertyChanging("Категория", this._категория);
					this._категория = value;
					this.OnPropertyChanged("Категория");
				}
			}
		}
		
		/// <summary>
		/// Примечание к поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentNoteMVK", Storage="_примечание", FieldType="Note")]
		public virtual string Примечание {
			get {
				return this._примечание;
			}
			set {
				if ((value != this._примечание)) {
					this.OnPropertyChanging("Примечание", this._примечание);
					this._примечание = value;
					this.OnPropertyChanged("Примечание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormName", Storage="_имяФормы0", FieldType="Text")]
		public virtual string ИмяФормы0 {
			get {
				return this._имяФормы0;
			}
			set {
				if ((value != this._имяФормы0)) {
					this.OnPropertyChanging("ИмяФормы0", this._имяФормы0);
					this._имяФормы0 = value;
					this.OnPropertyChanged("ИмяФормы0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ol_Department", Storage="_отдел0", FieldType="Text")]
		public virtual string Отдел0 {
			get {
				return this._отдел0;
			}
			set {
				if ((value != this._отдел0)) {
					this.OnPropertyChanging("Отдел0", this._отдел0);
					this._отдел0 = value;
					this.OnPropertyChanged("Отдел0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Item", Storage="_идентификаторПервичногоЭлемента", FieldType="Integer")]
		public virtual System.Nullable<int> ИдентификаторПервичногоЭлемента {
			get {
				return this._идентификаторПервичногоЭлемента;
			}
			set {
				if ((value != this._идентификаторПервичногоЭлемента)) {
					this.OnPropertyChanging("ИдентификаторПервичногоЭлемента", this._идентификаторПервичногоЭлемента);
					this._идентификаторПервичногоЭлемента = value;
					this.OnPropertyChanged("ИдентификаторПервичногоЭлемента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HumanTranslationLanguageFieldName", Storage="_языкПереводаСУчастиемЧеловека", FieldType="Text")]
		public virtual string ЯзыкПереводаСУчастиемЧеловека {
			get {
				return this._языкПереводаСУчастиемЧеловека;
			}
			set {
				if ((value != this._языкПереводаСУчастиемЧеловека)) {
					this.OnPropertyChanging("ЯзыкПереводаСУчастиемЧеловека", this._языкПереводаСУчастиемЧеловека);
					this._языкПереводаСУчастиемЧеловека = value;
					this.OnPropertyChanged("ЯзыкПереводаСУчастиемЧеловека");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WebPage", Storage="_вебСтраница", FieldType="Url")]
		public virtual string ВебСтраница {
			get {
				return this._вебСтраница;
			}
			set {
				if ((value != this._вебСтраница)) {
					this.OnPropertyChanging("ВебСтраница", this._вебСтраница);
					this._вебСтраница = value;
					this.OnPropertyChanged("ВебСтраница");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingContentType", Storage="_типКонтентаОтправки", Required=true, FieldType="Text")]
		public virtual string ТипКонтентаОтправки {
			get {
				return this._типКонтентаОтправки;
			}
			set {
				if ((value != this._типКонтентаОтправки)) {
					this.OnPropertyChanging("ТипКонтентаОтправки", this._типКонтентаОтправки);
					this._типКонтентаОтправки = value;
					this.OnPropertyChanged("ТипКонтентаОтправки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateWebId", Storage="_сайт", FieldType="Text")]
		public virtual string Сайт {
			get {
				return this._сайт;
			}
			set {
				if ((value != this._сайт)) {
					this.OnPropertyChanging("Сайт", this._сайт);
					this._сайт = value;
					this.OnPropertyChanged("Сайт");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkState", Storage="_республикаОбластьИлиКрай", FieldType="Text")]
		public virtual string РеспубликаОбластьИлиКрай {
			get {
				return this._республикаОбластьИлиКрай;
			}
			set {
				if ((value != this._республикаОбластьИлиКрай)) {
					this.OnPropertyChanging("РеспубликаОбластьИлиКрай", this._республикаОбластьИлиКрай);
					this._республикаОбластьИлиКрай = value;
					this.OnPropertyChanged("РеспубликаОбластьИлиКрай");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Confirmations", Storage="_подтверждения", ReadOnly=true, FieldType="Text")]
		public virtual string Подтверждения {
			get {
				return this._подтверждения;
			}
			set {
				if ((value != this._подтверждения)) {
					this.OnPropertyChanging("Подтверждения", this._подтверждения);
					this._подтверждения = value;
					this.OnPropertyChanged("Подтверждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ScheduledWork", Storage="_рабочиеЧасы", FieldType="Text")]
		public virtual string РабочиеЧасы {
			get {
				return this._рабочиеЧасы;
			}
			set {
				if ((value != this._рабочиеЧасы)) {
					this.OnPropertyChanging("РабочиеЧасы", this._рабочиеЧасы);
					this._рабочиеЧасы = value;
					this.OnPropertyChanged("РабочиеЧасы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_uRLАдрес2", ReadOnly=true, FieldType="Computed")]
		public virtual string URLАдрес2 {
			get {
				return this._uRLАдрес2;
			}
			set {
				if ((value != this._uRLАдрес2)) {
					this.OnPropertyChanging("URLАдрес2", this._uRLАдрес2);
					this._uRLАдрес2 = value;
					this.OnPropertyChanged("URLАдрес2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FirstName", Storage="_имя5", FieldType="Text")]
		public virtual string Имя5 {
			get {
				return this._имя5;
			}
			set {
				if ((value != this._имя5)) {
					this.OnPropertyChanging("Имя5", this._имя5);
					this._имя5 = value;
					this.OnPropertyChanged("Имя5");
				}
			}
		}
		
		/// <summary>
		/// Фактический срок исполнения поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentFactDateMVK", Storage="_фактическийСрокИсполненияПоручения", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ФактическийСрокИсполненияПоручения {
			get {
				return this._фактическийСрокИсполненияПоручения;
			}
			set {
				if ((value != this._фактическийСрокИсполненияПоручения)) {
					this.OnPropertyChanging("ФактическийСрокИсполненияПоручения", this._фактическийСрокИсполненияПоручения);
					this._фактическийСрокИсполненияПоручения = value;
					this.OnPropertyChanged("ФактическийСрокИсполненияПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="In", Storage="_возврат", FieldType="Text")]
		public virtual string Возврат {
			get {
				return this._возврат;
			}
			set {
				if ((value != this._возврат)) {
					this.OnPropertyChanging("Возврат", this._возврат);
					this._возврат = value;
					this.OnPropertyChanged("Возврат");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Nickname", Storage="_псевдоним", FieldType="Text")]
		public virtual string Псевдоним {
			get {
				return this._псевдоним;
			}
			set {
				if ((value != this._псевдоним)) {
					this.OnPropertyChanging("Псевдоним", this._псевдоним);
					this._псевдоним = value;
					this.OnPropertyChanged("Псевдоним");
				}
			}
		}
		
		/// <summary>
		/// Описывает, связан ли с файлом файл главной страницы SharePoint (MASTER) или макета страницы (ASPX). Если задать значение TRUE, будет восстановлена связь с предыдущим файлом или создан новый файл для связи.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HtmlDesignAssociated", Storage="_связанныйФайл", FieldType="Boolean")]
		public virtual System.Nullable<bool> СвязанныйФайл {
			get {
				return this._связанныйФайл;
			}
			set {
				if ((value != this._связанныйФайл)) {
					this.OnPropertyChanging("СвязанныйФайл", this._связанныйФайл);
					this._связанныйФайл = value;
					this.OnPropertyChanged("СвязанныйФайл");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomeAddressCountry", Storage="_странаИлиРегионДомАдрес", FieldType="Text")]
		public virtual string СтранаИлиРегионДомАдрес {
			get {
				return this._странаИлиРегионДомАдрес;
			}
			set {
				if ((value != this._странаИлиРегионДомАдрес)) {
					this.OnPropertyChanging("СтранаИлиРегионДомАдрес", this._странаИлиРегионДомАдрес);
					this._странаИлиРегионДомАдрес = value;
					this.OnPropertyChanged("СтранаИлиРегионДомАдрес");
				}
			}
		}
		
		/// <summary>
		/// Подномер вопроса заседания МВК (дополнительная часть номера)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueSubnumber", Storage="_подномерВопроса", Required=true, FieldType="Integer")]
		public virtual System.Nullable<int> ПодномерВопроса {
			get {
				return this._подномерВопроса;
			}
			set {
				if ((value != this._подномерВопроса)) {
					this.OnPropertyChanging("ПодномерВопроса", this._подномерВопроса);
					this._подномерВопроса = value;
					this.OnPropertyChanged("ПодномерВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonalWebsite", Storage="_личныйВебСайт", FieldType="Url")]
		public virtual string ЛичныйВебСайт {
			get {
				return this._личныйВебСайт;
			}
			set {
				if ((value != this._личныйВебСайт)) {
					this.OnPropertyChanging("ЛичныйВебСайт", this._личныйВебСайт);
					this._личныйВебСайт = value;
					this.OnPropertyChanged("ЛичныйВебСайт");
				}
			}
		}
		
		/// <summary>
		/// Серьезность обнаруженной проблемы
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportSeverityIcon", Storage="_серьезность", ReadOnly=true, FieldType="Computed")]
		public virtual string Серьезность {
			get {
				return this._серьезность;
			}
			set {
				if ((value != this._серьезность)) {
					this.OnPropertyChanging("Серьезность", this._серьезность);
					this._серьезность = value;
					this.OnPropertyChanged("Серьезность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ol_EventAddress", Storage="_адресСобытия", FieldType="Text")]
		public virtual string АдресСобытия {
			get {
				return this._адресСобытия;
			}
			set {
				if ((value != this._адресСобытия)) {
					this.OnPropertyChanging("АдресСобытия", this._адресСобытия);
					this._адресСобытия = value;
					this.OnPropertyChanged("АдресСобытия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Значение", Storage="_значение", FieldType="Text")]
		public virtual string Значение {
			get {
				return this._значение;
			}
			set {
				if ((value != this._значение)) {
					this.OnPropertyChanging("Значение", this._значение);
					this._значение = value;
					this.OnPropertyChanged("Значение");
				}
			}
		}
		
		/// <summary>
		/// Имя ключевого показателя эффективности службы Microsoft SQL Server 2005 Analysis Services
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KPI", Storage="_индикатор", FieldType="Text")]
		public virtual string Индикатор {
			get {
				return this._индикатор;
			}
			set {
				if ((value != this._индикатор)) {
					this.OnPropertyChanging("Индикатор", this._индикатор);
					this._индикатор = value;
					this.OnPropertyChanged("Индикатор");
				}
			}
		}
		
		/// <summary>
		/// Ссылки на ресурсы, от которых этот ресурс является производным
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Source", Storage="_источник", FieldType="Note")]
		public virtual string Источник {
			get {
				return this._источник;
			}
			set {
				if ((value != this._источник)) {
					this.OnPropertyChanging("Источник", this._источник);
					this._источник = value;
					this.OnPropertyChanged("Источник");
				}
			}
		}
		
		/// <summary>
		/// "Скрыть от поисковых систем в Интернете" — это столбец сайта, созданный средством публикации. Он показывает программам-обходчикам поисковых систем, что данная конкретная страница не должна индексироваться.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RobotsNoIndex", Storage="_скрытьОтПоисковыхСистемВИнтернете", FieldType="Boolean")]
		public virtual System.Nullable<bool> СкрытьОтПоисковыхСистемВИнтернете {
			get {
				return this._скрытьОтПоисковыхСистемВИнтернете;
			}
			set {
				if ((value != this._скрытьОтПоисковыхСистемВИнтернете)) {
					this.OnPropertyChanging("СкрытьОтПоисковыхСистемВИнтернете", this._скрытьОтПоисковыхСистемВИнтернете);
					this._скрытьОтПоисковыхСистемВИнтернете = value;
					this.OnPropertyChanged("СкрытьОтПоисковыхСистемВИнтернете");
				}
			}
		}
		
		/// <summary>
		/// Тип носителя, формат файла и размеры
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Format", Storage="_формат", FieldType="Text")]
		public virtual string Формат {
			get {
				return this._формат;
			}
			set {
				if ((value != this._формат)) {
					this.OnPropertyChanging("Формат", this._формат);
					this._формат = value;
					this.OnPropertyChanged("Формат");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DayOfWeek", Storage="_день", FieldType="Text")]
		public virtual string День {
			get {
				return this._день;
			}
			set {
				if ((value != this._день)) {
					this.OnPropertyChanging("День", this._день);
					this._день = value;
					this.OnPropertyChanged("День");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SpouseName", Storage="_супругАИлиСожитель", FieldType="Text")]
		public virtual string СупругАИлиСожитель {
			get {
				return this._супругАИлиСожитель;
			}
			set {
				if ((value != this._супругАИлиСожитель)) {
					this.OnPropertyChanging("СупругАИлиСожитель", this._супругАИлиСожитель);
					this._супругАИлиСожитель = value;
					this.OnPropertyChanged("СупругАИлиСожитель");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_ExpireDate", Storage="_срокДействия0", ReadOnly=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> СрокДействия0 {
			get {
				return this._срокДействия0;
			}
			set {
				if ((value != this._срокДействия0)) {
					this.OnPropertyChanging("СрокДействия0", this._срокДействия0);
					this._срокДействия0 = value;
					this.OnPropertyChanged("СрокДействия0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deleted", Storage="_удален", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> Удален {
			get {
				return this._удален;
			}
			set {
				if ((value != this._удален)) {
					this.OnPropertyChanging("Удален", this._удален);
					this._удален = value;
					this.OnPropertyChanged("Удален");
				}
			}
		}
		
		/// <summary>
		/// Дата создания этого ресурса
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_DCDateCreated", Storage="_датаСоздания", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаСоздания {
			get {
				return this._датаСоздания;
			}
			set {
				if ((value != this._датаСоздания)) {
					this.OnPropertyChanging("ДатаСоздания", this._датаСоздания);
					this._датаСоздания = value;
					this.OnPropertyChanged("ДатаСоздания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCreated", Storage="_отчетСоздан0", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ОтчетСоздан0 {
			get {
				return this._отчетСоздан0;
			}
			set {
				if ((value != this._отчетСоздан0)) {
					this.OnPropertyChanging("ОтчетСоздан0", this._отчетСоздан0);
					this._отчетСоздан0 = value;
					this.OnPropertyChanged("ОтчетСоздан0");
				}
			}
		}
		
		/// <summary>
		/// Измените это поле, чтобы изменить URL-адрес страницы для предварительного просмотра.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HtmlDesignPreviewUrl", Storage="_uRLАдресПредварительногоПросмотра", FieldType="Url")]
		public virtual string URLАдресПредварительногоПросмотра {
			get {
				return this._uRLАдресПредварительногоПросмотра;
			}
			set {
				if ((value != this._uRLАдресПредварительногоПросмотра)) {
					this.OnPropertyChanging("URLАдресПредварительногоПросмотра", this._uRLАдресПредварительногоПросмотра);
					this._uRLАдресПредварительногоПросмотра = value;
					this.OnPropertyChanged("URLАдресПредварительногоПросмотра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_ответ", ReadOnly=true, FieldType="Computed")]
		public virtual string Ответ {
			get {
				return this._ответ;
			}
			set {
				if ((value != this._ответ)) {
					this.OnPropertyChanging("Ответ", this._ответ);
					this._ответ = value;
					this.OnPropertyChanged("Ответ");
				}
			}
		}
		
		/// <summary>
		/// META с атрибутом Description — это столбец сайта, созданный средством публикации. Поисковые системы в Интернете могут отображать это описание на страницах результатов поиска.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoMetaDescription", Storage="_mETAСАтрибутомDescription", FieldType="Text")]
		public virtual string METAСАтрибутомDescription {
			get {
				return this._mETAСАтрибутомDescription;
			}
			set {
				if ((value != this._mETAСАтрибутомDescription)) {
					this.OnPropertyChanging("METAСАтрибутомDescription", this._mETAСАтрибутомDescription);
					this._mETAСАтрибутомDescription = value;
					this.OnPropertyChanged("METAСАтрибутомDescription");
				}
			}
		}
		
		/// <summary>
		/// URL-адрес сайта, к которому применяется это переопределение.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSTargetScope", Storage="_целеваяОбласть", FieldType="Text")]
		public virtual string ЦелеваяОбласть {
			get {
				return this._целеваяОбласть;
			}
			set {
				if ((value != this._целеваяОбласть)) {
					this.OnPropertyChanging("ЦелеваяОбласть", this._целеваяОбласть);
					this._целеваяОбласть = value;
					this.OnPropertyChanged("ЦелеваяОбласть");
				}
			}
		}
		
		/// <summary>
		/// Этот флажок следует устанавливать только для политик, применение которых требуется разрешить администраторам и разработчикам макетов страниц для сценариев с проверкой подлинности.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingAuthenticatedUse", Storage="_безопасноДляИспользованияСПроверкойПодлинности", Required=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> БезопасноДляИспользованияСПроверкойПодлинности {
			get {
				return this._безопасноДляИспользованияСПроверкойПодлинности;
			}
			set {
				if ((value != this._безопасноДляИспользованияСПроверкойПодлинности)) {
					this.OnPropertyChanging("БезопасноДляИспользованияСПроверкойПодлинности", this._безопасноДляИспользованияСПроверкойПодлинности);
					this._безопасноДляИспользованияСПроверкойПодлинности = value;
					this.OnPropertyChanged("БезопасноДляИспользованияСПроверкойПодлинности");
				}
			}
		}
		
		/// <summary>
		/// Значение индикатора, отформатированное его поставщиком источников данных
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormattedValue", Storage="_форматированноеЗначениеИндикатора", FieldType="Text")]
		public virtual string ФорматированноеЗначениеИндикатора {
			get {
				return this._форматированноеЗначениеИндикатора;
			}
			set {
				if ((value != this._форматированноеЗначениеИндикатора)) {
					this.OnPropertyChanging("ФорматированноеЗначениеИндикатора", this._форматированноеЗначениеИндикатора);
					this._форматированноеЗначениеИндикатора = value;
					this.OnPropertyChanged("ФорматированноеЗначениеИндикатора");
				}
			}
		}
		
		/// <summary>
		/// "Дата статьи" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания даты страницы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleStartDate", Storage="_датаСтатьи", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ДатаСтатьи {
			get {
				return this._датаСтатьи;
			}
			set {
				if ((value != this._датаСтатьи)) {
					this.OnPropertyChanging("ДатаСтатьи", this._датаСтатьи);
					this._датаСтатьи = value;
					this.OnPropertyChanged("ДатаСтатьи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomePhone", Storage="_домашнийТелефон", FieldType="Text")]
		public virtual string ДомашнийТелефон {
			get {
				return this._домашнийТелефон;
			}
			set {
				if ((value != this._домашнийТелефон)) {
					this.OnPropertyChanging("ДомашнийТелефон", this._домашнийТелефон);
					this._домашнийТелефон = value;
					this.OnPropertyChanged("ДомашнийТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HolidayNightWork", Storage="_сверхурочныеВПраздник", FieldType="Text")]
		public virtual string СверхурочныеВПраздник {
			get {
				return this._сверхурочныеВПраздник;
			}
			set {
				if ((value != this._сверхурочныеВПраздник)) {
					this.OnPropertyChanging("СверхурочныеВПраздник", this._сверхурочныеВПраздник);
					this._сверхурочныеВПраздник = value;
					this.OnPropertyChanged("СверхурочныеВПраздник");
				}
			}
		}
		
		/// <summary>
		/// Следует ли включать дочерние показатели
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IncludeHierarchy", Storage="_включитьДочерниеИндикаторы", FieldType="Boolean")]
		public virtual System.Nullable<bool> ВключитьДочерниеИндикаторы {
			get {
				return this._включитьДочерниеИндикаторы;
			}
			set {
				if ((value != this._включитьДочерниеИндикаторы)) {
					this.OnPropertyChanging("ВключитьДочерниеИндикаторы", this._включитьДочерниеИндикаторы);
					this._включитьДочерниеИндикаторы = value;
					this.OnPropertyChanged("ВключитьДочерниеИндикаторы");
				}
			}
		}
		
		/// <summary>
		/// Сводка видео
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoSetDescription", Storage="_описание10", FieldType="Note")]
		public string Описание10 {
			get {
				return this._описание10;
			}
			set {
				if ((value != this._описание10)) {
					this.OnPropertyChanging("Описание10", this._описание10);
					this._описание10 = value;
					this.OnPropertyChanged("Описание10");
				}
			}
		}
		
		/// <summary>
		/// Подробное описание ошибки
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportExplanation", Storage="_объяснение", Required=true, FieldType="Note")]
		public virtual string Объяснение {
			get {
				return this._объяснение;
			}
			set {
				if ((value != this._объяснение)) {
					this.OnPropertyChanging("Объяснение", this._объяснение);
					this._объяснение = value;
					this.OnPropertyChanged("Объяснение");
				}
			}
		}
		
		/// <summary>
		/// Следует ли каждый раз загружать данные с сервера
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutoUpdate", Storage="_автоматическоеОбновление0", FieldType="Boolean")]
		public virtual System.Nullable<bool> АвтоматическоеОбновление0 {
			get {
				return this._автоматическоеОбновление0;
			}
			set {
				if ((value != this._автоматическоеОбновление0)) {
					this.OnPropertyChanging("АвтоматическоеОбновление0", this._автоматическоеОбновление0);
					this._автоматическоеОбновление0 = value;
					this.OnPropertyChanged("АвтоматическоеОбновление0");
				}
			}
		}
		
		/// <summary>
		/// Папка отображения индикатора
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayFolder", Storage="_папкаОтображения0", FieldType="Text")]
		public virtual string ПапкаОтображения0 {
			get {
				return this._папкаОтображения0;
			}
			set {
				if ((value != this._папкаОтображения0)) {
					this.OnPropertyChanging("ПапкаОтображения0", this._папкаОтображения0);
					this._папкаОтображения0 = value;
					this.OnPropertyChanged("ПапкаОтображения0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_uRLАдрес3", ReadOnly=true, FieldType="Computed")]
		public virtual string URLАдрес3 {
			get {
				return this._uRLАдрес3;
			}
			set {
				if ((value != this._uRLАдрес3)) {
					this.OnPropertyChanging("URLАдрес3", this._uRLАдрес3);
					this._uRLАдрес3 = value;
					this.OnPropertyChanged("URLАдрес3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyCount", Storage="_ответов0", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> Ответов0 {
			get {
				return this._ответов0;
			}
			set {
				if ((value != this._ответов0)) {
					this.OnPropertyChanging("Ответов0", this._ответов0);
					this._ответов0 = value;
					this.OnPropertyChanged("Ответов0");
				}
			}
		}
		
		/// <summary>
		/// Скрыть этот шаблон отображения, в котором пользователи выбирают элементы из списка доступных шаблонов отображения.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TemplateHidden", Storage="_скрытыйШаблон", FieldType="Boolean")]
		public virtual System.Nullable<bool> СкрытыйШаблон {
			get {
				return this._скрытыйШаблон;
			}
			set {
				if ((value != this._скрытыйШаблон)) {
					this.OnPropertyChanging("СкрытыйШаблон", this._скрытыйШаблон);
					this._скрытыйШаблон = value;
					this.OnPropertyChanged("СкрытыйШаблон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Popularity", Storage="_популярность", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> Популярность {
			get {
				return this._популярность;
			}
			set {
				if ((value != this._популярность)) {
					this.OnPropertyChanging("Популярность", this._популярность);
					this._популярность = value;
					this.OnPropertyChanged("Популярность");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfDiscussions", Storage="_обсуждения0", ReadOnly=true, FieldType="Number")]
		public virtual System.Nullable<double> Обсуждения0 {
			get {
				return this._обсуждения0;
			}
			set {
				if ((value != this._обсуждения0)) {
					this.OnPropertyChanging("Обсуждения0", this._обсуждения0);
					this._обсуждения0 = value;
					this.OnPropertyChanged("Обсуждения0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_мобильныйТелефон0", FieldType="Text")]
		public virtual string МобильныйТелефон0 {
			get {
				return this._мобильныйТелефон0;
			}
			set {
				if ((value != this._мобильныйТелефон0)) {
					this.OnPropertyChanging("МобильныйТелефон0", this._мобильныйТелефон0);
					this._мобильныйТелефон0 = value;
					this.OnPropertyChanged("МобильныйТелефон0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CategoryImage", Storage="_картинкаКатегории", FieldType="Url")]
		public virtual string КартинкаКатегории {
			get {
				return this._картинкаКатегории;
			}
			set {
				if ((value != this._картинкаКатегории)) {
					this.OnPropertyChanging("КартинкаКатегории", this._картинкаКатегории);
					this._картинкаКатегории = value;
					this.OnPropertyChanged("КартинкаКатегории");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TTYTDDNumber", Storage="_телетайпИлиТекстовыйТелефон", FieldType="Text")]
		public virtual string ТелетайпИлиТекстовыйТелефон {
			get {
				return this._телетайпИлиТекстовыйТелефон;
			}
			set {
				if ((value != this._телетайпИлиТекстовыйТелефон)) {
					this.OnPropertyChanging("ТелетайпИлиТекстовыйТелефон", this._телетайпИлиТекстовыйТелефон);
					this._телетайпИлиТекстовыйТелефон = value;
					this.OnPropertyChanged("ТелетайпИлиТекстовыйТелефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Role", Storage="_роль", FieldType="Text")]
		public virtual string Роль {
			get {
				return this._роль;
			}
			set {
				if ((value != this._роль)) {
					this.OnPropertyChanging("Роль", this._роль);
					this._роль = value;
					this.OnPropertyChanged("Роль");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mileage", Storage="_расстояние", FieldType="Text")]
		public virtual string Расстояние {
			get {
				return this._расстояние;
			}
			set {
				if ((value != this._расстояние)) {
					this.OnPropertyChanging("Расстояние", this._расстояние);
					this._расстояние = value;
					this.OnPropertyChanged("Расстояние");
				}
			}
		}
		
		/// <summary>
		/// Количество продлений поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentProlongationCountMVK", Storage="_количествоПродлений", FieldType="Number")]
		public virtual System.Nullable<double> КоличествоПродлений {
			get {
				return this._количествоПродлений;
			}
			set {
				if ((value != this._количествоПродлений)) {
					this.OnPropertyChanging("КоличествоПродлений", this._количествоПродлений);
					this._количествоПродлений = value;
					this.OnPropertyChanged("КоличествоПродлений");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_времяОкончания", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> ВремяОкончания {
			get {
				return this._времяОкончания;
			}
			set {
				if ((value != this._времяОкончания)) {
					this.OnPropertyChanging("ВремяОкончания", this._времяОкончания);
					this._времяОкончания = value;
					this.OnPropertyChanged("ВремяОкончания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileType", Storage="_типФайла", FieldType="Computed")]
		public virtual string ТипФайла {
			get {
				return this._типФайла;
			}
			set {
				if ((value != this._типФайла)) {
					this.OnPropertyChanging("ТипФайла", this._типФайла);
					this._типФайла = value;
					this.OnPropertyChanged("ТипФайла");
				}
			}
		}
		
		/// <summary>
		/// Имя листа для данного значения
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValueSheet", Storage="_листЗначения", FieldType="Text")]
		public virtual string ЛистЗначения {
			get {
				return this._листЗначения;
			}
			set {
				if ((value != this._листЗначения)) {
					this.OnPropertyChanging("ЛистЗначения", this._листЗначения);
					this._листЗначения = value;
					this.OnPropertyChanged("ЛистЗначения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailHeaders", Storage="_заголовкиЭлектроннойПочты", FieldType="Note")]
		public virtual string ЗаголовкиЭлектроннойПочты {
			get {
				return this._заголовкиЭлектроннойПочты;
			}
			set {
				if ((value != this._заголовкиЭлектроннойПочты)) {
					this.OnPropertyChanging("ЗаголовкиЭлектроннойПочты", this._заголовкиЭлектроннойПочты);
					this._заголовкиЭлектроннойПочты = value;
					this.OnPropertyChanged("ЗаголовкиЭлектроннойПочты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailCc", Storage="_cообщениеПолеКопия", FieldType="Note")]
		public virtual string CообщениеПолеКопия {
			get {
				return this._cообщениеПолеКопия;
			}
			set {
				if ((value != this._cообщениеПолеКопия)) {
					this.OnPropertyChanging("CообщениеПолеКопия", this._cообщениеПолеКопия);
					this._cообщениеПолеКопия = value;
					this.OnPropertyChanged("CообщениеПолеКопия");
				}
			}
		}
		
		/// <summary>
		/// Цель индикатора, отформатированная его поставщиком источников данных
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FormattedGoal", Storage="_форматированнаяЦельИндикатора", FieldType="Text")]
		public virtual string ФорматированнаяЦельИндикатора {
			get {
				return this._форматированнаяЦельИндикатора;
			}
			set {
				if ((value != this._форматированнаяЦельИндикатора)) {
					this.OnPropertyChanging("ФорматированнаяЦельИндикатора", this._форматированнаяЦельИндикатора);
					this._форматированнаяЦельИндикатора = value;
					this.OnPropertyChanged("ФорматированнаяЦельИндикатора");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Attachments", Storage="_вложения", FieldType="Attachments")]
		public virtual System.Nullable<bool> Вложения {
			get {
				return this._вложения;
			}
			set {
				if ((value != this._вложения)) {
					this.OnPropertyChanging("Вложения", this._вложения);
					this._вложения = value;
					this.OnPropertyChanged("Вложения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_целыйДень", FieldType="AllDayEvent")]
		public virtual System.Nullable<bool> ЦелыйДень {
			get {
				return this._целыйДень;
			}
			set {
				if ((value != this._целыйДень)) {
					this.OnPropertyChanging("ЦелыйДень", this._целыйДень);
					this._целыйДень = value;
					this.OnPropertyChanged("ЦелыйДень");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportHistoryLink", Storage="_журнал", ReadOnly=true, FieldType="Computed")]
		public virtual string Журнал {
			get {
				return this._журнал;
			}
			set {
				if ((value != this._журнал)) {
					this.OnPropertyChanging("Журнал", this._журнал);
					this._журнал = value;
					this.OnPropertyChanged("Журнал");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserField1", Storage="_допПоле1", FieldType="Text")]
		public virtual string ДопПоле1 {
			get {
				return this._допПоле1;
			}
			set {
				if ((value != this._допПоле1)) {
					this.OnPropertyChanging("ДопПоле1", this._допПоле1);
					this._допПоле1 = value;
					this.OnPropertyChanged("ДопПоле1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingAliases", Storage="_псевдонимы", Required=true, FieldType="Text")]
		public virtual string Псевдонимы {
			get {
				return this._псевдонимы;
			}
			set {
				if ((value != this._псевдонимы)) {
					this.OnPropertyChanging("Псевдонимы", this._псевдонимы);
					this._псевдонимы = value;
					this.OnPropertyChanged("Псевдонимы");
				}
			}
		}
		
		/// <summary>
		/// Адрес рассмотрения вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueAddressMVK", Storage="_адрес0", FieldType="Note")]
		public virtual string Адрес0 {
			get {
				return this._адрес0;
			}
			set {
				if ((value != this._адрес0)) {
					this.OnPropertyChanging("Адрес0", this._адрес0);
					this._адрес0 = value;
					this.OnPropertyChanged("Адрес0");
				}
			}
		}
		
		/// <summary>
		/// Скрытие этого параметра шаблона отображения при создании новых представлений.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSTemplateHidden", Storage="_скрытый", FieldType="Boolean")]
		public virtual System.Nullable<bool> Скрытый {
			get {
				return this._скрытый;
			}
			set {
				if ((value != this._скрытый)) {
					this.OnPropertyChanging("Скрытый", this._скрытый);
					this._скрытый = value;
					this.OnPropertyChanged("Скрытый");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMAddress", Storage="_мгнСообщения", FieldType="Text")]
		public virtual string МгнСообщения {
			get {
				return this._мгнСообщения;
			}
			set {
				if ((value != this._мгнСообщения)) {
					this.OnPropertyChanging("МгнСообщения", this._мгнСообщения);
					this._мгнСообщения = value;
					this.OnPropertyChanged("МгнСообщения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RoutingTargetPath", Storage="_конечныйПуть", Required=true, FieldType="Text")]
		public virtual string КонечныйПуть {
			get {
				return this._конечныйПуть;
			}
			set {
				if ((value != this._конечныйПуть)) {
					this.OnPropertyChanging("КонечныйПуть", this._конечныйПуть);
					this._конечныйПуть = value;
					this.OnPropertyChanged("КонечныйПуть");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsFeatured", Storage="_популярноеОбсуждение", ReadOnly=true, FieldType="Boolean")]
		public virtual System.Nullable<bool> ПопулярноеОбсуждение {
			get {
				return this._популярноеОбсуждение;
			}
			set {
				if ((value != this._популярноеОбсуждение)) {
					this.OnPropertyChanging("ПопулярноеОбсуждение", this._популярноеОбсуждение);
					this._популярноеОбсуждение = value;
					this.OnPropertyChanged("ПопулярноеОбсуждение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherAddressPostalCode", Storage="_индексДопАдрес", FieldType="Text")]
		public virtual string ИндексДопАдрес {
			get {
				return this._индексДопАдрес;
			}
			set {
				if ((value != this._индексДопАдрес)) {
					this.OnPropertyChanging("ИндексДопАдрес", this._индексДопАдрес);
					this._индексДопАдрес = value;
					this.OnPropertyChanged("ИндексДопАдрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_рабочаяОбласть", FieldType="CrossProjectLink")]
		public virtual System.Nullable<bool> РабочаяОбласть {
			get {
				return this._рабочаяОбласть;
			}
			set {
				if ((value != this._рабочаяОбласть)) {
					this.OnPropertyChanging("РабочаяОбласть", this._рабочаяОбласть);
					this._рабочаяОбласть = value;
					this.OnPropertyChanged("РабочаяОбласть");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_ширинаРисунка", ReadOnly=true, FieldType="Integer")]
		public virtual System.Nullable<int> ШиринаРисунка {
			get {
				return this._ширинаРисунка;
			}
			set {
				if ((value != this._ширинаРисунка)) {
					this.OnPropertyChanging("ШиринаРисунка", this._ширинаРисунка);
					this._ширинаРисунка = value;
					this.OnPropertyChanged("ШиринаРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkflowOutcome", Storage="_результат0", ReadOnly=true, FieldType="Text")]
		public virtual string Результат0 {
			get {
				return this._результат0;
			}
			set {
				if ((value != this._результат0)) {
					this.OnPropertyChanging("Результат0", this._результат0);
					this._результат0 = value;
					this.OnPropertyChanged("Результат0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_отправительСообщения", FieldType="Note")]
		public virtual string ОтправительСообщения {
			get {
				return this._отправительСообщения;
			}
			set {
				if ((value != this._отправительСообщения)) {
					this.OnPropertyChanging("ОтправительСообщения", this._отправительСообщения);
					this._отправительСообщения = value;
					this.OnPropertyChanged("ОтправительСообщения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateItemInformation", Storage="_переведенныеЭлементы", FieldType="Note")]
		public virtual string ПереведенныеЭлементы {
			get {
				return this._переведенныеЭлементы;
			}
			set {
				if ((value != this._переведенныеЭлементы)) {
					this.OnPropertyChanging("ПереведенныеЭлементы", this._переведенныеЭлементы);
					this._переведенныеЭлементы = value;
					this.OnPropertyChanged("ПереведенныеЭлементы");
				}
			}
		}
		
		/// <summary>
		/// Данная категория или типы контента не совместимы с этим стилем
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="XSLStyleCategory", Storage="_категория0", FieldType="Text")]
		public virtual string Категория0 {
			get {
				return this._категория0;
			}
			set {
				if ((value != this._категория0)) {
					this.OnPropertyChanging("Категория0", this._категория0);
					this._категория0 = value;
					this.OnPropertyChanged("Категория0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateListId", Storage="_список", FieldType="Text")]
		public virtual string Список {
			get {
				return this._список;
			}
			set {
				if ((value != this._список)) {
					this.OnPropertyChanging("Список", this._список);
					this._список = value;
					this.OnPropertyChanged("Список");
				}
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.VaryByHeaders в ASP.Net 2.0.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingVaryByHeader", Storage="_вЗависимостиОтЗаголовкаHTTP", FieldType="Text")]
		public virtual string ВЗависимостиОтЗаголовкаHTTP {
			get {
				return this._вЗависимостиОтЗаголовкаHTTP;
			}
			set {
				if ((value != this._вЗависимостиОтЗаголовкаHTTP)) {
					this.OnPropertyChanging("ВЗависимостиОтЗаголовкаHTTP", this._вЗависимостиОтЗаголовкаHTTP);
					this._вЗависимостиОтЗаголовкаHTTP = value;
					this.OnPropertyChanged("ВЗависимостиОтЗаголовкаHTTP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LeaveEarly", Storage="_раннийУход", FieldType="Text")]
		public virtual string РаннийУход {
			get {
				return this._раннийУход;
			}
			set {
				if ((value != this._раннийУход)) {
					this.OnPropertyChanging("РаннийУход", this._раннийУход);
					this._раннийУход = value;
					this.OnPropertyChanged("РаннийУход");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCreatedByDisplay", Storage="_кемСоздан", ReadOnly=true, FieldType="Computed")]
		public virtual string КемСоздан {
			get {
				return this._кемСоздан;
			}
			set {
				if ((value != this._кемСоздан)) {
					this.OnPropertyChanging("КемСоздан", this._кемСоздан);
					this._кемСоздан = value;
					this.OnPropertyChanged("КемСоздан");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateStatus", Storage="_состояниеПеревода", Required=true, FieldType="Choice")]
		public virtual System.Nullable<СостояниеПеревода> СостояниеПеревода {
			get {
				return this._состояниеПеревода;
			}
			set {
				if ((value != this._состояниеПеревода)) {
					this.OnPropertyChanging("СостояниеПеревода", this._состояниеПеревода);
					this._состояниеПеревода = value;
					this.OnPropertyChanged("СостояниеПеревода");
				}
			}
		}
		
		/// <summary>
		/// Состояние контроля поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentControlStateMVK", Storage="_состояниеКонтроляПоручения", FieldType="Choice")]
		public virtual System.Nullable<СостояниеКонтроляПоручения> СостояниеКонтроляПоручения {
			get {
				return this._состояниеКонтроляПоручения;
			}
			set {
				if ((value != this._состояниеКонтроляПоручения)) {
					this.OnPropertyChanging("СостояниеКонтроляПоручения", this._состояниеКонтроляПоручения);
					this._состояниеКонтроляПоручения = value;
					this.OnPropertyChanged("СостояниеКонтроляПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Purpose", Storage="_цельUDC", FieldType="Choice")]
		public virtual System.Nullable<ЦельUDC> ЦельUDC {
			get {
				return this._цельUDC;
			}
			set {
				if ((value != this._цельUDC)) {
					this.OnPropertyChanging("ЦельUDC", this._цельUDC);
					this._цельUDC = value;
					this.OnPropertyChanged("ЦельUDC");
				}
			}
		}
		
		/// <summary>
		/// Статус поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentStatusMVK", Storage="_статусПоручения", FieldType="Choice")]
		public virtual System.Nullable<СтатусПоручения> СтатусПоручения {
			get {
				return this._статусПоручения;
			}
			set {
				if ((value != this._статусПоручения)) {
					this.OnPropertyChanging("СтатусПоручения", this._статусПоручения);
					this._статусПоручения = value;
					this.OnPropertyChanged("СтатусПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_важность0", FieldType="Choice")]
		public virtual System.Nullable<Важность> Важность0 {
			get {
				return this._важность0;
			}
			set {
				if ((value != this._важность0)) {
					this.OnPropertyChanging("Важность0", this._важность0);
					this._важность0 = value;
					this.OnPropertyChanged("Важность0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ListType", Storage="_типСписка", ReadOnly=true, FieldType="Choice")]
		public virtual System.Nullable<ТипСписка> ТипСписка {
			get {
				return this._типСписка;
			}
			set {
				if ((value != this._типСписка)) {
					this.OnPropertyChanging("ТипСписка", this._типСписка);
					this._типСписка = value;
					this.OnPropertyChanged("ТипСписка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateTranslationType", Storage="_типПеревода", FieldType="Choice")]
		public virtual System.Nullable<ТипПеревода> ТипПеревода {
			get {
				return this._типПеревода;
			}
			set {
				if ((value != this._типПеревода)) {
					this.OnPropertyChanging("ТипПеревода", this._типПеревода);
					this._типПеревода = value;
					this.OnPropertyChanged("ТипПеревода");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Status", Storage="_состояние0", FieldType="Choice")]
		public virtual string Состояние0 {
			get {
				return this._состояние0;
			}
			set {
				if ((value != this._состояние0)) {
					this.OnPropertyChanging("Состояние0", this._состояние0);
					this._состояние0 = value;
					this.OnPropertyChanged("Состояние0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UIVersion", Storage="_совместимыеВерсииИП", FieldType="MultiChoice")]
		public virtual System.Nullable<СовместимыеВерсииИП> СовместимыеВерсииИП {
			get {
				return this._совместимыеВерсииИП;
			}
			set {
				if ((value != this._совместимыеВерсииИП)) {
					this.OnPropertyChanging("СовместимыеВерсииИП", this._совместимыеВерсииИП);
					this._совместимыеВерсииИП = value;
					this.OnPropertyChanged("СовместимыеВерсииИП");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfVacation", Storage="_длительностьОтпуска", FieldType="Choice")]
		public virtual System.Nullable<ДлительностьОтпуска> ДлительностьОтпуска {
			get {
				return this._длительностьОтпуска;
			}
			set {
				if ((value != this._длительностьОтпуска)) {
					this.OnPropertyChanging("ДлительностьОтпуска", this._длительностьОтпуска);
					this._длительностьОтпуска = value;
					this.OnPropertyChanged("ДлительностьОтпуска");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_категория1", FieldType="Choice")]
		public virtual System.Nullable<Категория> Категория1 {
			get {
				return this._категория1;
			}
			set {
				if ((value != this._категория1)) {
					this.OnPropertyChanging("Категория1", this._категория1);
					this._категория1 = value;
					this.OnPropertyChanged("Категория1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueStatus", Storage="_состояниеВопроса", FieldType="Choice")]
		public virtual System.Nullable<СостояниеВопроса> СостояниеВопроса {
			get {
				return this._состояниеВопроса;
			}
			set {
				if ((value != this._состояниеВопроса)) {
					this.OnPropertyChanging("СостояниеВопроса", this._состояниеВопроса);
					this._состояниеВопроса = value;
					this.OnPropertyChanged("СостояниеВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MemberStatus", Storage="_состояние1", ReadOnly=true, FieldType="Choice")]
		public virtual System.Nullable<Состояние0> Состояние1 {
			get {
				return this._состояние1;
			}
			set {
				if ((value != this._состояние1)) {
					this.OnPropertyChanging("Состояние1", this._состояние1);
					this._состояние1 = value;
					this.OnPropertyChanged("Состояние1");
				}
			}
		}
		
		/// <summary>
		/// Укажите тип веб-части, для которого предназначен этот стиль. Для представлений списка по умолчанию выберите XSLTListViewWebPart.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="XSLStyleWPType", Storage="_конечнаяВебЧасть", FieldType="Choice")]
		public virtual System.Nullable<КонечнаяВебЧасть> КонечнаяВебЧасть {
			get {
				return this._конечнаяВебЧасть;
			}
			set {
				if ((value != this._конечнаяВебЧасть)) {
					this.OnPropertyChanging("КонечнаяВебЧасть", this._конечнаяВебЧасть);
					this._конечнаяВебЧасть = value;
					this.OnPropertyChanged("КонечнаяВебЧасть");
				}
			}
		}
		
		/// <summary>
		/// Тип элемента управления, определенный в этом шаблоне отображения.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSTargetControlType", Storage="_целевойТипЭлементаУправления", FieldType="Choice")]
		public virtual System.Nullable<ЦелевойТипЭлементаУправления> ЦелевойТипЭлементаУправления {
			get {
				return this._целевойТипЭлементаУправления;
			}
			set {
				if ((value != this._целевойТипЭлементаУправления)) {
					this.OnPropertyChanging("ЦелевойТипЭлементаУправления", this._целевойТипЭлементаУправления);
					this._целевойТипЭлементаУправления = value;
					this.OnPropertyChanged("ЦелевойТипЭлементаУправления");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Vacation", Storage="_типОтпуска", FieldType="Choice")]
		public virtual System.Nullable<ТипОтпуска> ТипОтпуска {
			get {
				return this._типОтпуска;
			}
			set {
				if ((value != this._типОтпуска)) {
					this.OnPropertyChanging("ТипОтпуска", this._типОтпуска);
					this._типОтпуска = value;
					this.OnPropertyChanged("ТипОтпуска");
				}
			}
		}
		
		/// <summary>
		/// Выберите уровень данных, который должен показывать этот шаблон отображения. Он определяет, где этот шаблон будет отображаться как выбираемый параметр в пользовательском интерфейсе конфигурации.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateLevel", Storage="_уровеньШаблона", FieldType="Choice")]
		public virtual System.Nullable<УровеньШаблона> УровеньШаблона {
			get {
				return this._уровеньШаблона;
			}
			set {
				if ((value != this._уровеньШаблона)) {
					this.OnPropertyChanging("УровеньШаблона", this._уровеньШаблона);
					this._уровеньШаблона = value;
					this.OnPropertyChanged("УровеньШаблона");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Gender", Storage="_пол", FieldType="Choice")]
		public virtual System.Nullable<Пол> Пол {
			get {
				return this._пол;
			}
			set {
				if ((value != this._пол)) {
					this.OnPropertyChanging("Пол", this._пол);
					this._пол = value;
					this.OnPropertyChanged("Пол");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DecisionStatus", Storage="_состояние2", FieldType="Choice")]
		public virtual System.Nullable<Состояние1> Состояние2 {
			get {
				return this._состояние2;
			}
			set {
				if ((value != this._состояние2)) {
					this.OnPropertyChanging("Состояние2", this._состояние2);
					this._состояние2 = value;
					this.OnPropertyChanged("Состояние2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConnectionType", Storage="_типПодключения", FieldType="Choice")]
		public virtual System.Nullable<ТипПодключения> ТипПодключения {
			get {
				return this._типПодключения;
			}
			set {
				if ((value != this._типПодключения)) {
					this.OnPropertyChanging("ТипПодключения", this._типПодключения);
					this._типПодключения = value;
					this.OnPropertyChanged("ТипПодключения");
				}
			}
		}
		
		/// <summary>
		/// Выбор элементов управления поиска для использования в этом шаблоне отображения.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TargetControlType", Storage="_целевойТипЭлементаУправленияПоиск", FieldType="MultiChoice")]
		public virtual System.Nullable<ЦелевойТипЭлементаУправленияПоиск> ЦелевойТипЭлементаУправленияПоиск {
			get {
				return this._целевойТипЭлементаУправленияПоиск;
			}
			set {
				if ((value != this._целевойТипЭлементаУправленияПоиск)) {
					this.OnPropertyChanging("ЦелевойТипЭлементаУправленияПоиск", this._целевойТипЭлементаУправленияПоиск);
					this._целевойТипЭлементаУправленияПоиск = value;
					this.OnPropertyChanged("ЦелевойТипЭлементаУправленияПоиск");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentCategory", Storage="_категорияКонтента", FieldType="Choice")]
		public virtual System.Nullable<КатегорияКонтента> КатегорияКонтента {
			get {
				return this._категорияКонтента;
			}
			set {
				if ((value != this._категорияКонтента)) {
					this.OnPropertyChanging("КатегорияКонтента", this._категорияКонтента);
					this._категорияКонтента = value;
					this.OnPropertyChanged("КатегорияКонтента");
				}
			}
		}
		
		/// <summary>
		/// Состояние отчета
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportStatus", Storage="_состояниеОтчета", FieldType="Choice")]
		public virtual System.Nullable<СостояниеОтчета> СостояниеОтчета {
			get {
				return this._состояниеОтчета;
			}
			set {
				if ((value != this._состояниеОтчета)) {
					this.OnPropertyChanging("СостояниеОтчета", this._состояниеОтчета);
					this._состояниеОтчета = value;
					this.OnPropertyChanged("СостояниеОтчета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AttendeeStatus", Storage="_ответ0", Required=true, FieldType="Choice")]
		public virtual System.Nullable<Ответ> Ответ0 {
			get {
				return this._ответ0;
			}
			set {
				if ((value != this._ответ0)) {
					this.OnPropertyChanging("Ответ0", this._ответ0);
					this._ответ0 = value;
					this.OnPropertyChanged("Ответ0");
				}
			}
		}
		
		/// <summary>
		/// Тип дней (зависимость от другого поручения МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDayTypeMVK", Storage="_типДней", FieldType="Choice")]
		public virtual System.Nullable<ТипДней> ТипДней {
			get {
				return this._типДней;
			}
			set {
				if ((value != this._типДней)) {
					this.OnPropertyChanging("ТипДней", this._типДней);
					this._типДней = value;
					this.OnPropertyChanged("ТипДней");
				}
			}
		}
		
		/// <summary>
		/// Определение условий автоматической проверки правил
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleSchedule", Storage="_расписание", Required=true, FieldType="Choice")]
		public virtual System.Nullable<Расписание> Расписание {
			get {
				return this._расписание;
			}
			set {
				if ((value != this._расписание)) {
					this.OnPropertyChanging("Расписание", this._расписание);
					this._расписание = value;
					this.OnPropertyChanged("Расписание");
				}
			}
		}
		
		/// <summary>
		/// Категория отчета
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCategory", Storage="_категорияОтчета", FieldType="Choice")]
		public virtual System.Nullable<КатегорияОтчета> КатегорияОтчета {
			get {
				return this._категорияОтчета;
			}
			set {
				if ((value != this._категорияОтчета)) {
					this.OnPropertyChanging("КатегорияОтчета", this._категорияОтчета);
					this._категорияОтчета = value;
					this.OnPropertyChanged("КатегорияОтчета");
				}
			}
		}
		
		/// <summary>
		/// Выберите типы данных управляемых свойств поиска, с которыми будет использоваться этот шаблон отображения фильтра. Если значения не ввести, шаблон отображения будет доступен для всех типов данных.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompatibleSearchDataTypes", Storage="_совместимыеТипыДанныхДляПоиска", FieldType="MultiChoice")]
		public virtual System.Nullable<СовместимыеТипыДанныхДляПоиска> СовместимыеТипыДанныхДляПоиска {
			get {
				return this._совместимыеТипыДанныхДляПоиска;
			}
			set {
				if ((value != this._совместимыеТипыДанныхДляПоиска)) {
					this.OnPropertyChanging("СовместимыеТипыДанныхДляПоиска", this._совместимыеТипыДанныхДляПоиска);
					this._совместимыеТипыДанныхДляПоиска = value;
					this.OnPropertyChanged("СовместимыеТипыДанныхДляПоиска");
				}
			}
		}
		
		/// <summary>
		/// Параметр, позволяющий учесть это переопределение во время выбора представления.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisplayTemplateJSTemplateType", Storage="_автономно", FieldType="Choice")]
		public virtual System.Nullable<Автономно> Автономно {
			get {
				return this._автономно;
			}
			set {
				if ((value != this._автономно)) {
					this.OnPropertyChanging("Автономно", this._автономно);
					this._автономно = value;
					this.OnPropertyChanged("Автономно");
				}
			}
		}
		
		/// <summary>
		/// Статус заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingStatusMVK", Storage="_статус", FieldType="Choice")]
		public virtual System.Nullable<Статус> Статус {
			get {
				return this._статус;
			}
			set {
				if ((value != this._статус)) {
					this.OnPropertyChanging("Статус", this._статус);
					this._статус = value;
					this.OnPropertyChanged("Статус");
				}
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCacheability в ASP.Net 2.0.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingCacheability", Storage="_возможностьКэширования", Required=true, FieldType="Choice")]
		public virtual System.Nullable<ВозможностьКэширования> ВозможностьКэширования {
			get {
				return this._возможностьКэширования;
			}
			set {
				if ((value != this._возможностьКэширования)) {
					this.OnPropertyChanging("ВозможностьКэширования", this._возможностьКэширования);
					this._возможностьКэширования = value;
					this.OnPropertyChanged("ВозможностьКэширования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_состояниеЗадачи", FieldType="Choice")]
		public virtual System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		/// <summary>
		/// Серьезность обнаруженной проблемы
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportSeverity", Storage="_серьезность0", Required=true, FieldType="Choice")]
		public virtual System.Nullable<Серьезность> Серьезность0 {
			get {
				return this._серьезность0;
			}
			set {
				if ((value != this._серьезность0)) {
					this.OnPropertyChanging("Серьезность0", this._серьезность0);
					this._серьезность0 = value;
					this.OnPropertyChanged("Серьезность0");
				}
			}
		}
		
		/// <summary>
		/// Область правил определяет, на каких компьютерах будет выполняться файл правил. Если область правил имеет значение "Все", файл правил будет выполняться на всех компьютерах, на которых запущена указанная служба. Если область правил имеет значение "Любой", файл правил будет выполняться на первом доступном компьютере, на котором запущена указанная служба.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthRuleScope", Storage="_область", Required=true, FieldType="Choice")]
		public virtual System.Nullable<Область> Область {
			get {
				return this._область;
			}
			set {
				if ((value != this._область)) {
					this.OnPropertyChanging("Область", this._область);
					this._область = value;
					this.OnPropertyChanged("Область");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GbwCategory", Storage="_категория2", ReadOnly=true, FieldType="Choice")]
		public virtual string Категория2 {
			get {
				return this._категория2;
			}
			set {
				if ((value != this._категория2)) {
					this.OnPropertyChanging("Категория2", this._категория2);
					this._категория2 = value;
					this.OnPropertyChanged("Категория2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStatus", Storage="_состояниеПеревода0", FieldType="Choice")]
		public virtual System.Nullable<СостояниеПеревода0> СостояниеПеревода0 {
			get {
				return this._состояниеПеревода0;
			}
			set {
				if ((value != this._состояниеПеревода0)) {
					this.OnPropertyChanging("СостояниеПеревода0", this._состояниеПеревода0);
					this._состояниеПеревода0 = value;
					this.OnPropertyChanged("СостояниеПеревода0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Language", Storage="_язык", FieldType="Choice")]
		public virtual string Язык {
			get {
				return this._язык;
			}
			set {
				if ((value != this._язык)) {
					this.OnPropertyChanging("Язык", this._язык);
					this._язык = value;
					this.OnPropertyChanged("Язык");
				}
			}
		}
		
		/// <summary>
		/// Категория обнаруженной проблемы
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HealthReportCategory", Storage="_категория3", FieldType="Choice")]
		public virtual string Категория3 {
			get {
				return this._категория3;
			}
			set {
				if ((value != this._категория3)) {
					this.OnPropertyChanging("Категория3", this._категория3);
					this._категория3 = value;
					this.OnPropertyChanged("Категория3");
				}
			}
		}
		
		/// <summary>
		/// Характеристика отклонения от норматива
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Характеристика отклонения от норматива", Storage="_характеристикаОтклоненияОтНорматива", Required=true, FieldType="Choice")]
		public virtual System.Nullable<ХарактеристикаОтклоненияОтНорматива> ХарактеристикаОтклоненияОтНорматива {
			get {
				return this._характеристикаОтклоненияОтНорматива;
			}
			set {
				if ((value != this._характеристикаОтклоненияОтНорматива)) {
					this.OnPropertyChanging("ХарактеристикаОтклоненияОтНорматива", this._характеристикаОтклоненияОтНорматива);
					this._характеристикаОтклоненияОтНорматива = value;
					this.OnPropertyChanged("ХарактеристикаОтклоненияОтНорматива");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IMEPos", Storage="_частьРечи", FieldType="Choice")]
		public virtual System.Nullable<ЧастьРечи> ЧастьРечи {
			get {
				return this._частьРечи;
			}
			set {
				if ((value != this._частьРечи)) {
					this.OnPropertyChanging("ЧастьРечи", this._частьРечи);
					this._частьРечи = value;
					this.OnPropertyChanged("ЧастьРечи");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на докладчика по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueReporterMVK", Storage="_докладчик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public virtual СправочникУчастниковУчастник Докладчик {
			get {
				return this._докладчик.GetEntity();
			}
			set {
				this._докладчик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Вопрос", Storage="_вопрос0", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public virtual АКВопросыЗаседанияВопросПовестки Вопрос0 {
			get {
				return this._вопрос0.GetEntity();
			}
			set {
				this._вопрос0.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorMVK", Storage="_исполнитель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public virtual СправочникУчастниковУчастник Исполнитель {
			get {
				return this._исполнитель.GetEntity();
			}
			set {
				this._исполнитель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueAttachmentIssueMVK", Storage="_вопрос1", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public virtual РГВопросыЗаседанияЭлемент Вопрос1 {
			get {
				return this._вопрос1.GetEntity();
			}
			set {
				this._вопрос1.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMeetingMVK", Storage="_заседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заседания")]
		public virtual РГЗаседанияЭлемент Заседание {
			get {
				return this._заседание.GetEntity();
			}
			set {
				this._заседание.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AppAuthor", Storage="_кемСозданоПриложениеId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> КемСозданоПриложениеId {
			get {
				return this._кемСозданоПриложениеId;
			}
			set {
				if ((value != this._кемСозданоПриложениеId)) {
					this.OnPropertyChanging("КемСозданоПриложениеId", this._кемСозданоПриложениеId);
					this._кемСозданоПриложениеId = value;
					this.OnPropertyChanged("КемСозданоПриложениеId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AppAuthor", Storage="_кемСозданоПриложениеTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string КемСозданоПриложениеTitle {
			get {
				return this._кемСозданоПриложениеTitle;
			}
			set {
				if ((value != this._кемСозданоПриложениеTitle)) {
					this.OnPropertyChanging("КемСозданоПриложениеTitle", this._кемСозданоПриложениеTitle);
					this._кемСозданоПриложениеTitle = value;
					this.OnPropertyChanged("КемСозданоПриложениеTitle");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на категорию вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCategoryMVKLink", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public virtual КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылки на содокладчиков по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCoReportesMVK", Storage="_содокладчики", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public virtual СправочникУчастниковУчастник Содокладчики {
			get {
				return this._содокладчики.GetEntity();
			}
			set {
				this._содокладчики.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCreatedBy", Storage="_кемСозданId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КемСозданId {
			get {
				return this._кемСозданId;
			}
			set {
				if ((value != this._кемСозданId)) {
					this.OnPropertyChanging("КемСозданId", this._кемСозданId);
					this._кемСозданId = value;
					this.OnPropertyChanged("КемСозданId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCreatedBy", Storage="_кемСоздан0", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КемСоздан0 {
			get {
				return this._кемСоздан0;
			}
			set {
				if ((value != this._кемСоздан0)) {
					this.OnPropertyChanging("КемСоздан0", this._кемСоздан0);
					this._кемСоздан0 = value;
					this.OnPropertyChanged("КемСоздан0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначеноId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КомуНазначеноId {
			get {
				return this._комуНазначеноId;
			}
			set {
				if ((value != this._комуНазначеноId)) {
					this.OnPropertyChanging("КомуНазначеноId", this._комуНазначеноId);
					this._комуНазначеноId = value;
					this.OnPropertyChanged("КомуНазначеноId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_комуНазначено", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КомуНазначено {
			get {
				return this._комуНазначено;
			}
			set {
				if ((value != this._комуНазначено)) {
					this.OnPropertyChanging("КомуНазначено", this._комуНазначено);
					this._комуНазначено = value;
					this.OnPropertyChanged("КомуНазначено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentLeafName", Storage="_исходноеНазваниеПреобразованныйДокументId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ИсходноеНазваниеПреобразованныйДокументId {
			get {
				return this._исходноеНазваниеПреобразованныйДокументId;
			}
			set {
				if ((value != this._исходноеНазваниеПреобразованныйДокументId)) {
					this.OnPropertyChanging("ИсходноеНазваниеПреобразованныйДокументId", this._исходноеНазваниеПреобразованныйДокументId);
					this._исходноеНазваниеПреобразованныйДокументId = value;
					this.OnPropertyChanged("ИсходноеНазваниеПреобразованныйДокументId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentLeafName", Storage="_исходноеНазваниеПреобразованныйДокументParentLeafName", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ИсходноеНазваниеПреобразованныйДокументParentLeafName {
			get {
				return this._исходноеНазваниеПреобразованныйДокументParentLeafName;
			}
			set {
				if ((value != this._исходноеНазваниеПреобразованныйДокументParentLeafName)) {
					this.OnPropertyChanging("ИсходноеНазваниеПреобразованныйДокументParentLeafName", this._исходноеНазваниеПреобразованныйДокументParentLeafName);
					this._исходноеНазваниеПреобразованныйДокументParentLeafName = value;
					this.OnPropertyChanged("ИсходноеНазваниеПреобразованныйДокументParentLeafName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostCategory", Storage="_категорияId", FieldType="Lookup", IsLookupId=true)]
		public virtual System.Collections.Generic.IList<System.Nullable<int>> КатегорияId {
			get {
				return this._категорияId;
			}
			set {
				this._категорияId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostCategory", Storage="_категорияTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual System.Collections.Generic.IList<string> КатегорияTitle {
			get {
				return this._категорияTitle;
			}
			set {
				this._категорияTitle.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Показатель", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public virtual Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_проектировщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Проектная организация")]
		public virtual ПроектнаяОрганизацияЭлемент Проектировщик {
			get {
				return this._проектировщик.GetEntity();
			}
			set {
				this._проектировщик.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на вопрос повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentIssueMVK", Storage="_вопросПовестки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public virtual РГВопросыЗаседанияЭлемент ВопросПовестки {
			get {
				return this._вопросПовестки.GetEntity();
			}
			set {
				this._вопросПовестки.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Author", Storage="_кемСозданоId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КемСозданоId {
			get {
				return this._кемСозданоId;
			}
			set {
				if ((value != this._кемСозданоId)) {
					this.OnPropertyChanging("КемСозданоId", this._кемСозданоId);
					this._кемСозданоId = value;
					this.OnPropertyChanged("КемСозданоId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Author", Storage="_кемСоздано", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КемСоздано {
			get {
				return this._кемСоздано;
			}
			set {
				if ((value != this._кемСоздано)) {
					this.OnPropertyChanging("КемСоздано", this._кемСоздано);
					this._кемСоздано = value;
					this.OnPropertyChanged("КемСоздано");
				}
			}
		}
		
		/// <summary>
		/// Соисполнители по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentCoExecutorsMVK", Storage="_соисполнители", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public virtual СправочникУчастниковУчастник Соисполнители {
			get {
				return this._соисполнители.GetEntity();
			}
			set {
				this._соисполнители.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник объектов
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderObjectMVK", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MemberLookup", Storage="_кемРазмещеноId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> КемРазмещеноId {
			get {
				return this._кемРазмещеноId;
			}
			set {
				if ((value != this._кемРазмещеноId)) {
					this.OnPropertyChanging("КемРазмещеноId", this._кемРазмещеноId);
					this._кемРазмещеноId = value;
					this.OnPropertyChanged("КемРазмещеноId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MemberLookup", Storage="_кемРазмещеноTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string КемРазмещеноTitle {
			get {
				return this._кемРазмещеноTitle;
			}
			set {
				if ((value != this._кемРазмещеноTitle)) {
					this.OnPropertyChanging("КемРазмещеноTitle", this._кемРазмещеноTitle);
					this._кемРазмещеноTitle = value;
					this.OnPropertyChanged("КемРазмещеноTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Единица_x0020_измерения", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public virtual Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Вид решения по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueDecisionTypeMVK", Storage="_видРешения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Виды решения")]
		public virtual ВидыРешенияЭлемент ВидРешения {
			get {
				return this._видРешения.GetEntity();
			}
			set {
				this._видРешения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_CheckinComment", Storage="_заметкиКВозвратуId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ЗаметкиКВозвратуId {
			get {
				return this._заметкиКВозвратуId;
			}
			set {
				if ((value != this._заметкиКВозвратуId)) {
					this.OnPropertyChanging("ЗаметкиКВозвратуId", this._заметкиКВозвратуId);
					this._заметкиКВозвратуId = value;
					this.OnPropertyChanged("ЗаметкиКВозвратуId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_CheckinComment", Storage="_заметкиКВозвратуCheckinComment", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ЗаметкиКВозвратуCheckinComment {
			get {
				return this._заметкиКВозвратуCheckinComment;
			}
			set {
				if ((value != this._заметкиКВозвратуCheckinComment)) {
					this.OnPropertyChanging("ЗаметкиКВозвратуCheckinComment", this._заметкиКВозвратуCheckinComment);
					this._заметкиКВозвратуCheckinComment = value;
					this.OnPropertyChanged("ЗаметкиКВозвратуCheckinComment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ResolvedBy", Storage="_кемОбработаноId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КемОбработаноId {
			get {
				return this._кемОбработаноId;
			}
			set {
				if ((value != this._кемОбработаноId)) {
					this.OnPropertyChanging("КемОбработаноId", this._кемОбработаноId);
					this._кемОбработаноId = value;
					this.OnPropertyChanged("КемОбработаноId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ResolvedBy", Storage="_кемОбработано", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КемОбработано {
			get {
				return this._кемОбработано;
			}
			set {
				if ((value != this._кемОбработано)) {
					this.OnPropertyChanging("КемОбработано", this._кемОбработано);
					this._кемОбработано = value;
					this.OnPropertyChanged("КемОбработано");
				}
			}
		}
		
		/// <summary>
		/// Владелец видео
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoSetOwner", Storage="_владелецId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ВладелецId {
			get {
				return this._владелецId;
			}
			set {
				if ((value != this._владелецId)) {
					this.OnPropertyChanging("ВладелецId", this._владелецId);
					this._владелецId = value;
					this.OnPropertyChanged("ВладелецId");
				}
			}
		}
		
		/// <summary>
		/// Владелец видео
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoSetOwner", Storage="_владелецNameWithPictureAndDetails", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ВладелецNameWithPictureAndDetails {
			get {
				return this._владелецNameWithPictureAndDetails;
			}
			set {
				if ((value != this._владелецNameWithPictureAndDetails)) {
					this.OnPropertyChanging("ВладелецNameWithPictureAndDetails", this._владелецNameWithPictureAndDetails);
					this._владелецNameWithPictureAndDetails = value;
					this.OnPropertyChanged("ВладелецNameWithPictureAndDetails");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectIssueMVK", Storage="_вопрос2", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public virtual РГВопросыЗаседанияЭлемент Вопрос2 {
			get {
				return this._вопрос2.GetEntity();
			}
			set {
				this._вопрос2.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Автор заявки МВК, ссылка на справочник организаций
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderOrgAuthorMVK", Storage="_авторЗаявки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public virtual СправочникОрганизацийОрганизация АвторЗаявки {
			get {
				return this._авторЗаявки.GetEntity();
			}
			set {
				this._авторЗаявки.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastReplyBy", Storage="_авторПоследнегоОтветаId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> АвторПоследнегоОтветаId {
			get {
				return this._авторПоследнегоОтветаId;
			}
			set {
				if ((value != this._авторПоследнегоОтветаId)) {
					this.OnPropertyChanging("АвторПоследнегоОтветаId", this._авторПоследнегоОтветаId);
					this._авторПоследнегоОтветаId = value;
					this.OnPropertyChanged("АвторПоследнегоОтветаId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastReplyBy", Storage="_авторПоследнегоОтвета", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string АвторПоследнегоОтвета {
			get {
				return this._авторПоследнегоОтвета;
			}
			set {
				if ((value != this._авторПоследнегоОтвета)) {
					this.OnPropertyChanging("АвторПоследнегоОтвета", this._авторПоследнегоОтвета);
					this._авторПоследнегоОтвета = value;
					this.OnPropertyChanged("АвторПоследнегоОтвета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskGroup", Storage="_группаЗадачId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> ГруппаЗадачId {
			get {
				return this._группаЗадачId;
			}
			set {
				if ((value != this._группаЗадачId)) {
					this.OnPropertyChanging("ГруппаЗадачId", this._группаЗадачId);
					this._группаЗадачId = value;
					this.OnPropertyChanged("ГруппаЗадачId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskGroup", Storage="_группаЗадач", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string ГруппаЗадач {
			get {
				return this._группаЗадач;
			}
			set {
				if ((value != this._группаЗадач)) {
					this.OnPropertyChanging("ГруппаЗадач", this._группаЗадач);
					this._группаЗадач = value;
					this.OnPropertyChanged("ГруппаЗадач");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на справочник поселений
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueSettlementMVK", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public virtual ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GiftedBadgeLookup", Storage="_подареннаяЭмблемаId", FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ПодареннаяЭмблемаId {
			get {
				return this._подареннаяЭмблемаId;
			}
			set {
				if ((value != this._подареннаяЭмблемаId)) {
					this.OnPropertyChanging("ПодареннаяЭмблемаId", this._подареннаяЭмблемаId);
					this._подареннаяЭмблемаId = value;
					this.OnPropertyChanged("ПодареннаяЭмблемаId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GiftedBadgeLookup", Storage="_подареннаяЭмблемаTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ПодареннаяЭмблемаTitle {
			get {
				return this._подареннаяЭмблемаTitle;
			}
			set {
				if ((value != this._подареннаяЭмблемаTitle)) {
					this.OnPropertyChanging("ПодареннаяЭмблемаTitle", this._подареннаяЭмблемаTitle);
					this._подареннаяЭмблемаTitle = value;
					this.OnPropertyChanged("ПодареннаяЭмблемаTitle");
				}
			}
		}
		
		/// <summary>
		/// Организация исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrgMVK", Storage="_организацияИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public virtual СправочникОрганизацийОрганизация ОрганизацияИсполнителя {
			get {
				return this._организацияИсполнителя.GetEntity();
			}
			set {
				this._организацияИсполнителя.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateExportRequestingUser", Storage="_экспортирующийПользовательId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> ЭкспортирующийПользовательId {
			get {
				return this._экспортирующийПользовательId;
			}
			set {
				if ((value != this._экспортирующийПользовательId)) {
					this.OnPropertyChanging("ЭкспортирующийПользовательId", this._экспортирующийПользовательId);
					this._экспортирующийПользовательId = value;
					this.OnPropertyChanged("ЭкспортирующийПользовательId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateExportRequestingUser", Storage="_экспортирующийПользователь", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string ЭкспортирующийПользователь {
			get {
				return this._экспортирующийПользователь;
			}
			set {
				if ((value != this._экспортирующийПользователь)) {
					this.OnPropertyChanging("ЭкспортирующийПользователь", this._экспортирующийПользователь);
					this._экспортирующийПользователь = value;
					this.OnPropertyChanged("ЭкспортирующийПользователь");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="V4SendTo", Storage="_получателиId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Collections.Generic.IList<System.Nullable<int>> ПолучателиId {
			get {
				return this._получателиId;
			}
			set {
				this._получателиId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="V4SendTo", Storage="_получателиImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual System.Collections.Generic.IList<string> ПолучателиImnName {
			get {
				return this._получателиImnName;
			}
			set {
				this._получателиImnName.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на муниципальный район вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMunicipalDistrictMVK", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public virtual МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Люди, показанные в этом видео.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleInMedia", Storage="_людиНаВидеоId", FieldType="User", IsLookupId=true)]
		public System.Collections.Generic.IList<System.Nullable<int>> ЛюдиНаВидеоId {
			get {
				return this._людиНаВидеоId;
			}
			set {
				this._людиНаВидеоId.Assign(value);
			}
		}
		
		/// <summary>
		/// Люди, показанные в этом видео.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleInMedia", Storage="_людиНаВидеоImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public System.Collections.Generic.IList<string> ЛюдиНаВидеоImnName {
			get {
				return this._людиНаВидеоImnName;
			}
			set {
				this._людиНаВидеоImnName.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantsPicker", Storage="_участникиId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Collections.Generic.IList<System.Nullable<int>> УчастникиId {
			get {
				return this._участникиId;
			}
			set {
				this._участникиId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantsPicker", Storage="_участникиImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual System.Collections.Generic.IList<string> УчастникиImnName {
			get {
				return this._участникиImnName;
			}
			set {
				this._участникиImnName.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_кемИзмененоId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КемИзмененоId {
			get {
				return this._кемИзмененоId;
			}
			set {
				if ((value != this._кемИзмененоId)) {
					this.OnPropertyChanging("КемИзмененоId", this._кемИзмененоId);
					this._кемИзмененоId = value;
					this.OnPropertyChanged("КемИзмененоId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_кемИзмененоNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КемИзмененоNameWithPicture {
			get {
				return this._кемИзмененоNameWithPicture;
			}
			set {
				if ((value != this._кемИзмененоNameWithPicture)) {
					this.OnPropertyChanging("КемИзмененоNameWithPicture", this._кемИзмененоNameWithPicture);
					this._кемИзмененоNameWithPicture = value;
					this.OnPropertyChanged("КемИзмененоNameWithPicture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Member", Storage="_участникId", ReadOnly=true, Required=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> УчастникId {
			get {
				return this._участникId;
			}
			set {
				if ((value != this._участникId)) {
					this.OnPropertyChanging("УчастникId", this._участникId);
					this._участникId = value;
					this.OnPropertyChanged("УчастникId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Member", Storage="_участникNameWithPictureAndDetails", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string УчастникNameWithPictureAndDetails {
			get {
				return this._участникNameWithPictureAndDetails;
			}
			set {
				if ((value != this._участникNameWithPictureAndDetails)) {
					this.OnPropertyChanging("УчастникNameWithPictureAndDetails", this._участникNameWithPictureAndDetails);
					this._участникNameWithPictureAndDetails = value;
					this.OnPropertyChanged("УчастникNameWithPictureAndDetails");
				}
			}
		}
		
		/// <summary>
		/// Должность исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionMVK", Storage="_должностьИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник должностей")]
		public virtual СправочникДолжностейPosition ДолжностьИсполнителя {
			get {
				return this._должностьИсполнителя.GetEntity();
			}
			set {
				this._должностьИсполнителя.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectObjectMVK", Storage="_объект0", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект0 {
			get {
				return this._объект0.GetEntity();
			}
			set {
				this._объект0.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModifiedBy", Storage="_авторИзмененийId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> АвторИзмененийId {
			get {
				return this._авторИзмененийId;
			}
			set {
				if ((value != this._авторИзмененийId)) {
					this.OnPropertyChanging("АвторИзмененийId", this._авторИзмененийId);
					this._авторИзмененийId = value;
					this.OnPropertyChanged("АвторИзмененийId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportModifiedBy", Storage="_авторИзменений0", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string АвторИзменений0 {
			get {
				return this._авторИзменений0;
			}
			set {
				if ((value != this._авторИзменений0)) {
					this.OnPropertyChanging("АвторИзменений0", this._авторИзменений0);
					this._авторИзменений0 = value;
					this.OnPropertyChanged("АвторИзменений0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Объект", Storage="_объект1", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект1 {
			get {
				return this._объект1.GetEntity();
			}
			set {
				this._объект1.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateImportRequestingUser", Storage="_отправляющийПользовательId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> ОтправляющийПользовательId {
			get {
				return this._отправляющийПользовательId;
			}
			set {
				if ((value != this._отправляющийПользовательId)) {
					this.OnPropertyChanging("ОтправляющийПользовательId", this._отправляющийПользовательId);
					this._отправляющийПользовательId = value;
					this.OnPropertyChanged("ОтправляющийПользовательId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TranslationStateImportRequestingUser", Storage="_отправляющийПользователь", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string ОтправляющийПользователь {
			get {
				return this._отправляющийПользователь;
			}
			set {
				if ((value != this._отправляющийПользователь)) {
					this.OnPropertyChanging("ОтправляющийПользователь", this._отправляющийПользователь);
					this._отправляющийПользователь = value;
					this.OnPropertyChanged("ОтправляющийПользователь");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentItemEditor", Storage="_редакторРодительскогоЭлементаId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> РедакторРодительскогоЭлементаId {
			get {
				return this._редакторРодительскогоЭлементаId;
			}
			set {
				if ((value != this._редакторРодительскогоЭлементаId)) {
					this.OnPropertyChanging("РедакторРодительскогоЭлементаId", this._редакторРодительскогоЭлементаId);
					this._редакторРодительскогоЭлементаId = value;
					this.OnPropertyChanged("РедакторРодительскогоЭлементаId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentItemEditor", Storage="_редакторРодительскогоЭлемента", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string РедакторРодительскогоЭлемента {
			get {
				return this._редакторРодительскогоЭлемента;
			}
			set {
				if ((value != this._редакторРодительскогоЭлемента)) {
					this.OnPropertyChanging("РедакторРодительскогоЭлемента", this._редакторРодительскогоЭлемента);
					this._редакторРодительскогоЭлемента = value;
					this.OnPropertyChanged("РедакторРодительскогоЭлемента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueOrderMVK", Storage="_заявка", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заявки")]
		public virtual РГЗаявкиЭлемент Заявка {
			get {
				return this._заявка.GetEntity();
			}
			set {
				this._заявка.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_кемИзмененоId0", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КемИзмененоId0 {
			get {
				return this._кемИзмененоId0;
			}
			set {
				if ((value != this._кемИзмененоId0)) {
					this.OnPropertyChanging("КемИзмененоId0", this._кемИзмененоId0);
					this._кемИзмененоId0 = value;
					this.OnPropertyChanged("КемИзмененоId0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_кемИзменено", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string КемИзменено {
			get {
				return this._кемИзменено;
			}
			set {
				if ((value != this._кемИзменено)) {
					this.OnPropertyChanging("КемИзменено", this._кемИзменено);
					this._кемИзменено = value;
					this.OnPropertyChanged("КемИзменено");
				}
			}
		}
		
		/// <summary>
		/// Контролер по исполнению поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerMVK", Storage="_контролерПоручения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public virtual СправочникУчастниковУчастник КонтролерПоручения {
			get {
				return this._контролерПоручения.GetEntity();
			}
			set {
				this._контролерПоручения.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник застройщиков
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderBuilderMVK", Storage="_застройщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public virtual СправочникЗастройщиковЭлемент Застройщик {
			get {
				return this._застройщик.GetEntity();
			}
			set {
				this._застройщик.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Тип поручения
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeMVK", Storage="_типПоручения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы поручений")]
		public virtual ТипыПорученийТипПоручения ТипПоручения {
			get {
				return this._типПоручения.GetEntity();
			}
			set {
				this._типПоручения.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Владелец этого документа
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportOwner", Storage="_владелецId0", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> ВладелецId0 {
			get {
				return this._владелецId0;
			}
			set {
				if ((value != this._владелецId0)) {
					this.OnPropertyChanging("ВладелецId0", this._владелецId0);
					this._владелецId0 = value;
					this.OnPropertyChanged("ВладелецId0");
				}
			}
		}
		
		/// <summary>
		/// Владелец этого документа
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportOwner", Storage="_владелец", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string Владелец {
			get {
				return this._владелец;
			}
			set {
				if ((value != this._владелец)) {
					this.OnPropertyChanging("Владелец", this._владелец);
					this._владелец = value;
					this.OnPropertyChanged("Владелец");
				}
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_контактId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> КонтактId {
			get {
				return this._контактId;
			}
			set {
				if ((value != this._контактId)) {
					this.OnPropertyChanging("КонтактId", this._контактId);
					this._контактId = value;
					this.OnPropertyChanged("КонтактId");
				}
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_контакт", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string Контакт {
			get {
				return this._контакт;
			}
			set {
				if ((value != this._контакт)) {
					this.OnPropertyChanging("Контакт", this._контакт);
					this._контакт = value;
					this.OnPropertyChanged("Контакт");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastPostBy", Storage="_авторПоследнейЗаписиId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> АвторПоследнейЗаписиId {
			get {
				return this._авторПоследнейЗаписиId;
			}
			set {
				if ((value != this._авторПоследнейЗаписиId)) {
					this.OnPropertyChanging("АвторПоследнейЗаписиId", this._авторПоследнейЗаписиId);
					this._авторПоследнейЗаписиId = value;
					this.OnPropertyChanged("АвторПоследнейЗаписиId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LastPostBy", Storage="_авторПоследнейЗаписи", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string АвторПоследнейЗаписи {
			get {
				return this._авторПоследнейЗаписи;
			}
			set {
				if ((value != this._авторПоследнейЗаписи)) {
					this.OnPropertyChanging("АвторПоследнейЗаписи", this._авторПоследнейЗаписи);
					this._авторПоследнейЗаписи = value;
					this.OnPropertyChanged("АвторПоследнейЗаписи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentMeetingMVK", Storage="_заседание0", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заседания")]
		public virtual РГЗаседанияЭлемент Заседание0 {
			get {
				return this._заседание0.GetEntity();
			}
			set {
				this._заседание0.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Подгруппа", Storage="_подгруппа", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Подгруппы аналитических показателей")]
		public virtual ПодгруппыАналитическихПоказателейЭлемент Подгруппа {
			get {
				return this._подгруппа.GetEntity();
			}
			set {
				this._подгруппа.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentDocTypeMVK", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов вложений")]
		public virtual Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CategoriesLookup", Storage="_категорияId0", FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> КатегорияId0 {
			get {
				return this._категорияId0;
			}
			set {
				if ((value != this._категорияId0)) {
					this.OnPropertyChanging("КатегорияId0", this._категорияId0);
					this._категорияId0 = value;
					this.OnPropertyChanged("КатегорияId0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CategoriesLookup", Storage="_категорияTitle0", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string КатегорияTitle0 {
			get {
				return this._категорияTitle0;
			}
			set {
				if ((value != this._категорияTitle0)) {
					this.OnPropertyChanging("КатегорияTitle0", this._категорияTitle0);
					this._категорияTitle0 = value;
					this.OnPropertyChanged("КатегорияTitle0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AppEditor", Storage="_кемИзмененоПриложениеId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> КемИзмененоПриложениеId {
			get {
				return this._кемИзмененоПриложениеId;
			}
			set {
				if ((value != this._кемИзмененоПриложениеId)) {
					this.OnPropertyChanging("КемИзмененоПриложениеId", this._кемИзмененоПриложениеId);
					this._кемИзмененоПриложениеId = value;
					this.OnPropertyChanged("КемИзмененоПриложениеId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AppEditor", Storage="_кемИзмененоПриложениеTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string КемИзмененоПриложениеTitle {
			get {
				return this._кемИзмененоПриложениеTitle;
			}
			set {
				if ((value != this._кемИзмененоПриложениеTitle)) {
					this.OnPropertyChanging("КемИзмененоПриложениеTitle", this._кемИзмененоПриложениеTitle);
					this._кемИзмененоПриложениеTitle = value;
					this.OnPropertyChanged("КемИзмененоПриложениеTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentVersionString", Storage="_исходнаяВерсияПреобразованныйДокументId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> ИсходнаяВерсияПреобразованныйДокументId {
			get {
				return this._исходнаяВерсияПреобразованныйДокументId;
			}
			set {
				if ((value != this._исходнаяВерсияПреобразованныйДокументId)) {
					this.OnPropertyChanging("ИсходнаяВерсияПреобразованныйДокументId", this._исходнаяВерсияПреобразованныйДокументId);
					this._исходнаяВерсияПреобразованныйДокументId = value;
					this.OnPropertyChanged("ИсходнаяВерсияПреобразованныйДокументId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentVersionString", Storage="_исходнаяВерсияПреобразованныйДокументParentVersionString", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string ИсходнаяВерсияПреобразованныйДокументParentVersionString {
			get {
				return this._исходнаяВерсияПреобразованныйДокументParentVersionString;
			}
			set {
				if ((value != this._исходнаяВерсияПреобразованныйДокументParentVersionString)) {
					this.OnPropertyChanging("ИсходнаяВерсияПреобразованныйДокументParentVersionString", this._исходнаяВерсияПреобразованныйДокументParentVersionString);
					this._исходнаяВерсияПреобразованныйДокументParentVersionString = value;
					this.OnPropertyChanged("ИсходнаяВерсияПреобразованныйДокументParentVersionString");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserName", Storage="_имяПользователяId", FieldType="User", IsLookupId=true)]
		public virtual System.Nullable<int> ИмяПользователяId {
			get {
				return this._имяПользователяId;
			}
			set {
				if ((value != this._имяПользователяId)) {
					this.OnPropertyChanging("ИмяПользователяId", this._имяПользователяId);
					this._имяПользователяId = value;
					this.OnPropertyChanged("ИмяПользователяId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserName", Storage="_имяПользователя", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public virtual string ИмяПользователя {
			get {
				return this._имяПользователя;
			}
			set {
				if ((value != this._имяПользователя)) {
					this.OnPropertyChanging("ИмяПользователя", this._имяПользователя);
					this._имяПользователя = value;
					this.OnPropertyChanged("ИмяПользователя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_Date", Storage="_созданоId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public virtual System.Nullable<int> СозданоId {
			get {
				return this._созданоId;
			}
			set {
				if ((value != this._созданоId)) {
					this.OnPropertyChanging("СозданоId", this._созданоId);
					this._созданоId = value;
					this.OnPropertyChanged("СозданоId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_Date", Storage="_созданоTimeCreated", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public virtual string СозданоTimeCreated {
			get {
				return this._созданоTimeCreated;
			}
			set {
				if ((value != this._созданоTimeCreated)) {
					this.OnPropertyChanging("СозданоTimeCreated", this._созданоTimeCreated);
					this._созданоTimeCreated = value;
					this.OnPropertyChanged("СозданоTimeCreated");
				}
			}
		}
		
		private void OnДокладчикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Докладчик", this._докладчик.Clone());
		}
		
		private void OnДокладчикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Докладчик");
		}
		
		private void OnДокладчикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnВопрос0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос0", this._вопрос0.Clone());
		}
		
		private void OnВопрос0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос0");
		}
		
		private void OnВопрос0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
		}
		
		private void OnИсполнительChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Исполнитель", this._исполнитель.Clone());
		}
		
		private void OnИсполнительChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Исполнитель");
		}
		
		private void OnИсполнительSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа0.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа0.Remove(this);
			}
		}
		
		private void OnВопрос1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос1", this._вопрос1.Clone());
		}
		
		private void OnВопрос1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос1");
		}
		
		private void OnВопрос1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание", this._заседание.Clone());
		}
		
		private void OnЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание");
		}
		
		private void OnЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnСодокладчикиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Содокладчики", this._содокладчики.Clone());
		}
		
		private void OnСодокладчикиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Содокладчики");
		}
		
		private void OnСодокладчикиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа1.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа1.Remove(this);
			}
		}
		
		private void OnКатегорияIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияId", this._категорияId.Clone());
		}
		
		private void OnКатегорияIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияId");
		}
		
		private void OnКатегорияTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияTitle", this._категорияTitle.Clone());
		}
		
		private void OnКатегорияTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияTitle");
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnПроектировщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Проектировщик", this._проектировщик.Clone());
		}
		
		private void OnПроектировщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Проектировщик");
		}
		
		private void OnПроектировщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВопросПовестки", this._вопросПовестки.Clone());
		}
		
		private void OnВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВопросПовестки");
		}
		
		private void OnВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа0.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа0.Remove(this);
			}
		}
		
		private void OnСоисполнителиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соисполнители", this._соисполнители.Clone());
		}
		
		private void OnСоисполнителиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соисполнители");
		}
		
		private void OnСоисполнителиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа2.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа2.Remove(this);
			}
		}
		
		private void OnОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект", this._объект.Clone());
		}
		
		private void OnОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект");
		}
		
		private void OnОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
		}
		
		private void OnЕдиницаИзмеренияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЕдиницаИзмерения", this._единицаИзмерения.Clone());
		}
		
		private void OnЕдиницаИзмеренияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЕдиницаИзмерения");
		}
		
		private void OnЕдиницаИзмеренияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnВидРешенияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВидРешения", this._видРешения.Clone());
		}
		
		private void OnВидРешенияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВидРешения");
		}
		
		private void OnВидРешенияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnВопрос2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос2", this._вопрос2.Clone());
		}
		
		private void OnВопрос2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос2");
		}
		
		private void OnВопрос2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа1.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа1.Remove(this);
			}
		}
		
		private void OnАвторЗаявкиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АвторЗаявки", this._авторЗаявки.Clone());
		}
		
		private void OnАвторЗаявкиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АвторЗаявки");
		}
		
		private void OnАвторЗаявкиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnОрганизацияИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОрганизацияИсполнителя", this._организацияИсполнителя.Clone());
		}
		
		private void OnОрганизацияИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОрганизацияИсполнителя");
		}
		
		private void OnОрганизацияИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnПолучателиIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ПолучателиId", this._получателиId.Clone());
		}
		
		private void OnПолучателиIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ПолучателиId");
		}
		
		private void OnПолучателиImnNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ПолучателиImnName", this._получателиImnName.Clone());
		}
		
		private void OnПолучателиImnNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ПолучателиImnName");
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnЛюдиНаВидеоIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЛюдиНаВидеоId", this._людиНаВидеоId.Clone());
		}
		
		private void OnЛюдиНаВидеоIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЛюдиНаВидеоId");
		}
		
		private void OnЛюдиНаВидеоImnNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЛюдиНаВидеоImnName", this._людиНаВидеоImnName.Clone());
		}
		
		private void OnЛюдиНаВидеоImnNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЛюдиНаВидеоImnName");
		}
		
		private void OnУчастникиIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("УчастникиId", this._участникиId.Clone());
		}
		
		private void OnУчастникиIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("УчастникиId");
		}
		
		private void OnУчастникиImnNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("УчастникиImnName", this._участникиImnName.Clone());
		}
		
		private void OnУчастникиImnNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("УчастникиImnName");
		}
		
		private void OnДолжностьИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДолжностьИсполнителя", this._должностьИсполнителя.Clone());
		}
		
		private void OnДолжностьИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДолжностьИсполнителя");
		}
		
		private void OnДолжностьИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnОбъект0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект0", this._объект0.Clone());
		}
		
		private void OnОбъект0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект0");
		}
		
		private void OnОбъект0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnОбъект1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект1", this._объект1.Clone());
		}
		
		private void OnОбъект1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект1");
		}
		
		private void OnОбъект1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
		}
		
		private void OnЗаявкаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заявка", this._заявка.Clone());
		}
		
		private void OnЗаявкаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заявка");
		}
		
		private void OnЗаявкаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnКонтролерПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КонтролерПоручения", this._контролерПоручения.Clone());
		}
		
		private void OnКонтролерПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КонтролерПоручения");
		}
		
		private void OnКонтролерПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа3.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа3.Remove(this);
			}
		}
		
		private void OnЗастройщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Застройщик", this._застройщик.Clone());
		}
		
		private void OnЗастройщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Застройщик");
		}
		
		private void OnЗастройщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
		}
		
		private void OnТипПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипПоручения", this._типПоручения.Clone());
		}
		
		private void OnТипПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипПоручения");
		}
		
		private void OnТипПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа.Remove(this);
			}
		}
		
		private void OnЗаседание0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание0", this._заседание0.Clone());
		}
		
		private void OnЗаседание0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание0");
		}
		
		private void OnЗаседание0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СистемнаяКоллекцияМультимедиа0.Add(this);
			}
			else {
				e.Item.СистемнаяКоллекцияМультимедиа0.Remove(this);
			}
		}
		
		private void OnПодгруппаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Подгруппа", this._подгруппа.Clone());
		}
		
		private void OnПодгруппаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Подгруппа");
		}
		
		private void OnПодгруппаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПодгруппыАналитическихПоказателейЭлемент> e) {
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Загрузка или ссылка на видео.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Видеоматериалы", Id="0x0120D520A808")]
	public partial class Видеоматериалы : СистемнаяКоллекцияМультимедиа {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Видеоматериалы() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Какие значения лучше: более низкие или более высокие
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> БолееНизкиеЗначенияЛучше {
			get {
				throw new System.InvalidOperationException("Field LowerValuesAreBetter was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LowerValuesAreBetter was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СтранаИлиРегионДопАдрес {
			get {
				throw new System.InvalidOperationException("Field OtherAddressCountry was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherAddressCountry was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Категории {
			get {
				throw new System.InvalidOperationException("Field Categories was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Categories was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание заявки МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОписаниеЗаявки {
			get {
				throw new System.InvalidOperationException("Field OrderTextMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderTextMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Руководитель {
			get {
				throw new System.InvalidOperationException("Field ManagersName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ManagersName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИменаДетей {
			get {
				throw new System.InvalidOperationException("Field ChildrensNames was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ChildrensNames was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Дата последнего изменения этого ресурса
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаИзменения {
			get {
				throw new System.InvalidOperationException("Field _DCDateModified was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _DCDateModified was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Организация {
			get {
				throw new System.InvalidOperationException("Field Company was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Company was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РеспубликаОбластьИлиКрайДомАдрес {
			get {
				throw new System.InvalidOperationException("Field HomeAddressStateOrProvince was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeAddressStateOrProvince was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаИВремя {
			get {
				throw new System.InvalidOperationException("Field CallTime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CallTime was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СсылкаНаОтчет {
			get {
				throw new System.InvalidOperationException("Field ReportLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Перерыв {
			get {
				throw new System.InvalidOperationException("Field Break was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Break was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Первоначальный автор
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Автор {
			get {
				throw new System.InvalidOperationException("Field _Author was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Author was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПоздняяНочь {
			get {
				throw new System.InvalidOperationException("Field NightWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NightWork was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Окончание {
			get {
				throw new System.InvalidOperationException("Field End was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field End was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НетНаМестеЛичное {
			get {
				throw new System.InvalidOperationException("Field Oof was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Oof was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание0 {
			get {
				throw new System.InvalidOperationException("Field RoutingRuleDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingRuleDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СкрытаяСтраница {
			get {
				throw new System.InvalidOperationException("Field PublishingHidden was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingHidden was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> МаршрутКВнешнемуРасположению {
			get {
				throw new System.InvalidOperationException("Field RoutingRuleExternal was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingRuleExternal was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Отображаемое имя, используемое в списке доступных профилей кэша для владельцев сайтов и владельцев макетов страниц.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтображаемоеИмя {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheDisplayName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheDisplayName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Значение предупреждения индикатора, отформатированное его поставщиком источников данных
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФорматированноеПредупреждениеИндикатора {
			get {
				throw new System.InvalidOperationException("Field FormattedWarning was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormattedWarning was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> СводныйСчетчикОценок {
			get {
				throw new System.InvalidOperationException("Field DescendantRatingsCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DescendantRatingsCount was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Имя контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типа контента страницы для указания имени контактного лица или группы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяКонтакта {
			get {
				throw new System.InvalidOperationException("Field PublishingContactName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingContactName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОсновнойТелефон {
			get {
				throw new System.InvalidOperationException("Field PrimaryNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PrimaryNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Праздник {
			get {
				throw new System.InvalidOperationException("Field HolidayWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HolidayWork was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КонечнаяПапка {
			get {
				throw new System.InvalidOperationException("Field RoutingTargetFolder was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingTargetFolder was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МакетСтраницы {
			get {
				throw new System.InvalidOperationException("Field PublishingPageLayout was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingPageLayout was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПолноеИмя {
			get {
				throw new System.InvalidOperationException("Field FullName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FullName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание1 {
			get {
				throw new System.InvalidOperationException("Field Description was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Description was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Значок 64x48, представляющий этот стиль
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдресЗначка {
			get {
				throw new System.InvalidOperationException("Field XSLStyleIconUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field XSLStyleIconUrl was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание контента отчета
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОписаниеОтчета {
			get {
				throw new System.InvalidOperationException("Field ReportDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИД {
			get {
				throw new System.InvalidOperationException("Field ID was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ID was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, периодически будет выполняться поиск этой ошибки.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Включена {
			get {
				throw new System.InvalidOperationException("Field HealthRuleCheckEnabled was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleCheckEnabled was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МобильныйКонтент {
			get {
				throw new System.InvalidOperationException("Field MobileContent was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MobileContent was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.SetVaryByCustom в ASP.Net 2.0.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВЗависимостиОтНастраиваемогоПараметра {
			get {
				throw new System.InvalidOperationException("Field PublishingVaryByCustom was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingVaryByCustom was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Профессия {
			get {
				throw new System.InvalidOperationException("Field Profession was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Profession was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание вопроса повестки заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание2 {
			get {
				throw new System.InvalidOperationException("Field IssueDescriptionMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueDescriptionMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ОценкаРепутации {
			get {
				throw new System.InvalidOperationException("Field ReputationScore was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReputationScore was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КодОрганизации {
			get {
				throw new System.InvalidOperationException("Field OrganizationalIDNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OrganizationalIDNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЦепочкиОбсуждения {
			get {
				throw new System.InvalidOperationException("Field Threading was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Threading was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметка2 {
			get {
				throw new System.InvalidOperationException("Field IMEComment2 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEComment2 was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Номер заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НомерЗаседания {
			get {
				throw new System.InvalidOperationException("Field MeetingNumberMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingNumberMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Указывает, используется ли выражение для расчета процента
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПроцентноеВыражение {
			get {
				throw new System.InvalidOperationException("Field PercentExpression was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PercentExpression was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Введите имена управляемых свойств поиска, с которыми будет использоваться этот шаблон отображения фильтра. Управляемые свойства, имена которых начинаются с введенных значений, смогут использовать этот шаблон отображения.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СовместимыеУправляемыеСвойства {
			get {
				throw new System.InvalidOperationException("Field CompatibleManagedProperties was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CompatibleManagedProperties was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание предоставляет сведения о назначении цели.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание3 {
			get {
				throw new System.InvalidOperationException("Field KpiDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field KpiDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Контент {
			get {
				throw new System.InvalidOperationException("Field Content was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Content was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметка3 {
			get {
				throw new System.InvalidOperationException("Field IMEComment3 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEComment3 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> НерабочийДень {
			get {
				throw new System.InvalidOperationException("Field IsNonWorkingDay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsNonWorkingDay was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При установке этого флажка всем пользователям потребуются идентичные эффективные права во всех защищаемых объектах для просмотра одной и той же кэшированной страницы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ВЗависимостиОтПравПользователя {
			get {
				throw new System.InvalidOperationException("Field PublishingVaryByRights was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingVaryByRights was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Важность {
			get {
				throw new System.InvalidOperationException("Field RoutingPriority was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingPriority was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АвторскиеПрава {
			get {
				throw new System.InvalidOperationException("Field wic_System_Copyright was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field wic_System_Copyright was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данного предупреждения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯчейкаПредупреждения {
			get {
				throw new System.InvalidOperationException("Field WarningCell was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WarningCell was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемРазмещено {
			get {
				throw new System.InvalidOperationException("Field PersonViewMinimal was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PersonViewMinimal was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string CообщениеПолеКому {
			get {
				throw new System.InvalidOperationException("Field EmailTo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailTo was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Результат {
			get {
				throw new System.InvalidOperationException("Field Outcome was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Outcome was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторШаблона {
			get {
				throw new System.InvalidOperationException("Field TemplateId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TemplateId was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтносительныйURLАдресФормы {
			get {
				throw new System.InvalidOperationException("Field FormRelativeUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormRelativeUrl was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИдентификаторПользователя {
			get {
				throw new System.InvalidOperationException("Field User was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field User was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметка1 {
			get {
				throw new System.InvalidOperationException("Field IMEComment1 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEComment1 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ОбратныйВызов {
			get {
				throw new System.InvalidOperationException("Field CallBack was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CallBack was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Введите слоты и управляемые свойства, которые сопоставляются со слотами. Это поле будет использоваться для определения управляемых свойств, которые возвращает служба поиска SharePoint при использовании этого шаблона отображения. Используйте формат "имя слота":"имя свойства" и разделяйте элементы запятыми.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СопоставленияУправляемыхСвойств {
			get {
				throw new System.InvalidOperationException("Field ManagedPropertyMapping was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ManagedPropertyMapping was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ЗначениеИндикатора {
			get {
				throw new System.InvalidOperationException("Field Value was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Value was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяРодительскогоОтчета {
			get {
				throw new System.InvalidOperationException("Field ParentName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Если этот флажок установлен, физический URL-адрес этой страницы не отображается в результатах поиска. Полнотекстовый URL-адрес, назначенный этой странице, отображается всегда.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СкрыватьФизическийURLАдресВРезультатахПоиска {
			get {
				throw new System.InvalidOperationException("Field PublishingIsFurlPage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingIsFurlPage was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ответственное лицо
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтветственноеЛицо {
			get {
				throw new System.InvalidOperationException("Field PPSMA_PersonResponsible was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PPSMA_PersonResponsible was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ВремяОтправки {
			get {
				throw new System.InvalidOperationException("Field TranslationStateStartTime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateStartTime was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаСозданияРисунка {
			get {
				throw new System.InvalidOperationException("Field ImageCreateDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ImageCreateDate was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Идентификатор типа шаблона списка, к которому применяется это переопределение.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторЦелевогоШаблонаСписка {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetListTemplate was removed from content type Видеомате" +
						"риалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetListTemplate was removed from content type Видеомате" +
						"риалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДеньРождения {
			get {
				throw new System.InvalidOperationException("Field Birthday was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Birthday was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВебПросмотр {
			get {
				throw new System.InvalidOperationException("Field Preview was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Preview was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СсылкаДляЗагрузки {
			get {
				throw new System.InvalidOperationException("Field TranslationStateDownloadLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateDownloadLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя0 {
			get {
				throw new System.InvalidOperationException("Field LinkFilenameNoMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkFilenameNoMenu was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Является ли источником цели книга или определение индикатора
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ЦельИзКниги {
			get {
				throw new System.InvalidOperationException("Field GoalFromWorkBook was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GoalFromWorkBook was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РабочийТелефон {
			get {
				throw new System.InvalidOperationException("Field WorkPhone was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkPhone was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тема {
			get {
				throw new System.InvalidOperationException("Field Subject was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Subject was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Отчество {
			get {
				throw new System.InvalidOperationException("Field MiddleName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MiddleName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Заголовок обозревателя — это столбец сайта, созданный средством публикации. Он отображается вверху окна браузера и может отображаться в результатах поиска в Интернете.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЗаголовокБраузера {
			get {
				throw new System.InvalidOperationException("Field SeoBrowserTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SeoBrowserTitle was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ISDN {
			get {
				throw new System.InvalidOperationException("Field ISDNNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ISDNNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПросмотрЭскизов {
			get {
				throw new System.InvalidOperationException("Field ThumbnailOnForm was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ThumbnailOnForm was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Версия {
			get {
				throw new System.InvalidOperationException("Field _UIVersionString was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _UIVersionString was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ОтправитьСериюКалендаря {
			get {
				throw new System.InvalidOperationException("Field EmailCalendarSequence was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailCalendarSequence was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Примечания описывают текущее состояние индикатора и могут предоставлять сведения о причинах неполадок.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПримечанияИндикатора {
			get {
				throw new System.InvalidOperationException("Field KpiComments was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field KpiComments was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка для перехода к странице подробностей 
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СсылкаНаПодробности {
			get {
				throw new System.InvalidOperationException("Field DetailLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DetailLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> СостояниеУчастника {
			get {
				throw new System.InvalidOperationException("Field MemberStatusInt was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MemberStatusInt was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Годовщина {
			get {
				throw new System.InvalidOperationException("Field Anniversary was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Anniversary was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОсновнойТекст {
			get {
				throw new System.InvalidOperationException("Field Body was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Body was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УчетнаяЗапись {
			get {
				throw new System.InvalidOperationException("Field Name was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Name was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// URL-адрес источника данных
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИсточникДанных {
			get {
				throw new System.InvalidOperationException("Field DataSource was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DataSource was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ДомойИзМестнойКомандировки {
			get {
				throw new System.InvalidOperationException("Field GoingHome was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GoingHome was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> СкоростьПотока {
			get {
				throw new System.InvalidOperationException("Field VideoRenditionBitRate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field VideoRenditionBitRate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВнешнийУчастник {
			get {
				throw new System.InvalidOperationException("Field OffsiteParticipant was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OffsiteParticipant was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ОбъявленнаяЗапись {
			get {
				throw new System.InvalidOperationException("Field _vti_ItemDeclaredRecord was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _vti_ItemDeclaredRecord was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Расположение {
			get {
				throw new System.InvalidOperationException("Field Location was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Location was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТелефонПомощника {
			get {
				throw new System.InvalidOperationException("Field AssistantNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssistantNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АвторИзменений {
			get {
				throw new System.InvalidOperationException("Field ReportModifiedByDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModifiedByDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаСобытия {
			get {
				throw new System.InvalidOperationException("Field Occurred was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Occurred was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ВысотаРисунка {
			get {
				throw new System.InvalidOperationException("Field ImageHeight was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ImageHeight was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ВремяОтправки0 {
			get {
				throw new System.InvalidOperationException("Field TranslationStateUploadTime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateUploadTime was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При каждом сохранении этого документа его копия будет добавляться в журнал отчета.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СохранитьВЖурналеОтчета {
			get {
				throw new System.InvalidOperationException("Field SaveToReportHistory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SaveToReportHistory was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тренд изменения индикатора
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> АвтоматическоеОпределениеШага {
			get {
				throw new System.InvalidOperationException("Field Trend was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Trend was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Состояние индикатора
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> СостояниеИндикатора {
			get {
				throw new System.InvalidOperationException("Field KpiStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field KpiStatus was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название0 {
			get {
				throw new System.InvalidOperationException("Field LinkTitleNoMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkTitleNoMenu was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Завершено {
			get {
				throw new System.InvalidOperationException("Field Checkmark was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Checkmark was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИдентификаторРодительскогоЭлемента {
			get {
				throw new System.InvalidOperationException("Field ParentItemID was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentItemID was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Эскиз {
			get {
				throw new System.InvalidOperationException("Field Thumbnail was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Thumbnail was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РабТелефон2 {
			get {
				throw new System.InvalidOperationException("Field Business2Number was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Business2Number was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ВремяЭкспорта {
			get {
				throw new System.InvalidOperationException("Field TranslationStateExportTime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateExportTime was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Телекс {
			get {
				throw new System.InvalidOperationException("Field TelexNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TelexNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSPublishError {
			get {
				throw new System.InvalidOperationException("Field WSPublishError was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSPublishError was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДопПоле3 {
			get {
				throw new System.InvalidOperationException("Field UserField3 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserField3 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тема0 {
			get {
				throw new System.InvalidOperationException("Field LinkDiscussionTitleNoMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkDiscussionTitleNoMenu was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Завершения {
			get {
				throw new System.InvalidOperationException("Field PercentComplete was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PercentComplete was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Добавить XSL-файл, который будет использоваться для создания HTML-кода при просмотре страницы программами-обходчиками.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string XSLФайлПрограммыОбходчика {
			get {
				throw new System.InvalidOperationException("Field CrawlerXSLFile was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CrawlerXSLFile was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УлицаДомАдрес {
			get {
				throw new System.InvalidOperationException("Field HomeAddressStreet was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeAddressStreet was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТекстДляПовторногоИспользования {
			get {
				throw new System.InvalidOperationException("Field ReusableText was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReusableText was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СсылкаСписка {
			get {
				throw new System.InvalidOperationException("Field TranslationStateListUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateListUrl was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ОтчетИзменен {
			get {
				throw new System.InvalidOperationException("Field ReportModified was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModified was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тема1 {
			get {
				throw new System.InvalidOperationException("Field LinkDiscussionTitle2 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkDiscussionTitle2 was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание элемента
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание4 {
			get {
				throw new System.InvalidOperationException("Field PPSMA_Description was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PPSMA_Description was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Дополнительная информация по вопросу МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Информация {
			get {
				throw new System.InvalidOperationException("Field IssueInfoMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueInfoMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметки {
			get {
				throw new System.InvalidOperationException("Field ShortComment was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ShortComment was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОбязательноеПоле {
			get {
				throw new System.InvalidOperationException("Field RequiredField was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RequiredField was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НастраиваемыйМаршрутизатор {
			get {
				throw new System.InvalidOperationException("Field RoutingCustomRouter was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingCustomRouter was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресЭлектроннойПочты {
			get {
				throw new System.InvalidOperationException("Field EMail was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EMail was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тип {
			get {
				throw new System.InvalidOperationException("Field DocIcon was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DocIcon was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Краткое описание канала устройства
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание5 {
			get {
				throw new System.InvalidOperationException("Field ChannelDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ChannelDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПомощника {
			get {
				throw new System.InvalidOperationException("Field AssistantsName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssistantsName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Инвестор по вопросу заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Инвестор {
			get {
				throw new System.InvalidOperationException("Field IssueInvestorMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueInvestorMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КатегорияФормы {
			get {
				throw new System.InvalidOperationException("Field FormCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormCategory was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Радиотелефон {
			get {
				throw new System.InvalidOperationException("Field RadioNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RadioNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Отображать {
			get {
				throw new System.InvalidOperationException("Field IMEDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КлючевыеСлова {
			get {
				throw new System.InvalidOperationException("Field Keywords was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Keywords was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Службы, не соответствующие правилу анализатора работоспособности.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СлужбыСоСбоями {
			get {
				throw new System.InvalidOperationException("Field HealthReportServices was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportServices was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Должность {
			get {
				throw new System.InvalidOperationException("Field JobTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field JobTitle was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание6 {
			get {
				throw new System.InvalidOperationException("Field CategoryDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CategoryDescription was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При установке этого флажка не выполняется обычный запрет кэширования страниц пользователей, имеющих разрешения на изменение. Этот флажок следует устанавливать только в сценариях, в которых известно, что страница будет опубликована, но не будет иметь контент, который может быть извлечен или может являться черновиком.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> РазрешитьАвторамПросматриватьКэшированныйКонтент {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheAllowWriters was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheAllowWriters was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаОкончания {
			get {
				throw new System.InvalidOperationException("Field _EndDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _EndDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СопровождающиеЗаметки {
			get {
				throw new System.InvalidOperationException("Field V3Comments was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field V3Comments was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание7 {
			get {
				throw new System.InvalidOperationException("Field Comment was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Comment was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СвязанныйКонтент {
			get {
				throw new System.InvalidOperationException("Field WorkflowLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Отдел {
			get {
				throw new System.InvalidOperationException("Field Department was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Department was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылки на связанные ресурсы
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Отношение {
			get {
				throw new System.InvalidOperationException("Field _Relation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Relation was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Версия
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Версия0 {
			get {
				throw new System.InvalidOperationException("Field HealthRuleVersion was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleVersion was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Индекс {
			get {
				throw new System.InvalidOperationException("Field WorkZip was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkZip was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание8 {
			get {
				throw new System.InvalidOperationException("Field DLC_Description was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DLC_Description was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Повторение {
			get {
				throw new System.InvalidOperationException("Field fRecurrence was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field fRecurrence was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Обновлено {
			get {
				throw new System.InvalidOperationException("Field DiscussionLastUpdated was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DiscussionLastUpdated was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ГородДомАдрес {
			get {
				throw new System.InvalidOperationException("Field HomeAddressCity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeAddressCity was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НомерДляОбратногоВызова {
			get {
				throw new System.InvalidOperationException("Field CallbackNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CallbackNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторВопроса {
			get {
				throw new System.InvalidOperationException("Field LinkIssueIDNoMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkIssueIDNoMenu was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДомашнийФакс {
			get {
				throw new System.InvalidOperationException("Field HomeFaxNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeFaxNumber was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Количество дней на решение (поручение МВК)
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КоличествоДнейНаРешение {
			get {
				throw new System.InvalidOperationException("Field AssignmentDaysForResolveMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentDaysForResolveMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Папка отображения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПапкаОтображения {
			get {
				throw new System.InvalidOperationException("Field PPSMA_DisplayFolder was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PPSMA_DisplayFolder was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПереводчика {
			get {
				throw new System.InvalidOperationException("Field TranslatorName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslatorName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string CSSФайлПоУмолчанию {
			get {
				throw new System.InvalidOperationException("Field DefaultCssFile was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DefaultCssFile was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Последнее обновление индикатора из его поставщика источников данных
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> СамоеПоследнееОбновлениеДанныхИндикатора {
			get {
				throw new System.InvalidOperationException("Field LastUpdated was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastUpdated was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Ответов {
			get {
				throw new System.InvalidOperationException("Field NumberOfReplies was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NumberOfReplies was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ОбщиеТрудозатраты {
			get {
				throw new System.InvalidOperationException("Field TotalWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TotalWork was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтображаемоеИмя0 {
			get {
				throw new System.InvalidOperationException("Field PublishedLinksDisplayName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishedLinksDisplayName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Активно {
			get {
				throw new System.InvalidOperationException("Field RoutingEnabled was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingEnabled was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> СрокДействия {
			get {
				throw new System.InvalidOperationException("Field Expires was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Expires was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОписаниеФормы {
			get {
				throw new System.InvalidOperationException("Field FormDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресSIP {
			get {
				throw new System.InvalidOperationException("Field SipAddress was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SipAddress was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДомТелефон2 {
			get {
				throw new System.InvalidOperationException("Field Home2Number was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Home2Number was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При выборе значения "Автоматическое исправление" программа SharePoint попытается исправить ошибки сразу после того, как они будут найдены.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> АвтоматическоеИсправление {
			get {
				throw new System.InvalidOperationException("Field HealthRuleAutoRepairEnabled was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleAutoRepairEnabled was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ИзДомаВМестнуюКомандировку {
			get {
				throw new System.InvalidOperationException("Field GoFromHome was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GoFromHome was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯзыкМашинногоПеревода {
			get {
				throw new System.InvalidOperationException("Field MachineTranslationLanguageFieldName was removed from content type Видеомате" +
						"риалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MachineTranslationLanguageFieldName was removed from content type Видеомате" +
						"риалы.");
			}
		}
		
		/// <summary>
		/// Идентификационная строка или номер, обычно соответствующие требованиям формальной системы идентификации
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторРесурса {
			get {
				throw new System.InvalidOperationException("Field _Identifier was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Identifier was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Комментарий к заседанию МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Комментарий {
			get {
				throw new System.InvalidOperationException("Field MeetingCommentMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingCommentMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Картинка контакта" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для размещения картинки контактного лица или группы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КартинкаКонтакта {
			get {
				throw new System.InvalidOperationException("Field PublishingContactPicture was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingContactPicture was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string CообщениеПолеОт {
			get {
				throw new System.InvalidOperationException("Field EmailFrom was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailFrom was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОписаниеВложения {
			get {
				throw new System.InvalidOperationException("Field MeetingAttachmentDescriptionMVK was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingAttachmentDescriptionMVK was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> WSEnabled {
			get {
				throw new System.InvalidOperationException("Field WSEnabled was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSEnabled was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ВключенаЛиФункцияПереводаСУчастиемЧеловека {
			get {
				throw new System.InvalidOperationException("Field IsHumanTranslationEnabledFieldName was removed from content type Видеоматер" +
						"иалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsHumanTranslationEnabledFieldName was removed from content type Видеоматер" +
						"иалы.");
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.VaryByParams в ASP.Net 2.0.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВЗависимостиОтПараметровСтрокиЗапроса {
			get {
				throw new System.InvalidOperationException("Field PublishingVaryByParam was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingVaryByParam was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПереводчика0 {
			get {
				throw new System.InvalidOperationException("Field TranslationStateTranslatorName was removed from content type Видеоматериалы" +
						".");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateTranslatorName was removed from content type Видеоматериалы" +
						".");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдрес {
			get {
				throw new System.InvalidOperationException("Field PublishedLinksURL was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishedLinksURL was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтправитьИдентификаторUIDКалендаря {
			get {
				throw new System.InvalidOperationException("Field EmailCalendarUid was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailCalendarUid was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При установке этого флажка включается кэширование. Если этот флажок снят, кэширование не выполняется, независимо от места выбора профиля. Это полезно при устранении неполадок формирования всех сайтов и макетов страниц, связанных с данным профилем кэша. По завершении устранения неполадок не забудьте установить этот флажок. 
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Включена0 {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheEnabled was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheEnabled was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯзыкПеревода {
			get {
				throw new System.InvalidOperationException("Field TranslationLanguage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationLanguage was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSEventSource {
			get {
				throw new System.InvalidOperationException("Field WSEventSource was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSEventSource was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// META с атрибутом Keywords
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string METAСАтрибутомKeywords {
			get {
				throw new System.InvalidOperationException("Field SeoKeywords was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SeoKeywords was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данной цели
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯчейкаЦели {
			get {
				throw new System.InvalidOperationException("Field GoalCell was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GoalCell was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресДляВыставленияСчетов {
			get {
				throw new System.InvalidOperationException("Field BillingInformation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field BillingInformation was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Начало {
			get {
				throw new System.InvalidOperationException("Field Start was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Start was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ИмеетКопии {
			get {
				throw new System.InvalidOperationException("Field _HasCopyDestinations was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _HasCopyDestinations was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПросмотрРисунка {
			get {
				throw new System.InvalidOperationException("Field PublishingPreviewImage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingPreviewImage was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя {
			get {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФамилияПроизношение {
			get {
				throw new System.InvalidOperationException("Field LastNamePhonetic was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastNamePhonetic was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИсточникКопии {
			get {
				throw new System.InvalidOperationException("Field _CopySource was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _CopySource was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя1 {
			get {
				throw new System.InvalidOperationException("Field ReportLinkFilename was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportLinkFilename was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "URL-адрес перенаправления" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница перенаправления" для указания веб-адреса, на который будет перенаправлять страница.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдресПеренаправления {
			get {
				throw new System.InvalidOperationException("Field RedirectURL was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RedirectURL was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Имя листа для данной цели
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЛистЦели {
			get {
				throw new System.InvalidOperationException("Field GoalSheet was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GoalSheet was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресFTP {
			get {
				throw new System.InvalidOperationException("Field FTPSite was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FTPSite was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Кадастровый номер вопроса МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КадастровыйНомер {
			get {
				throw new System.InvalidOperationException("Field IssueCadastreIdMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueCadastreIdMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ВремяВыполненияЗадания {
			get {
				throw new System.InvalidOperationException("Field TranslationStateEndTime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateEndTime was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ответственный исполнитель по поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтветственныйИсполнитель {
			get {
				throw new System.InvalidOperationException("Field AssignmentResponsibleExecutorMVK was removed from content type Видеоматериа" +
						"лы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentResponsibleExecutorMVK was removed from content type Видеоматериа" +
						"лы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> РодительскийЭкземплярЖурналаРабочихПроцессов {
			get {
				throw new System.InvalidOperationException("Field WorkflowInstance was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowInstance was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Набор категорий, функций, стилей и уровней обобщения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТипРесурса {
			get {
				throw new System.InvalidOperationException("Field _ResourceType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _ResourceType was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаОбработки {
			get {
				throw new System.InvalidOperationException("Field ResolvedDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ResolvedDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ДСП {
			get {
				throw new System.InvalidOperationException("Field Confidential was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Confidential was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Выражение, используемое для определения значения индикатора.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВыражениеДляЗначения {
			get {
				throw new System.InvalidOperationException("Field ValueExpression was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ValueExpression was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> ИдентификаторПакета {
			get {
				throw new System.InvalidOperationException("Field TranslationStateJobId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateJobId was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Имя листа для данного предупреждения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЛистПредупреждения {
			get {
				throw new System.InvalidOperationException("Field WarningSheet was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WarningSheet was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Уведомление {
			get {
				throw new System.InvalidOperationException("Field WhatsNew was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WhatsNew was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Пейджер {
			get {
				throw new System.InvalidOperationException("Field PagerNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PagerNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяФормы {
			get {
				throw new System.InvalidOperationException("Field LinkTemplateName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkTemplateName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторФормы {
			get {
				throw new System.InvalidOperationException("Field FormId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormId was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на страницу параметров, определяющих условия и область выполнения правила.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НастройкаПравила {
			get {
				throw new System.InvalidOperationException("Field HealthRuleReportLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleReportLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Рисунок {
			get {
				throw new System.InvalidOperationException("Field Picture was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Picture was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Увлечения {
			get {
				throw new System.InvalidOperationException("Field Hobbies was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Hobbies was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Зависимый срок (текстовое представление зависимости от другого поручения МВК)
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЗависимыйСрок {
			get {
				throw new System.InvalidOperationException("Field AssignmentDependentTermTextMVK was removed from content type Видеоматериалы" +
						".");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentDependentTermTextMVK was removed from content type Видеоматериалы" +
						".");
			}
		}
		
		/// <summary>
		/// Пользователи или организации, добавлявшие содержимое в данный ресурс
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Корреспондент {
			get {
				throw new System.InvalidOperationException("Field _Contributor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Contributor was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Решение по вопросу заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РешениеПоВопросу {
			get {
				throw new System.InvalidOperationException("Field IssueDecisionMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueDecisionMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя2 {
			get {
				throw new System.InvalidOperationException("Field LinkFilename was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkFilename was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Состояние {
			get {
				throw new System.InvalidOperationException("Field HtmlDesignStatusAndPreview was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HtmlDesignStatusAndPreview was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Отображаемое описание, используемое в списке доступных профилей кэша для владельцев сайтов и владельцев макетов страниц.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтображатьОписание {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheDisplayDescription was removed from content type Видеоматери" +
						"алы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheDisplayDescription was removed from content type Видеоматери" +
						"алы.");
			}
		}
		
		/// <summary>
		/// Адрес или имя ячейки для данного значения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯчейкаЗначения {
			get {
				throw new System.InvalidOperationException("Field ValueCell was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ValueCell was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВерсияФормы {
			get {
				throw new System.InvalidOperationException("Field FormVersion was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormVersion was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// При установке этого флажка для каждого запроса страницы проверяется наличие изменений сайта, и в случае изменения сайта кэш очищается. Сняв этот флажок, можно повысить быстродействие за счет пропуска проверки обновлений для сайта в течение интервала в секундах, указанных в поле длительности. 
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПроверятьНаИзменения {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheCheckForChanges was removed from content type Видеоматериалы" +
						".");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheCheckForChanges was removed from content type Видеоматериалы" +
						".");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдрес0 {
			get {
				throw new System.InvalidOperationException("Field URL was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field URL was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтчетИзменен0 {
			get {
				throw new System.InvalidOperationException("Field ReportModifiedDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModifiedDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ФактическиеТрудозатраты {
			get {
				throw new System.InvalidOperationException("Field ActualWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ActualWork was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Запись {
			get {
				throw new System.InvalidOperationException("Field BodyAndMore was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field BodyAndMore was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание9 {
			get {
				throw new System.InvalidOperationException("Field PublishedLinksDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishedLinksDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> WSGUID {
			get {
				throw new System.InvalidOperationException("Field WSGUID was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSGUID was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ТипГруппы {
			get {
				throw new System.InvalidOperationException("Field Group was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Group was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Город {
			get {
				throw new System.InvalidOperationException("Field WorkCity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkCity was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Опубликовано {
			get {
				throw new System.InvalidOperationException("Field PublishedDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishedDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> ИдентификаторСопоставленияРабочегоПроцесса {
			get {
				throw new System.InvalidOperationException("Field WorkflowAssociation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowAssociation was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тема вопроса заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тема2 {
			get {
				throw new System.InvalidOperationException("Field IssueThemeMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueThemeMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Сообщение {
			get {
				throw new System.InvalidOperationException("Field Detail was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Detail was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Значение по нормативу
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ЗначениеПоНормативу {
			get {
				throw new System.InvalidOperationException("Field Значение по нормативу was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Значение по нормативу was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОсновнойТелефонОрганизации {
			get {
				throw new System.InvalidOperationException("Field CompanyNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CompanyNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> Обсуждения {
			get {
				throw new System.InvalidOperationException("Field TopicCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TopicCount was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СтранаИлиРегион {
			get {
				throw new System.InvalidOperationException("Field WorkCountry was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkCountry was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдрес1 {
			get {
				throw new System.InvalidOperationException("Field IMEUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEUrl was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Инициалы {
			get {
				throw new System.InvalidOperationException("Field Initials was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Initials was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Планируемый срок исполнения поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> СрокИсполненияПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentPlanDateMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentPlanDateMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОбоМне {
			get {
				throw new System.InvalidOperationException("Field Notes was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Notes was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Скрытое {
			get {
				throw new System.InvalidOperationException("Field UserInfoHidden was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserInfoHidden was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя3 {
			get {
				throw new System.InvalidOperationException("Field NameOrTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NameOrTitle was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ЛучшиеОтветы {
			get {
				throw new System.InvalidOperationException("Field NumberOfBestResponses was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NumberOfBestResponses was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОрганизацияПроизношение {
			get {
				throw new System.InvalidOperationException("Field CompanyPhonetic was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CompanyPhonetic was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Обязательные поля для этого стиля в формате: поле1; поле2;
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТребуемыеПоля {
			get {
				throw new System.InvalidOperationException("Field XSLStyleRequiredFields was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field XSLStyleRequiredFields was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметки0 {
			get {
				throw new System.InvalidOperationException("Field Comments was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Comments was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> ИдентификаторСписка {
			get {
				throw new System.InvalidOperationException("Field List was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field List was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Сверхурочные {
			get {
				throw new System.InvalidOperationException("Field Overtime was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Overtime was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Термины {
			get {
				throw new System.InvalidOperationException("Field TranslationStateTermInformation was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateTermInformation was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSDescription {
			get {
				throw new System.InvalidOperationException("Field WSDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаНачала {
			get {
				throw new System.InvalidOperationException("Field StartDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field StartDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Адрес {
			get {
				throw new System.InvalidOperationException("Field WorkAddress was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkAddress was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Место проведения заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МестоПроведенияЗаседания {
			get {
				throw new System.InvalidOperationException("Field MeetingPlaceMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingPlaceMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ГородДопАдрес {
			get {
				throw new System.InvalidOperationException("Field OtherAddressCity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherAddressCity was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДочерняяОрганизация {
			get {
				throw new System.InvalidOperationException("Field TaskCompanies was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TaskCompanies was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Номер поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НомерПоручения {
			get {
				throw new System.InvalidOperationException("Field AsignmentNumberMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AsignmentNumberMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НастраиваемыйИдентификатор {
			get {
				throw new System.InvalidOperationException("Field CustomerID was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CustomerID was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СканКопияПротокола {
			get {
				throw new System.InvalidOperationException("Field MeetingAttachmentProtocolCopyMVK was removed from content type Видеоматериа" +
						"лы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingAttachmentProtocolCopyMVK was removed from content type Видеоматериа" +
						"лы.");
			}
		}
		
		/// <summary>
		/// "Адрес эл. почты контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания адреса электронной почты контактного лица или группы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресЭлектроннойПочтыКонтакта {
			get {
				throw new System.InvalidOperationException("Field PublishingContactEmail was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingContactEmail was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, контент данного элемента списка будет вставляться на веб-страницы как ссылка только для чтения. Новые версии данного элемента будут отображаться на веб-страницах автоматически. Если параметр не выбран, контент данного элемента списка будет вставляться на веб-страницы как копия, доступная авторам страниц для изменения. Новые версии данного элемента не будут автоматически отображаться на веб-страницах. Любые изменения этого параметра не будут влиять на существующие веб-страницы, использующие данный элемент.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> АвтоматическоеОбновление {
			get {
				throw new System.InvalidOperationException("Field AutomaticUpdate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AutomaticUpdate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSDisplayName {
			get {
				throw new System.InvalidOperationException("Field WSDisplayName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSDisplayName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ЧислоЭлементов {
			get {
				throw new System.InvalidOperationException("Field TranslationStateNumberOfItems was removed from content type Видеоматериалы." +
						"");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateNumberOfItems was removed from content type Видеоматериалы." +
						"");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Данные {
			get {
				throw new System.InvalidOperationException("Field Data was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Data was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДругойТелефон {
			get {
				throw new System.InvalidOperationException("Field OtherNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СетевоеИмяКомпьютера {
			get {
				throw new System.InvalidOperationException("Field ComputerNetworkName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ComputerNetworkName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Редакция {
			get {
				throw new System.InvalidOperationException("Field _Revision was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Revision was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтчетСоздан {
			get {
				throw new System.InvalidOperationException("Field ReportCreatedDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCreatedDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Я задаю вопрос и хочу получить ответы от других участников.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Вопрос {
			get {
				throw new System.InvalidOperationException("Field IsQuestion was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsQuestion was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Расположение0 {
			get {
				throw new System.InvalidOperationException("Field GbwLocation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GbwLocation was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Выберите данный параметр, если необходимо вывести этот повторно используемый элемент контента в раскрывающемся меню, доступном при редактировании страницы. Это позволяет быстро добавлять элементы на странице.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПоказыватьВРаскрывающемсяМеню {
			get {
				throw new System.InvalidOperationException("Field ShowInRibbon was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ShowInRibbon was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Дата проведения заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаПроведения {
			get {
				throw new System.InvalidOperationException("Field MeetingDateMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingDateMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> РазмерЗаданияЭкспорта {
			get {
				throw new System.InvalidOperationException("Field TranslationStateExportJobSize was removed from content type Видеоматериалы." +
						"");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateExportJobSize was removed from content type Видеоматериалы." +
						"");
			}
		}
		
		/// <summary>
		/// При установке этого флажка обеспечивается фильтрация кэша в соответствии с ролями безопасности. Если данный флажок снят, повышается быстродействие, но это должно применяться только к сайтам или макетам страниц, которые не содержат сведений, требующих фильтрации по ролям.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ВыполнятьПроверкуACL {
			get {
				throw new System.InvalidOperationException("Field PublishingCachePerformACLCheck was removed from content type Видеоматериалы" +
						".");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCachePerformACLCheck was removed from content type Видеоматериалы" +
						".");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Уход {
			get {
				throw new System.InvalidOperationException("Field Out was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Out was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> РазрешитьИзменение {
			get {
				throw new System.InvalidOperationException("Field AllowEditing was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AllowEditing was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯзыкФормы {
			get {
				throw new System.InvalidOperationException("Field FormLocale was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormLocale was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ПорогПредупрежденияИндикатора {
			get {
				throw new System.InvalidOperationException("Field Warning was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Warning was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДопПоле2 {
			get {
				throw new System.InvalidOperationException("Field UserField2 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserField2 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> ИдентификаторШаблонаРабочегоПроцесса {
			get {
				throw new System.InvalidOperationException("Field WorkflowTemplate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowTemplate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> СводныйСчетчикОценокНравится {
			get {
				throw new System.InvalidOperationException("Field DescendantLikesCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DescendantLikesCount was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Является ли источником предупреждения книга или определение индикатора
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПредупреждениеИзКниги {
			get {
				throw new System.InvalidOperationException("Field WarningFromWorkBook was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WarningFromWorkBook was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФотографияКонтакта {
			get {
				throw new System.InvalidOperationException("Field _Photo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Photo was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Суффикс {
			get {
				throw new System.InvalidOperationException("Field Suffix was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Suffix was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> НомерВопроса {
			get {
				throw new System.InvalidOperationException("Field IssueNumberMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueNumberMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> WSPublishState {
			get {
				throw new System.InvalidOperationException("Field WSPublishState was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSPublishState was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Ошибки {
			get {
				throw new System.InvalidOperationException("Field TranslationStateErrors was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateErrors was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПозднийПриход {
			get {
				throw new System.InvalidOperationException("Field Late was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Late was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описание набора документов
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Описание {
			get {
				throw new System.InvalidOperationException("Field DocumentSetDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DocumentSetDescription was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РазмерФайла {
			get {
				throw new System.InvalidOperationException("Field FileSizeDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FileSizeDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПоказыватьВКаталоге {
			get {
				throw new System.InvalidOperationException("Field ShowInCatalog was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ShowInCatalog was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПричинаВнешнегоУчастника {
			get {
				throw new System.InvalidOperationException("Field OffsiteParticipantReason was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OffsiteParticipantReason was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаПоследнейЗаписи {
			get {
				throw new System.InvalidOperationException("Field LastPostDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastPostDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаВыполнения {
			get {
				throw new System.InvalidOperationException("Field DueDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DueDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТелефонВМашине {
			get {
				throw new System.InvalidOperationException("Field CarNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CarNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПроизношение {
			get {
				throw new System.InvalidOperationException("Field FirstNamePhonetic was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FirstNamePhonetic was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УказанВСсылкеИз {
			get {
				throw new System.InvalidOperationException("Field ReferredBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReferredBy was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Службы, для которых обнаружено несоответствие правилу анализатора работоспособности при последней проверке.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СерверыСоСбоями {
			get {
				throw new System.InvalidOperationException("Field HealthReportServers was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportServers was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Изменить {
			get {
				throw new System.InvalidOperationException("Field Edit was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Edit was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Возможные способы устранения ошибки
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СпособУстранения {
			get {
				throw new System.InvalidOperationException("Field HealthReportRemedy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportRemedy was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Установите этот флажок, если ваш сайт оптимизирован для данного канала. Если вы работаете над активным сайтом, не активируйте этот канал, пока не завершите его разработку.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Активный {
			get {
				throw new System.InvalidOperationException("Field ChannelIsActive was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ChannelIsActive was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Окончание0 {
			get {
				throw new System.InvalidOperationException("Field Until was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Until was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Образец {
			get {
				throw new System.InvalidOperationException("Field PreviewOnForm was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PreviewOnForm was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Длительность {
			get {
				throw new System.InvalidOperationException("Field DLC_Duration was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DLC_Duration was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Изображение
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Изображение {
			get {
				throw new System.InvalidOperationException("Field PPSMA_FCOImage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PPSMA_FCOImage was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Идентификатор стиля представления для этого стиля
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИдентификаторСтиляПредставления {
			get {
				throw new System.InvalidOperationException("Field XSLStyleBaseView was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field XSLStyleBaseView was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ПорогЦелиИндикатора {
			get {
				throw new System.InvalidOperationException("Field Goal was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Goal was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СвойстваИспользуемыеВУсловиях {
			get {
				throw new System.InvalidOperationException("Field RoutingConditionProperties was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingConditionProperties was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПравила {
			get {
				throw new System.InvalidOperationException("Field RoutingRuleName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingRuleName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Пользователь, организация или служба, опубликовавшие данный ресурс
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Опубликовавший {
			get {
				throw new System.InvalidOperationException("Field _Publisher was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Publisher was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// GUID представления
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string GUIDПредставления {
			get {
				throw new System.InvalidOperationException("Field ViewGuid was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ViewGuid was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ВключенаЛиФункцияМашинногоПеревода {
			get {
				throw new System.InvalidOperationException("Field IsMachineTranslationEnabledFieldName was removed from content type Видеомат" +
						"ериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsMachineTranslationEnabledFieldName was removed from content type Видеомат" +
						"ериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя4 {
			get {
				throw new System.InvalidOperationException("Field ReportName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Содержит сообщение об ошибке последнего обновления, если таковая имела место
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОшибкаОбновления {
			get {
				throw new System.InvalidOperationException("Field UpdateError was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UpdateError was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ЯвляетсяАдминистраторомСайта {
			get {
				throw new System.InvalidOperationException("Field IsSiteAdmin was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsSiteAdmin was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КонечнаяБиблиотека {
			get {
				throw new System.InvalidOperationException("Field RoutingTargetLibrary was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingTargetLibrary was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Расположение1 {
			get {
				throw new System.InvalidOperationException("Field Office was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Office was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> РазмерЗаданияОтправки {
			get {
				throw new System.InvalidOperationException("Field TranslationStateImportJobSize was removed from content type Видеоматериалы." +
						"");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateImportJobSize was removed from content type Видеоматериалы." +
						"");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВикиКонтент {
			get {
				throw new System.InvalidOperationException("Field WikiField was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WikiField was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДополнительныйФакс {
			get {
				throw new System.InvalidOperationException("Field OtherFaxNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherFaxNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТемаСообщения {
			get {
				throw new System.InvalidOperationException("Field EmailSubject was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailSubject was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.Guid> WSEventSourceGUID {
			get {
				throw new System.InvalidOperationException("Field WSEventSourceGUID was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSEventSourceGUID was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSEventContextKeys {
			get {
				throw new System.InvalidOperationException("Field WSEventContextKeys was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSEventContextKeys was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РазмерРисунка {
			get {
				throw new System.InvalidOperationException("Field ImageSize was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ImageSize was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Обработано {
			get {
				throw new System.InvalidOperationException("Field Resolved was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Resolved was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Начало0 {
			get {
				throw new System.InvalidOperationException("Field From was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field From was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Текст поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТекстПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentTextMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentTextMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Версия1 {
			get {
				throw new System.InvalidOperationException("Field _Version was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Version was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИдентификаторЛучшегоОтвета {
			get {
				throw new System.InvalidOperationException("Field BestAnswerId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field BestAnswerId was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СвойствоДляАвтоматическогоСозданияПапки {
			get {
				throw new System.InvalidOperationException("Field RoutingAutoFolderProp was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingAutoFolderProp was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ОтправитьМеткуДатыКалендаря {
			get {
				throw new System.InvalidOperationException("Field EmailCalendarDateStamp was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailCalendarDateStamp was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РеспубликаОбластьИлиКрайДопАдрес {
			get {
				throw new System.InvalidOperationException("Field OtherAddressStateOrProvince was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherAddressStateOrProvince was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЭлПочта3 {
			get {
				throw new System.InvalidOperationException("Field Email3 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Email3 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Дата {
			get {
				throw new System.InvalidOperationException("Field V4HolidayDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field V4HolidayDate was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Размер или диапазон
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОбластьДействия {
			get {
				throw new System.InvalidOperationException("Field _Coverage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Coverage was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаЗавершения {
			get {
				throw new System.InvalidOperationException("Field DateCompleted was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DateCompleted was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тип зависимости планируемой даты поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТипЗависимостиПланируемойДаты {
			get {
				throw new System.InvalidOperationException("Field AssignmentPlanIsDependentMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentPlanIsDependentMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Срок {
			get {
				throw new System.InvalidOperationException("Field TaskDueDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TaskDueDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УлицаДопАдрес {
			get {
				throw new System.InvalidOperationException("Field OtherAddressStreet was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherAddressStreet was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Текст, отображаемый в видеопроигрывателе для данного представления
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Подпись {
			get {
				throw new System.InvalidOperationException("Field VideoRenditionLabel was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field VideoRenditionLabel was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Дата0 {
			get {
				throw new System.InvalidOperationException("Field HolidayDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HolidayDate was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Сводные сведения об этом ресурсе
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Заметки1 {
			get {
				throw new System.InvalidOperationException("Field _Comments was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Comments was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Длительность поддержания доступности кэшированной версии в секундах.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Длительность0 {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheDuration was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheDuration was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Тема3 {
			get {
				throw new System.InvalidOperationException("Field LinkDiscussionTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkDiscussionTitle was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИзмененнаяСсылкаНаОтчет {
			get {
				throw new System.InvalidOperationException("Field ReportModifiedLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModifiedLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ЧислоОтветовДоСледующегоУровня {
			get {
				throw new System.InvalidOperationException("Field NumberOfRepliesToReachNextLevel was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field NumberOfRepliesToReachNextLevel was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Изменено {
			get {
				throw new System.InvalidOperationException("Field Modified was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Modified was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИндексДомАдрес {
			get {
				throw new System.InvalidOperationException("Field HomeAddressPostalCode was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeAddressPostalCode was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> КогдаПоследнийРазНапечатан {
			get {
				throw new System.InvalidOperationException("Field _LastPrinted was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _LastPrinted was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТемаОбсуждения {
			get {
				throw new System.InvalidOperationException("Field DiscussionTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DiscussionTitle was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Идентификатор родительского элемента данного отчета
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> ИдентификаторРодительскогоЭлемента0 {
			get {
				throw new System.InvalidOperationException("Field ParentId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentId was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название1 {
			get {
				throw new System.InvalidOperationException("Field LinkTitle was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LinkTitle was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ПоследнееДействие {
			get {
				throw new System.InvalidOperationException("Field LastActivity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastActivity was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string WSEventType {
			get {
				throw new System.InvalidOperationException("Field WSEventType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WSEventType was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НомерФакса {
			get {
				throw new System.InvalidOperationException("Field WorkFax was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkFax was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЭлПочта2 {
			get {
				throw new System.InvalidOperationException("Field Email2 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Email2 was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Автор" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания автора страницы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Автор0 {
			get {
				throw new System.InvalidOperationException("Field ArticleByLine was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ArticleByLine was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЛичныйИдентификатор {
			get {
				throw new System.InvalidOperationException("Field GovernmentIDNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GovernmentIDNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФлажокВыбора {
			get {
				throw new System.InvalidOperationException("Field SelectedFlag was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SelectedFlag was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДопПоле4 {
			get {
				throw new System.InvalidOperationException("Field UserField4 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserField4 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Создано {
			get {
				throw new System.InvalidOperationException("Field Created was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Created was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МобильныйТелефон {
			get {
				throw new System.InvalidOperationException("Field MobilePhone was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MobilePhone was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string НазваниеРабочегоПроцесса {
			get {
				throw new System.InvalidOperationException("Field WorkflowName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Значок, который будет отображаться для этого переопределения.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Значок {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSIconUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSIconUrl was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Сведения о правах, которыми владеет этот ресурс
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УправлениеПравами {
			get {
				throw new System.InvalidOperationException("Field _RightsManagement was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _RightsManagement was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> Дата1 {
			get {
				throw new System.InvalidOperationException("Field Date was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Date was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Категория {
			get {
				throw new System.InvalidOperationException("Field _Category was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Category was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Примечание к поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Примечание {
			get {
				throw new System.InvalidOperationException("Field AssignmentNoteMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentNoteMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяФормы0 {
			get {
				throw new System.InvalidOperationException("Field FormName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Отдел0 {
			get {
				throw new System.InvalidOperationException("Field ol_Department was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ol_Department was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИдентификаторПервичногоЭлемента {
			get {
				throw new System.InvalidOperationException("Field Item was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Item was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЯзыкПереводаСУчастиемЧеловека {
			get {
				throw new System.InvalidOperationException("Field HumanTranslationLanguageFieldName was removed from content type Видеоматери" +
						"алы.");
			}
			set {
				throw new System.InvalidOperationException("Field HumanTranslationLanguageFieldName was removed from content type Видеоматери" +
						"алы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВебСтраница {
			get {
				throw new System.InvalidOperationException("Field WebPage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WebPage was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТипКонтентаОтправки {
			get {
				throw new System.InvalidOperationException("Field RoutingContentType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingContentType was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Сайт {
			get {
				throw new System.InvalidOperationException("Field TranslationStateWebId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateWebId was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РеспубликаОбластьИлиКрай {
			get {
				throw new System.InvalidOperationException("Field WorkState was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkState was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Подтверждения {
			get {
				throw new System.InvalidOperationException("Field Confirmations was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Confirmations was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РабочиеЧасы {
			get {
				throw new System.InvalidOperationException("Field ScheduledWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ScheduledWork was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдрес2 {
			get {
				throw new System.InvalidOperationException("Field URLwMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field URLwMenu was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Имя5 {
			get {
				throw new System.InvalidOperationException("Field FirstName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FirstName was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Фактический срок исполнения поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ФактическийСрокИсполненияПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentFactDateMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentFactDateMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Возврат {
			get {
				throw new System.InvalidOperationException("Field In was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field In was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Псевдоним {
			get {
				throw new System.InvalidOperationException("Field Nickname was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Nickname was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Описывает, связан ли с файлом файл главной страницы SharePoint (MASTER) или макета страницы (ASPX). Если задать значение TRUE, будет восстановлена связь с предыдущим файлом или создан новый файл для связи.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СвязанныйФайл {
			get {
				throw new System.InvalidOperationException("Field HtmlDesignAssociated was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HtmlDesignAssociated was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СтранаИлиРегионДомАдрес {
			get {
				throw new System.InvalidOperationException("Field HomeAddressCountry was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomeAddressCountry was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Подномер вопроса заседания МВК (дополнительная часть номера)
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ПодномерВопроса {
			get {
				throw new System.InvalidOperationException("Field IssueSubnumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueSubnumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЛичныйВебСайт {
			get {
				throw new System.InvalidOperationException("Field PersonalWebsite was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PersonalWebsite was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Серьезность обнаруженной проблемы
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Серьезность {
			get {
				throw new System.InvalidOperationException("Field HealthReportSeverityIcon was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportSeverityIcon was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АдресСобытия {
			get {
				throw new System.InvalidOperationException("Field ol_EventAddress was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ol_EventAddress was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Значение {
			get {
				throw new System.InvalidOperationException("Field Значение was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Значение was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Имя ключевого показателя эффективности службы Microsoft SQL Server 2005 Analysis Services
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Индикатор {
			get {
				throw new System.InvalidOperationException("Field KPI was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field KPI was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылки на ресурсы, от которых этот ресурс является производным
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Источник {
			get {
				throw new System.InvalidOperationException("Field _Source was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Source was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Скрыть от поисковых систем в Интернете" — это столбец сайта, созданный средством публикации. Он показывает программам-обходчикам поисковых систем, что данная конкретная страница не должна индексироваться.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СкрытьОтПоисковыхСистемВИнтернете {
			get {
				throw new System.InvalidOperationException("Field RobotsNoIndex was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RobotsNoIndex was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тип носителя, формат файла и размеры
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Формат {
			get {
				throw new System.InvalidOperationException("Field _Format was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _Format was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string День {
			get {
				throw new System.InvalidOperationException("Field DayOfWeek was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DayOfWeek was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СупругАИлиСожитель {
			get {
				throw new System.InvalidOperationException("Field SpouseName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SpouseName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> СрокДействия0 {
			get {
				throw new System.InvalidOperationException("Field _dlc_ExpireDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _dlc_ExpireDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Удален {
			get {
				throw new System.InvalidOperationException("Field Deleted was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Deleted was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Дата создания этого ресурса
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаСоздания {
			get {
				throw new System.InvalidOperationException("Field _DCDateCreated was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _DCDateCreated was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ОтчетСоздан0 {
			get {
				throw new System.InvalidOperationException("Field ReportCreated was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCreated was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Измените это поле, чтобы изменить URL-адрес страницы для предварительного просмотра.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдресПредварительногоПросмотра {
			get {
				throw new System.InvalidOperationException("Field HtmlDesignPreviewUrl was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HtmlDesignPreviewUrl was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Ответ {
			get {
				throw new System.InvalidOperationException("Field ReplyNoGif was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReplyNoGif was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// META с атрибутом Description — это столбец сайта, созданный средством публикации. Поисковые системы в Интернете могут отображать это описание на страницах результатов поиска.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string METAСАтрибутомDescription {
			get {
				throw new System.InvalidOperationException("Field SeoMetaDescription was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field SeoMetaDescription was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// URL-адрес сайта, к которому применяется это переопределение.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЦелеваяОбласть {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetScope was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetScope was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Этот флажок следует устанавливать только для политик, применение которых требуется разрешить администраторам и разработчикам макетов страниц для сценариев с проверкой подлинности.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> БезопасноДляИспользованияСПроверкойПодлинности {
			get {
				throw new System.InvalidOperationException("Field PublishingAuthenticatedUse was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingAuthenticatedUse was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Значение индикатора, отформатированное его поставщиком источников данных
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФорматированноеЗначениеИндикатора {
			get {
				throw new System.InvalidOperationException("Field FormattedValue was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormattedValue was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Дата статьи" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания даты страницы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ДатаСтатьи {
			get {
				throw new System.InvalidOperationException("Field ArticleStartDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ArticleStartDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДомашнийТелефон {
			get {
				throw new System.InvalidOperationException("Field HomePhone was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HomePhone was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СверхурочныеВПраздник {
			get {
				throw new System.InvalidOperationException("Field HolidayNightWork was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HolidayNightWork was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Следует ли включать дочерние показатели
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ВключитьДочерниеИндикаторы {
			get {
				throw new System.InvalidOperationException("Field IncludeHierarchy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IncludeHierarchy was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Подробное описание ошибки
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Объяснение {
			get {
				throw new System.InvalidOperationException("Field HealthReportExplanation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportExplanation was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Следует ли каждый раз загружать данные с сервера
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> АвтоматическоеОбновление0 {
			get {
				throw new System.InvalidOperationException("Field AutoUpdate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AutoUpdate was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Папка отображения индикатора
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПапкаОтображения0 {
			get {
				throw new System.InvalidOperationException("Field DisplayFolder was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayFolder was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдрес3 {
			get {
				throw new System.InvalidOperationException("Field URLNoMenu was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field URLNoMenu was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> Ответов0 {
			get {
				throw new System.InvalidOperationException("Field ReplyCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReplyCount was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Скрыть этот шаблон отображения, в котором пользователи выбирают элементы из списка доступных шаблонов отображения.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> СкрытыйШаблон {
			get {
				throw new System.InvalidOperationException("Field TemplateHidden was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TemplateHidden was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Популярность {
			get {
				throw new System.InvalidOperationException("Field Popularity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Popularity was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> Обсуждения0 {
			get {
				throw new System.InvalidOperationException("Field NumberOfDiscussions was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NumberOfDiscussions was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МобильныйТелефон0 {
			get {
				throw new System.InvalidOperationException("Field CellPhone was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CellPhone was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КартинкаКатегории {
			get {
				throw new System.InvalidOperationException("Field CategoryImage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CategoryImage was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТелетайпИлиТекстовыйТелефон {
			get {
				throw new System.InvalidOperationException("Field TTYTDDNumber was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TTYTDDNumber was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Роль {
			get {
				throw new System.InvalidOperationException("Field Role was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Role was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Расстояние {
			get {
				throw new System.InvalidOperationException("Field Mileage was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Mileage was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Количество продлений поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<double> КоличествоПродлений {
			get {
				throw new System.InvalidOperationException("Field AssignmentProlongationCountMVK was removed from content type Видеоматериалы" +
						".");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentProlongationCountMVK was removed from content type Видеоматериалы" +
						".");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<System.DateTime> ВремяОкончания {
			get {
				throw new System.InvalidOperationException("Field EndDate was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EndDate was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ТипФайла {
			get {
				throw new System.InvalidOperationException("Field FileType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FileType was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Имя листа для данного значения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЛистЗначения {
			get {
				throw new System.InvalidOperationException("Field ValueSheet was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ValueSheet was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЗаголовкиЭлектроннойПочты {
			get {
				throw new System.InvalidOperationException("Field EmailHeaders was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailHeaders was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string CообщениеПолеКопия {
			get {
				throw new System.InvalidOperationException("Field EmailCc was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailCc was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Цель индикатора, отформатированная его поставщиком источников данных
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ФорматированнаяЦельИндикатора {
			get {
				throw new System.InvalidOperationException("Field FormattedGoal was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FormattedGoal was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Вложения {
			get {
				throw new System.InvalidOperationException("Field Attachments was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Attachments was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ЦелыйДень {
			get {
				throw new System.InvalidOperationException("Field fAllDayEvent was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field fAllDayEvent was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Журнал {
			get {
				throw new System.InvalidOperationException("Field ReportHistoryLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportHistoryLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ДопПоле1 {
			get {
				throw new System.InvalidOperationException("Field UserField1 was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserField1 was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Псевдонимы {
			get {
				throw new System.InvalidOperationException("Field RoutingAliases was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingAliases was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Адрес рассмотрения вопроса повестки заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Адрес0 {
			get {
				throw new System.InvalidOperationException("Field IssueAddressMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueAddressMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Скрытие этого параметра шаблона отображения при создании новых представлений.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Скрытый {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTemplateHidden was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTemplateHidden was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string МгнСообщения {
			get {
				throw new System.InvalidOperationException("Field IMAddress was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMAddress was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КонечныйПуть {
			get {
				throw new System.InvalidOperationException("Field RoutingTargetPath was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field RoutingTargetPath was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ПопулярноеОбсуждение {
			get {
				throw new System.InvalidOperationException("Field IsFeatured was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IsFeatured was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИндексДопАдрес {
			get {
				throw new System.InvalidOperationException("Field OtherAddressPostalCode was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OtherAddressPostalCode was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> РабочаяОбласть {
			get {
				throw new System.InvalidOperationException("Field WorkspaceLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkspaceLink was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ШиринаРисунка {
			get {
				throw new System.InvalidOperationException("Field ImageWidth was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ImageWidth was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Результат0 {
			get {
				throw new System.InvalidOperationException("Field WorkflowOutcome was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkflowOutcome was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтправительСообщения {
			get {
				throw new System.InvalidOperationException("Field EmailSender was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field EmailSender was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПереведенныеЭлементы {
			get {
				throw new System.InvalidOperationException("Field TranslationStateItemInformation was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateItemInformation was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		/// <summary>
		/// Данная категория или типы контента не совместимы с этим стилем
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Категория0 {
			get {
				throw new System.InvalidOperationException("Field XSLStyleCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field XSLStyleCategory was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Список {
			get {
				throw new System.InvalidOperationException("Field TranslationStateListId was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateListId was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCachePolicy.VaryByHeaders в ASP.Net 2.0.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ВЗависимостиОтЗаголовкаHTTP {
			get {
				throw new System.InvalidOperationException("Field PublishingVaryByHeader was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingVaryByHeader was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РаннийУход {
			get {
				throw new System.InvalidOperationException("Field LeaveEarly was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LeaveEarly was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемСоздан {
			get {
				throw new System.InvalidOperationException("Field ReportCreatedByDisplay was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCreatedByDisplay was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеПеревода> СостояниеПеревода {
			get {
				throw new System.InvalidOperationException("Field TranslationStateStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateStatus was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Состояние контроля поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеКонтроляПоручения> СостояниеКонтроляПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentControlStateMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentControlStateMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ЦельUDC> ЦельUDC {
			get {
				throw new System.InvalidOperationException("Field Purpose was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Purpose was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Статус поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СтатусПоручения> СтатусПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentStatusMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentStatusMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Важность> Важность0 {
			get {
				throw new System.InvalidOperationException("Field Priority was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Priority was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ТипСписка> ТипСписка {
			get {
				throw new System.InvalidOperationException("Field ListType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ListType was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ТипПеревода> ТипПеревода {
			get {
				throw new System.InvalidOperationException("Field TranslationStateTranslationType was removed from content type Видеоматериал" +
						"ы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateTranslationType was removed from content type Видеоматериал" +
						"ы.");
			}
		}
		
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СовместимыеВерсииИП> СовместимыеВерсииИП {
			get {
				throw new System.InvalidOperationException("Field UIVersion was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UIVersion was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ДлительностьОтпуска> ДлительностьОтпуска {
			get {
				throw new System.InvalidOperationException("Field NumberOfVacation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field NumberOfVacation was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Категория> Категория1 {
			get {
				throw new System.InvalidOperationException("Field Category was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Category was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеВопроса> СостояниеВопроса {
			get {
				throw new System.InvalidOperationException("Field IssueStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueStatus was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Состояние0> Состояние1 {
			get {
				throw new System.InvalidOperationException("Field MemberStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MemberStatus was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Укажите тип веб-части, для которого предназначен этот стиль. Для представлений списка по умолчанию выберите XSLTListViewWebPart.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<КонечнаяВебЧасть> КонечнаяВебЧасть {
			get {
				throw new System.InvalidOperationException("Field XSLStyleWPType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field XSLStyleWPType was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тип элемента управления, определенный в этом шаблоне отображения.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ЦелевойТипЭлементаУправления> ЦелевойТипЭлементаУправления {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetControlType was removed from content type Видеоматер" +
						"иалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTargetControlType was removed from content type Видеоматер" +
						"иалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ТипОтпуска> ТипОтпуска {
			get {
				throw new System.InvalidOperationException("Field Vacation was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Vacation was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Выберите уровень данных, который должен показывать этот шаблон отображения. Он определяет, где этот шаблон будет отображаться как выбираемый параметр в пользовательском интерфейсе конфигурации.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<УровеньШаблона> УровеньШаблона {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateLevel was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateLevel was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Пол> Пол {
			get {
				throw new System.InvalidOperationException("Field Gender was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Gender was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Состояние1> Состояние2 {
			get {
				throw new System.InvalidOperationException("Field DecisionStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field DecisionStatus was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ТипПодключения> ТипПодключения {
			get {
				throw new System.InvalidOperationException("Field ConnectionType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ConnectionType was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Выбор элементов управления поиска для использования в этом шаблоне отображения.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ЦелевойТипЭлементаУправленияПоиск> ЦелевойТипЭлементаУправленияПоиск {
			get {
				throw new System.InvalidOperationException("Field TargetControlType was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TargetControlType was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<КатегорияКонтента> КатегорияКонтента {
			get {
				throw new System.InvalidOperationException("Field ContentCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ContentCategory was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Состояние отчета
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеОтчета> СостояниеОтчета {
			get {
				throw new System.InvalidOperationException("Field ReportStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportStatus was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Ответ> Ответ0 {
			get {
				throw new System.InvalidOperationException("Field AttendeeStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AttendeeStatus was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тип дней (зависимость от другого поручения МВК)
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ТипДней> ТипДней {
			get {
				throw new System.InvalidOperationException("Field AssignmentDayTypeMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentDayTypeMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Определение условий автоматической проверки правил
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Расписание> Расписание {
			get {
				throw new System.InvalidOperationException("Field HealthRuleSchedule was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleSchedule was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Категория отчета
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<КатегорияОтчета> КатегорияОтчета {
			get {
				throw new System.InvalidOperationException("Field ReportCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCategory was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Выберите типы данных управляемых свойств поиска, с которыми будет использоваться этот шаблон отображения фильтра. Если значения не ввести, шаблон отображения будет доступен для всех типов данных.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СовместимыеТипыДанныхДляПоиска> СовместимыеТипыДанныхДляПоиска {
			get {
				throw new System.InvalidOperationException("Field CompatibleSearchDataTypes was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CompatibleSearchDataTypes was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Параметр, позволяющий учесть это переопределение во время выбора представления.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Автономно> Автономно {
			get {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTemplateType was removed from content type Видеоматериалы." +
						"");
			}
			set {
				throw new System.InvalidOperationException("Field DisplayTemplateJSTemplateType was removed from content type Видеоматериалы." +
						"");
			}
		}
		
		/// <summary>
		/// Статус заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Статус> Статус {
			get {
				throw new System.InvalidOperationException("Field MeetingStatusMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingStatusMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// В соответствии с HttpCacheability в ASP.Net 2.0.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ВозможностьКэширования> ВозможностьКэширования {
			get {
				throw new System.InvalidOperationException("Field PublishingCacheability was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingCacheability was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				throw new System.InvalidOperationException("Field TaskStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TaskStatus was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Серьезность обнаруженной проблемы
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Серьезность> Серьезность0 {
			get {
				throw new System.InvalidOperationException("Field HealthReportSeverity was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthReportSeverity was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Область правил определяет, на каких компьютерах будет выполняться файл правил. Если область правил имеет значение "Все", файл правил будет выполняться на всех компьютерах, на которых запущена указанная служба. Если область правил имеет значение "Любой", файл правил будет выполняться на первом доступном компьютере, на котором запущена указанная служба.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Область> Область {
			get {
				throw new System.InvalidOperationException("Field HealthRuleScope was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field HealthRuleScope was removed from content type Видеоматериалы.");
			}
		}

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<СостояниеПеревода0> СостояниеПеревода0 {
			get {
				throw new System.InvalidOperationException("Field TranslationStatus was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStatus was removed from content type Видеоматериалы.");
			}
		}
		
		
	
		/// <summary>
		/// Характеристика отклонения от норматива
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ХарактеристикаОтклоненияОтНорматива> ХарактеристикаОтклоненияОтНорматива {
			get {
				throw new System.InvalidOperationException("Field Характеристика отклонения от норматива was removed from content type Видеом" +
						"атериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Характеристика отклонения от норматива was removed from content type Видеом" +
						"атериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<ЧастьРечи> ЧастьРечи {
			get {
				throw new System.InvalidOperationException("Field IMEPos was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IMEPos was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на докладчика по вопросу заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникУчастниковУчастник Докладчик {
			get {
				throw new System.InvalidOperationException("Field IssueReporterMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueReporterMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override АКВопросыЗаседанияВопросПовестки Вопрос0 {
			get {
				throw new System.InvalidOperationException("Field Вопрос was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Вопрос was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Исполнитель по поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникУчастниковУчастник Исполнитель {
			get {
				throw new System.InvalidOperationException("Field AssignmentExecutorMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentExecutorMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГВопросыЗаседанияЭлемент Вопрос1 {
			get {
				throw new System.InvalidOperationException("Field IssueAttachmentIssueMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueAttachmentIssueMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ЧислоДочернихПапокId {
			get {
				throw new System.InvalidOperationException("Field FolderChildCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FolderChildCount was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЧислоДочернихПапокFolderChildCount {
			get {
				throw new System.InvalidOperationException("Field FolderChildCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field FolderChildCount was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГЗаседанияЭлемент Заседание {
			get {
				throw new System.InvalidOperationException("Field IssueMeetingMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueMeetingMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемСозданоПриложениеId {
			get {
				throw new System.InvalidOperationException("Field AppAuthor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AppAuthor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемСозданоПриложениеTitle {
			get {
				throw new System.InvalidOperationException("Field AppAuthor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AppAuthor was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на категорию вопроса повестки заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				throw new System.InvalidOperationException("Field IssueCategoryMVKLink was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueCategoryMVKLink was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылки на содокладчиков по вопросу заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникУчастниковУчастник Содокладчики {
			get {
				throw new System.InvalidOperationException("Field IssueCoReportesMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueCoReportesMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемСозданId {
			get {
				throw new System.InvalidOperationException("Field ReportCreatedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCreatedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемСоздан0 {
			get {
				throw new System.InvalidOperationException("Field ReportCreatedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportCreatedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КомуНазначеноId {
			get {
				throw new System.InvalidOperationException("Field AssignedTo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignedTo was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КомуНазначено {
			get {
				throw new System.InvalidOperationException("Field AssignedTo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignedTo was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИсходноеНазваниеПреобразованныйДокументId {
			get {
				throw new System.InvalidOperationException("Field ParentLeafName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentLeafName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИсходноеНазваниеПреобразованныйДокументParentLeafName {
			get {
				throw new System.InvalidOperationException("Field ParentLeafName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentLeafName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<System.Nullable<int>> КатегорияId {
			get {
				throw new System.InvalidOperationException("Field PostCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PostCategory was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<string> КатегорияTitle {
			get {
				throw new System.InvalidOperationException("Field PostCategory was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PostCategory was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override Элемент Показатель {
			get {
				throw new System.InvalidOperationException("Field Показатель was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Показатель was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ПроектнаяОрганизацияЭлемент Проектировщик {
			get {
				throw new System.InvalidOperationException("Field projectorganization was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field projectorganization was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на вопрос повестки заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГВопросыЗаседанияЭлемент ВопросПовестки {
			get {
				throw new System.InvalidOperationException("Field AssignmentIssueMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentIssueMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемСозданоId {
			get {
				throw new System.InvalidOperationException("Field Author was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Author was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемСоздано {
			get {
				throw new System.InvalidOperationException("Field Author was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Author was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Соисполнители по поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникУчастниковУчастник Соисполнители {
			get {
				throw new System.InvalidOperationException("Field AssignmentCoExecutorsMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentCoExecutorsMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на справочник объектов
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ОбъектыЭлемент Объект {
			get {
				throw new System.InvalidOperationException("Field OrderObjectMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderObjectMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемРазмещеноId {
			get {
				throw new System.InvalidOperationException("Field MemberLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MemberLookup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемРазмещеноTitle {
			get {
				throw new System.InvalidOperationException("Field MemberLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MemberLookup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override Элемент ЕдиницаИзмерения {
			get {
				throw new System.InvalidOperationException("Field Единица_x0020_измерения was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Единица_x0020_измерения was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Вид решения по вопросу МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ВидыРешенияЭлемент ВидРешения {
			get {
				throw new System.InvalidOperationException("Field IssueDecisionTypeMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueDecisionTypeMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ЗаметкиКВозвратуId {
			get {
				throw new System.InvalidOperationException("Field _CheckinComment was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _CheckinComment was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЗаметкиКВозвратуCheckinComment {
			get {
				throw new System.InvalidOperationException("Field _CheckinComment was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field _CheckinComment was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемОбработаноId {
			get {
				throw new System.InvalidOperationException("Field ResolvedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ResolvedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемОбработано {
			get {
				throw new System.InvalidOperationException("Field ResolvedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ResolvedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ЧислоДочернихЭлементовId {
			get {
				throw new System.InvalidOperationException("Field ItemChildCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ItemChildCount was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЧислоДочернихЭлементовItemChildCount {
			get {
				throw new System.InvalidOperationException("Field ItemChildCount was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ItemChildCount was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГВопросыЗаседанияЭлемент Вопрос2 {
			get {
				throw new System.InvalidOperationException("Field IssueObjectIssueMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueObjectIssueMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Автор заявки МВК, ссылка на справочник организаций
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникОрганизацийОрганизация АвторЗаявки {
			get {
				throw new System.InvalidOperationException("Field OrderOrgAuthorMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderOrgAuthorMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> АвторПоследнегоОтветаId {
			get {
				throw new System.InvalidOperationException("Field LastReplyBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastReplyBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АвторПоследнегоОтвета {
			get {
				throw new System.InvalidOperationException("Field LastReplyBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastReplyBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ГруппаЗадачId {
			get {
				throw new System.InvalidOperationException("Field TaskGroup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TaskGroup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ГруппаЗадач {
			get {
				throw new System.InvalidOperationException("Field TaskGroup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TaskGroup was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на справочник поселений
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ПоселенияЭлемент Поселение {
			get {
				throw new System.InvalidOperationException("Field IssueSettlementMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueSettlementMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ПодареннаяЭмблемаId {
			get {
				throw new System.InvalidOperationException("Field GiftedBadgeLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GiftedBadgeLookup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ПодареннаяЭмблемаTitle {
			get {
				throw new System.InvalidOperationException("Field GiftedBadgeLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field GiftedBadgeLookup was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Организация исполнителя по поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникОрганизацийОрганизация ОрганизацияИсполнителя {
			get {
				throw new System.InvalidOperationException("Field AssignmentExecutorOrgMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentExecutorOrgMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ЭкспортирующийПользовательId {
			get {
				throw new System.InvalidOperationException("Field TranslationStateExportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateExportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ЭкспортирующийПользователь {
			get {
				throw new System.InvalidOperationException("Field TranslationStateExportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateExportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<System.Nullable<int>> ПолучателиId {
			get {
				throw new System.InvalidOperationException("Field V4SendTo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field V4SendTo was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<string> ПолучателиImnName {
			get {
				throw new System.InvalidOperationException("Field V4SendTo was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field V4SendTo was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на муниципальный район вопроса МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				throw new System.InvalidOperationException("Field IssueMunicipalDistrictMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueMunicipalDistrictMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<System.Nullable<int>> УчастникиId {
			get {
				throw new System.InvalidOperationException("Field ParticipantsPicker was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParticipantsPicker was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Collections.Generic.IList<string> УчастникиImnName {
			get {
				throw new System.InvalidOperationException("Field ParticipantsPicker was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParticipantsPicker was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемИзмененоId {
			get {
				throw new System.InvalidOperationException("Field MyEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MyEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемИзмененоNameWithPicture {
			get {
				throw new System.InvalidOperationException("Field MyEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MyEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> УчастникId {
			get {
				throw new System.InvalidOperationException("Field Member was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Member was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string УчастникNameWithPictureAndDetails {
			get {
				throw new System.InvalidOperationException("Field Member was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Member was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Должность исполнителя по поручению МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникДолжностейPosition ДолжностьИсполнителя {
			get {
				throw new System.InvalidOperationException("Field AssignmentExecutorPositionMVK was removed from content type Видеоматериалы." +
						"");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentExecutorPositionMVK was removed from content type Видеоматериалы." +
						"");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ОбъектыЭлемент Объект0 {
			get {
				throw new System.InvalidOperationException("Field IssueObjectObjectMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueObjectObjectMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> АвторИзмененийId {
			get {
				throw new System.InvalidOperationException("Field ReportModifiedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModifiedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АвторИзменений0 {
			get {
				throw new System.InvalidOperationException("Field ReportModifiedBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportModifiedBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ОбъектыЭлемент Объект1 {
			get {
				throw new System.InvalidOperationException("Field Объект was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Объект was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ОтправляющийПользовательId {
			get {
				throw new System.InvalidOperationException("Field TranslationStateImportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateImportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ОтправляющийПользователь {
			get {
				throw new System.InvalidOperationException("Field TranslationStateImportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field TranslationStateImportRequestingUser was removed from content type Видеомат" +
						"ериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> РедакторРодительскогоЭлементаId {
			get {
				throw new System.InvalidOperationException("Field ParentItemEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentItemEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string РедакторРодительскогоЭлемента {
			get {
				throw new System.InvalidOperationException("Field ParentItemEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentItemEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГЗаявкиЭлемент Заявка {
			get {
				throw new System.InvalidOperationException("Field IssueOrderMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueOrderMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемИзмененоId0 {
			get {
				throw new System.InvalidOperationException("Field Editor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Editor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемИзменено {
			get {
				throw new System.InvalidOperationException("Field Editor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Editor was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Контролер по исполнению поручения МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникУчастниковУчастник КонтролерПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentControllerMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentControllerMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Ссылка на справочник застройщиков
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникЗастройщиковЭлемент Застройщик {
			get {
				throw new System.InvalidOperationException("Field OrderBuilderMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderBuilderMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Тип поручения
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ТипыПорученийТипПоручения ТипПоручения {
			get {
				throw new System.InvalidOperationException("Field AssignmentTypeMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AssignmentTypeMVK was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Владелец этого документа
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ВладелецId0 {
			get {
				throw new System.InvalidOperationException("Field ReportOwner was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportOwner was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// Владелец этого документа
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Владелец {
			get {
				throw new System.InvalidOperationException("Field ReportOwner was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ReportOwner was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КонтактId {
			get {
				throw new System.InvalidOperationException("Field PublishingContact was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingContact was removed from content type Видеоматериалы.");
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Контакт {
			get {
				throw new System.InvalidOperationException("Field PublishingContact was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field PublishingContact was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> АвторПоследнейЗаписиId {
			get {
				throw new System.InvalidOperationException("Field LastPostBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastPostBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string АвторПоследнейЗаписи {
			get {
				throw new System.InvalidOperationException("Field LastPostBy was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field LastPostBy was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override РГЗаседанияЭлемент Заседание0 {
			get {
				throw new System.InvalidOperationException("Field MeetingAttachmentMeetingMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingAttachmentMeetingMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ПодгруппыАналитическихПоказателейЭлемент Подгруппа {
			get {
				throw new System.InvalidOperationException("Field Подгруппа was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Подгруппа was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override Элемент ТипДокумента {
			get {
				throw new System.InvalidOperationException("Field MeetingAttachmentDocTypeMVK was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingAttachmentDocTypeMVK was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КатегорияId0 {
			get {
				throw new System.InvalidOperationException("Field CategoriesLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CategoriesLookup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КатегорияTitle0 {
			get {
				throw new System.InvalidOperationException("Field CategoriesLookup was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field CategoriesLookup was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> КемИзмененоПриложениеId {
			get {
				throw new System.InvalidOperationException("Field AppEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AppEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string КемИзмененоПриложениеTitle {
			get {
				throw new System.InvalidOperationException("Field AppEditor was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field AppEditor was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИсходнаяВерсияПреобразованныйДокументId {
			get {
				throw new System.InvalidOperationException("Field ParentVersionString was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentVersionString was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИсходнаяВерсияПреобразованныйДокументParentVersionString {
			get {
				throw new System.InvalidOperationException("Field ParentVersionString was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field ParentVersionString was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> ИмяПользователяId {
			get {
				throw new System.InvalidOperationException("Field UserName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ИмяПользователя {
			get {
				throw new System.InvalidOperationException("Field UserName was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field UserName was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<int> СозданоId {
			get {
				throw new System.InvalidOperationException("Field Created_x0020_Date was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Created_x0020_Date was removed from content type Видеоматериалы.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string СозданоTimeCreated {
			get {
				throw new System.InvalidOperationException("Field Created_x0020_Date was removed from content type Видеоматериалы.");
			}
			set {
				throw new System.InvalidOperationException("Field Created_x0020_Date was removed from content type Видеоматериалы.");
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="MainMenuDenyList")]
	public partial class MainMenuDenyListЭлемент : Элемент {
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _denyGroupsId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _denyGroupsImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MainMenuDenyListЭлемент() {
			this._denyGroupsId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._denyGroupsId.OnChanged += new System.EventHandler(this.OnDenyGroupsIdChanged);
			this._denyGroupsId.OnChanging += new System.EventHandler(this.OnDenyGroupsIdChanging);
			this._denyGroupsImnName = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._denyGroupsImnName.OnChanged += new System.EventHandler(this.OnDenyGroupsImnNameChanged);
			this._denyGroupsImnName.OnChanging += new System.EventHandler(this.OnDenyGroupsImnNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DenyGroups", Storage="_denyGroupsId", Required=true, FieldType="User", IsLookupId=true)]
		public System.Collections.Generic.IList<System.Nullable<int>> DenyGroupsId {
			get {
				return this._denyGroupsId;
			}
			set {
				this._denyGroupsId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DenyGroups", Storage="_denyGroupsImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public System.Collections.Generic.IList<string> DenyGroupsImnName {
			get {
				return this._denyGroupsImnName;
			}
			set {
				this._denyGroupsImnName.Assign(value);
			}
		}
		
		private void OnDenyGroupsIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DenyGroupsId", this._denyGroupsId.Clone());
		}
		
		private void OnDenyGroupsIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DenyGroupsId");
		}
		
		private void OnDenyGroupsImnNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DenyGroupsImnName", this._denyGroupsImnName.Clone());
		}
		
		private void OnDenyGroupsImnNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DenyGroupsImnName");
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Аварийный жилищный фонд")]
	public partial class АварийныйЖилищныйФондЭлемент : Элемент {
		
		private string _наименованиеМуниципальногоОбразования;
		
		private System.Nullable<System.DateTime> _срокРассмотрения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _докладчик;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АварийныйЖилищныйФондЭлемент() {
			this._докладчик = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._докладчик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnДокладчикSync);
			this._докладчик.OnChanged += new System.EventHandler(this.OnДокладчикChanged);
			this._докладчик.OnChanging += new System.EventHandler(this.OnДокладчикChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x0430__x0438__x043c__x04", Storage="_наименованиеМуниципальногоОбразования", FieldType="Text")]
		public string НаименованиеМуниципальногоОбразования {
			get {
				return this._наименованиеМуниципальногоОбразования;
			}
			set {
				if ((value != this._наименованиеМуниципальногоОбразования)) {
					this.OnPropertyChanging("НаименованиеМуниципальногоОбразования", this._наименованиеМуниципальногоОбразования);
					this._наименованиеМуниципальногоОбразования = value;
					this.OnPropertyChanged("НаименованиеМуниципальногоОбразования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0440__x043e__x043a__x00", Storage="_срокРассмотрения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокРассмотрения {
			get {
				return this._срокРассмотрения;
			}
			set {
				if ((value != this._срокРассмотрения)) {
					this.OnPropertyChanging("СрокРассмотрения", this._срокРассмотрения);
					this._срокРассмотрения = value;
					this.OnPropertyChanged("СрокРассмотрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0414__x043e__x043a__x043b__x04", Storage="_докладчик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Докладчик {
			get {
				return this._докладчик.GetEntity();
			}
			set {
				this._докладчик.SetEntity(value);
			}
		}
		
		private void OnДокладчикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Докладчик", this._докладчик.Clone());
		}
		
		private void OnДокладчикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Докладчик");
		}
		
		private void OnДокладчикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АварийныйЖилищныйФондЭлемент.Add(this);
			}
			else {
				e.Item.АварийныйЖилищныйФондЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Список отражает связь многие ко многим для списков Объект и Вопрос повестки заседания
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Объект вопроса", Id="0x0100801A9BF42D9CF441A8DE498AE7E2F2E2")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(АКОбъектыВопросаЗаседанияОбъектВопроса))]
	public partial class ОбъектВопроса : Элемент {
		
		protected Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект;
		
		protected Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопрос;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ОбъектВопроса() {
			this._объект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектSync);
			this._объект.OnChanged += new System.EventHandler(this.OnОбъектChanged);
			this._объект.OnChanging += new System.EventHandler(this.OnОбъектChanging);
			this._вопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопросSync);
			this._вопрос.OnChanged += new System.EventHandler(this.OnВопросChanged);
			this._вопрос.OnChanging += new System.EventHandler(this.OnВопросChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Объект", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Вопрос", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public virtual АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		private void OnОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект", this._объект.Clone());
		}
		
		private void OnОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект");
		}
		
		private void OnОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
		}
		
		private void OnВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос", this._вопрос.Clone());
		}
		
		private void OnВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос");
		}
		
		private void OnВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Виды решения")]
	public partial class ВидыРешенияЭлемент : Элемент {
		
		private System.Nullable<bool> _метка;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ВидыРешенияЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsPositive", Storage="_метка", FieldType="Boolean")]
		public System.Nullable<bool> Метка {
			get {
				return this._метка;
			}
			set {
				if ((value != this._метка)) {
					this.OnPropertyChanging("Метка", this._метка);
					this._метка = value;
					this.OnPropertyChanged("Метка");
				}
			}
		}
		
		/// <summary>
		/// Вид решения по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueDecisionTypeMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		/// <summary>
		/// Вид решения по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueDecisionTypeMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0422__x0438__x043f__x0020__x040", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ВидРешения = this;
			}
			else {
				e.Item.ВидРешения = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ВидРешения = this;
			}
			else {
				e.Item.ВидРешения = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ТипРешения = this;
			}
			else {
				e.Item.ТипРешения = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Генеральные планы")]
	public partial class ГенеральныеПланыЭлемент : Элемент {
		
		private string _состояние;
		
		private string _датаПредставленияВПМО;
		
		private string _датаРассмотренияНаГрадСовете;
		
		private string _датаУтверждения;
		
		private string _состояниеПодготовкиПЗЗ;
		
		private string _зонаВлияния;
		
		private string _муниципальноеОбразование;
		
		private System.Nullable<СостояниеРассмотрения> _состояниеРассмотрения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _наименованиеРайона;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ГенеральныеПланыЭлемент() {
			this._наименованиеРайона = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._наименованиеРайона.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnНаименованиеРайонаSync);
			this._наименованиеРайона.OnChanged += new System.EventHandler(this.OnНаименованиеРайонаChanged);
			this._наименованиеРайона.OnChanging += new System.EventHandler(this.OnНаименованиеРайонаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x043e__x0441__x0442__x04", Storage="_состояние", FieldType="Text")]
		public string Состояние {
			get {
				return this._состояние;
			}
			set {
				if ((value != this._состояние)) {
					this.OnPropertyChanging("Состояние", this._состояние);
					this._состояние = value;
					this.OnPropertyChanged("Состояние");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x00", Storage="_датаПредставленияВПМО", FieldType="Text")]
		public string ДатаПредставленияВПМО {
			get {
				return this._датаПредставленияВПМО;
			}
			set {
				if ((value != this._датаПредставленияВПМО)) {
					this.OnPropertyChanging("ДатаПредставленияВПМО", this._датаПредставленияВПМО);
					this._датаПредставленияВПМО = value;
					this.OnPropertyChanged("ДатаПредставленияВПМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x000", Storage="_датаРассмотренияНаГрадСовете", FieldType="Text")]
		public string ДатаРассмотренияНаГрадСовете {
			get {
				return this._датаРассмотренияНаГрадСовете;
			}
			set {
				if ((value != this._датаРассмотренияНаГрадСовете)) {
					this.OnPropertyChanging("ДатаРассмотренияНаГрадСовете", this._датаРассмотренияНаГрадСовете);
					this._датаРассмотренияНаГрадСовете = value;
					this.OnPropertyChanged("ДатаРассмотренияНаГрадСовете");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x001", Storage="_датаУтверждения", FieldType="Text")]
		public string ДатаУтверждения {
			get {
				return this._датаУтверждения;
			}
			set {
				if ((value != this._датаУтверждения)) {
					this.OnPropertyChanging("ДатаУтверждения", this._датаУтверждения);
					this._датаУтверждения = value;
					this.OnPropertyChanged("ДатаУтверждения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x043e__x0441__x0442__x040", Storage="_состояниеПодготовкиПЗЗ", FieldType="Text")]
		public string СостояниеПодготовкиПЗЗ {
			get {
				return this._состояниеПодготовкиПЗЗ;
			}
			set {
				if ((value != this._состояниеПодготовкиПЗЗ)) {
					this.OnPropertyChanging("СостояниеПодготовкиПЗЗ", this._состояниеПодготовкиПЗЗ);
					this._состояниеПодготовкиПЗЗ = value;
					this.OnPropertyChanged("СостояниеПодготовкиПЗЗ");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x043e__x043d__x0430__x00", Storage="_зонаВлияния", FieldType="Text")]
		public string ЗонаВлияния {
			get {
				return this._зонаВлияния;
			}
			set {
				if ((value != this._зонаВлияния)) {
					this.OnPropertyChanging("ЗонаВлияния", this._зонаВлияния);
					this._зонаВлияния = value;
					this.OnPropertyChanged("ЗонаВлияния");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x0430__x0438__x043c__x040", Storage="_муниципальноеОбразование", FieldType="Text")]
		public string МуниципальноеОбразование {
			get {
				return this._муниципальноеОбразование;
			}
			set {
				if ((value != this._муниципальноеОбразование)) {
					this.OnPropertyChanging("МуниципальноеОбразование", this._муниципальноеОбразование);
					this._муниципальноеОбразование = value;
					this.OnPropertyChanged("МуниципальноеОбразование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_состояниеРассмотрения", FieldType="Choice")]
		public System.Nullable<СостояниеРассмотрения> СостояниеРассмотрения {
			get {
				return this._состояниеРассмотрения;
			}
			set {
				if ((value != this._состояниеРассмотрения)) {
					this.OnPropertyChanging("СостояниеРассмотрения", this._состояниеРассмотрения);
					this._состояниеРассмотрения = value;
					this.OnPropertyChanged("СостояниеРассмотрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041d__x0430__x0438__x043c__x04", Storage="_наименованиеРайона", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация НаименованиеРайона {
			get {
				return this._наименованиеРайона.GetEntity();
			}
			set {
				this._наименованиеРайона.SetEntity(value);
			}
		}
		
		private void OnНаименованиеРайонаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("НаименованиеРайона", this._наименованиеРайона.Clone());
		}
		
		private void OnНаименованиеРайонаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("НаименованиеРайона");
		}
		
		private void OnНаименованиеРайонаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГенеральныеПланыЭлемент.Add(this);
			}
			else {
				e.Item.ГенеральныеПланыЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Генпланы")]
	public partial class ГенпланыЭлемент : Элемент {
		
		private string _реквизитыРаспоряженияОбУтверждении;
		
		private string _реквизитыМуниципальногоКонтракта;
		
		private string _проектнаяОрганизация;
		
		private System.Nullable<System.DateTime> _датаПубликацииВоФГИСТП;
		
		private string _датаПоступленияВПМО;
		
		private string _датаПроведенияСовещанияВПМО;
		
		private string _датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО;
		
		private System.Nullable<System.DateTime> _датаРассмотренияНаМВК;
		
		private System.Nullable<System.DateTime> _срокНаправленияПроектаВПМО;
		
		private System.Nullable<System.DateTime> _датаРассмотренияНаГС;
		
		private string _датаПроведенияСогласительнойКомиссииОМС;
		
		private string _поРезультатамСогласованияПМО;
		
		private string _примечание;
		
		private string _документация;
		
		private string _материалы;
		
		private string _карта;
		
		private System.Nullable<РезультатПубличныйСлушаний> _результатПубличныйСлушаний;
		
		private System.Nullable<СведенияОбУтверждении> _сведенияОбУтверждении;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _городскойОкруг;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ГенпланыЭлемент() {
			this._городскойОкруг = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._городскойОкруг.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnГородскойОкругSync);
			this._городскойОкруг.OnChanged += new System.EventHandler(this.OnГородскойОкругChanged);
			this._городскойОкруг.OnChanging += new System.EventHandler(this.OnГородскойОкругChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0420__x0435__x043a__x0432__x04", Storage="_реквизитыРаспоряженияОбУтверждении", FieldType="Text")]
		public string РеквизитыРаспоряженияОбУтверждении {
			get {
				return this._реквизитыРаспоряженияОбУтверждении;
			}
			set {
				if ((value != this._реквизитыРаспоряженияОбУтверждении)) {
					this.OnPropertyChanging("РеквизитыРаспоряженияОбУтверждении", this._реквизитыРаспоряженияОбУтверждении);
					this._реквизитыРаспоряженияОбУтверждении = value;
					this.OnPropertyChanged("РеквизитыРаспоряженияОбУтверждении");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0420__x0435__x043a__x0432__x040", Storage="_реквизитыМуниципальногоКонтракта", FieldType="Text")]
		public string РеквизитыМуниципальногоКонтракта {
			get {
				return this._реквизитыМуниципальногоКонтракта;
			}
			set {
				if ((value != this._реквизитыМуниципальногоКонтракта)) {
					this.OnPropertyChanging("РеквизитыМуниципальногоКонтракта", this._реквизитыМуниципальногоКонтракта);
					this._реквизитыМуниципальногоКонтракта = value;
					this.OnPropertyChanged("РеквизитыМуниципальногоКонтракта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041f__x0440__x043e__x0435__x04", Storage="_проектнаяОрганизация", FieldType="Text")]
		public string ПроектнаяОрганизация {
			get {
				return this._проектнаяОрганизация;
			}
			set {
				if ((value != this._проектнаяОрганизация)) {
					this.OnPropertyChanging("ПроектнаяОрганизация", this._проектнаяОрганизация);
					this._проектнаяОрганизация = value;
					this.OnPropertyChanged("ПроектнаяОрганизация");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x00", Storage="_датаПубликацииВоФГИСТП", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПубликацииВоФГИСТП {
			get {
				return this._датаПубликацииВоФГИСТП;
			}
			set {
				if ((value != this._датаПубликацииВоФГИСТП)) {
					this.OnPropertyChanging("ДатаПубликацииВоФГИСТП", this._датаПубликацииВоФГИСТП);
					this._датаПубликацииВоФГИСТП = value;
					this.OnPropertyChanged("ДатаПубликацииВоФГИСТП");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x000", Storage="_датаПоступленияВПМО", FieldType="Text")]
		public string ДатаПоступленияВПМО {
			get {
				return this._датаПоступленияВПМО;
			}
			set {
				if ((value != this._датаПоступленияВПМО)) {
					this.OnPropertyChanging("ДатаПоступленияВПМО", this._датаПоступленияВПМО);
					this._датаПоступленияВПМО = value;
					this.OnPropertyChanged("ДатаПоступленияВПМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x001", Storage="_датаПроведенияСовещанияВПМО", FieldType="Text")]
		public string ДатаПроведенияСовещанияВПМО {
			get {
				return this._датаПроведенияСовещанияВПМО;
			}
			set {
				if ((value != this._датаПроведенияСовещанияВПМО)) {
					this.OnPropertyChanging("ДатаПроведенияСовещанияВПМО", this._датаПроведенияСовещанияВПМО);
					this._датаПроведенияСовещанияВПМО = value;
					this.OnPropertyChanged("ДатаПроведенияСовещанияВПМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x002", Storage="_датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО", FieldType="Text")]
		public string ДатаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО {
			get {
				return this._датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО;
			}
			set {
				if ((value != this._датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО)) {
					this.OnPropertyChanging("ДатаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО", this._датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО);
					this._датаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО = value;
					this.OnPropertyChanged("ДатаПисьмаПоРезультатамСогласованияЦИОГВРеквизитыППМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x003", Storage="_датаРассмотренияНаМВК", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРассмотренияНаМВК {
			get {
				return this._датаРассмотренияНаМВК;
			}
			set {
				if ((value != this._датаРассмотренияНаМВК)) {
					this.OnPropertyChanging("ДатаРассмотренияНаМВК", this._датаРассмотренияНаМВК);
					this._датаРассмотренияНаМВК = value;
					this.OnPropertyChanged("ДатаРассмотренияНаМВК");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0440__x043e__x043a__x00", Storage="_срокНаправленияПроектаВПМО", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокНаправленияПроектаВПМО {
			get {
				return this._срокНаправленияПроектаВПМО;
			}
			set {
				if ((value != this._срокНаправленияПроектаВПМО)) {
					this.OnPropertyChanging("СрокНаправленияПроектаВПМО", this._срокНаправленияПроектаВПМО);
					this._срокНаправленияПроектаВПМО = value;
					this.OnPropertyChanged("СрокНаправленияПроектаВПМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x004", Storage="_датаРассмотренияНаГС", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРассмотренияНаГС {
			get {
				return this._датаРассмотренияНаГС;
			}
			set {
				if ((value != this._датаРассмотренияНаГС)) {
					this.OnPropertyChanging("ДатаРассмотренияНаГС", this._датаРассмотренияНаГС);
					this._датаРассмотренияНаГС = value;
					this.OnPropertyChanged("ДатаРассмотренияНаГС");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x005", Storage="_датаПроведенияСогласительнойКомиссииОМС", FieldType="Text")]
		public string ДатаПроведенияСогласительнойКомиссииОМС {
			get {
				return this._датаПроведенияСогласительнойКомиссииОМС;
			}
			set {
				if ((value != this._датаПроведенияСогласительнойКомиссииОМС)) {
					this.OnPropertyChanging("ДатаПроведенияСогласительнойКомиссииОМС", this._датаПроведенияСогласительнойКомиссииОМС);
					this._датаПроведенияСогласительнойКомиссииОМС = value;
					this.OnPropertyChanged("ДатаПроведенияСогласительнойКомиссииОМС");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041f__x043e__x0020__x0440__x04", Storage="_поРезультатамСогласованияПМО", FieldType="Text")]
		public string ПоРезультатамСогласованияПМО {
			get {
				return this._поРезультатамСогласованияПМО;
			}
			set {
				if ((value != this._поРезультатамСогласованияПМО)) {
					this.OnPropertyChanging("ПоРезультатамСогласованияПМО", this._поРезультатамСогласованияПМО);
					this._поРезультатамСогласованияПМО = value;
					this.OnPropertyChanged("ПоРезультатамСогласованияПМО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041f__x0440__x0438__x043c__x04", Storage="_примечание", FieldType="Text")]
		public string Примечание {
			get {
				return this._примечание;
			}
			set {
				if ((value != this._примечание)) {
					this.OnPropertyChanging("Примечание", this._примечание);
					this._примечание = value;
					this.OnPropertyChanged("Примечание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x043e__x043a__x0443__x04", Storage="_документация", FieldType="Url")]
		public string Документация {
			get {
				return this._документация;
			}
			set {
				if ((value != this._документация)) {
					this.OnPropertyChanging("Документация", this._документация);
					this._документация = value;
					this.OnPropertyChanged("Документация");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0441__x044b__x043b__x04", Storage="_материалы", FieldType="Url")]
		public string Материалы {
			get {
				return this._материалы;
			}
			set {
				if ((value != this._материалы)) {
					this.OnPropertyChanging("Материалы", this._материалы);
					this._материалы = value;
					this.OnPropertyChanged("Материалы");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x0430__x0020__x043a__x04", Storage="_карта", FieldType="Url")]
		public string Карта {
			get {
				return this._карта;
			}
			set {
				if ((value != this._карта)) {
					this.OnPropertyChanging("Карта", this._карта);
					this._карта = value;
					this.OnPropertyChanged("Карта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0420__x0435__x0437__x0443__x04", Storage="_результатПубличныйСлушаний", FieldType="Choice")]
		public System.Nullable<РезультатПубличныйСлушаний> РезультатПубличныйСлушаний {
			get {
				return this._результатПубличныйСлушаний;
			}
			set {
				if ((value != this._результатПубличныйСлушаний)) {
					this.OnPropertyChanging("РезультатПубличныйСлушаний", this._результатПубличныйСлушаний);
					this._результатПубличныйСлушаний = value;
					this.OnPropertyChanged("РезультатПубличныйСлушаний");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0432__x0435__x0434__x04", Storage="_сведенияОбУтверждении", FieldType="Choice")]
		public System.Nullable<СведенияОбУтверждении> СведенияОбУтверждении {
			get {
				return this._сведенияОбУтверждении;
			}
			set {
				if ((value != this._сведенияОбУтверждении)) {
					this.OnPropertyChanging("СведенияОбУтверждении", this._сведенияОбУтверждении);
					this._сведенияОбУтверждении = value;
					this.OnPropertyChanged("СведенияОбУтверждении");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0413__x043e__x0440__x043e__x04", Storage="_городскойОкруг", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент ГородскойОкруг {
			get {
				return this._городскойОкруг.GetEntity();
			}
			set {
				this._городскойОкруг.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		private void OnГородскойОкругChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГородскойОкруг", this._городскойОкруг.Clone());
		}
		
		private void OnГородскойОкругChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГородскойОкруг");
		}
		
		private void OnГородскойОкругSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГенпланыЭлемент.Add(this);
			}
			else {
				e.Item.ГенпланыЭлемент.Remove(this);
			}
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГенпланыЭлемент.Add(this);
			}
			else {
				e.Item.ГенпланыЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Градостроительные показатели")]
	public partial class ГрадостроительныеПоказателиЭлемент : Элемент {
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _единицаИзмерения;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ГрадостроительныеПоказателиЭлемент() {
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this._единицаИзмерения = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._единицаИзмерения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnЕдиницаИзмеренияSync);
			this._единицаИзмерения.OnChanged += new System.EventHandler(this.OnЕдиницаИзмеренияChanged);
			this._единицаИзмерения.OnChanging += new System.EventHandler(this.OnЕдиницаИзмеренияChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы показателей")]
		public Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="NewColumn1", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0415__x0434__x0438__x043d__x04", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГрадостроительныеПоказателиЭлемент.Add(this);
			}
			else {
				e.Item.ГрадостроительныеПоказателиЭлемент.Remove(this);
			}
		}
		
		private void OnЕдиницаИзмеренияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЕдиницаИзмерения", this._единицаИзмерения.Clone());
		}
		
		private void OnЕдиницаИзмеренияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЕдиницаИзмерения");
		}
		
		private void OnЕдиницаИзмеренияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Документ ТП")]
	public partial class ДокументТПЭлемент : Элемент {
		
		private string _документыАИССОГИ;
		
		private System.Nullable<System.DateTime> _датаПубликацииВоФГИСТП;
		
		private System.Nullable<System.DateTime> _датаПоступленияВПМО;
		
		private System.Nullable<System.DateTime> _датаПроведенияСовещанияВПМО;
		
		private System.Nullable<System.DateTime> _датаСогласованияЦИОГВ;
		
		private System.Nullable<System.DateTime> _датаРассмотренияНаМВК;
		
		private System.Nullable<System.DateTime> _срокНаправленияВПМО;
		
		private System.Nullable<System.DateTime> _датаРассмотренияНаГС;
		
		private System.Nullable<System.DateTime> _датаСогласительногоСовещания;
		
		private System.Nullable<int> _самртНазваниеДокументовТП;
		
		private System.Nullable<int> _согласованиеДокументовТП;
		
		private System.Nullable<СостояниеРассмотрения0> _состояниеРассмотрения;
		
		private System.Nullable<УровеньСогласования> _уровеньСогласования;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _уполномоченыйОрган;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент> _проектнаяОрганизация;
		
		private Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент> _согласительноеСовещаниеЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ДокументТПЭлемент() {
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._уполномоченыйОрган = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._уполномоченыйОрган.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnУполномоченыйОрганSync);
			this._уполномоченыйОрган.OnChanged += new System.EventHandler(this.OnУполномоченыйОрганChanged);
			this._уполномоченыйОрган.OnChanging += new System.EventHandler(this.OnУполномоченыйОрганChanging);
			this._проектнаяОрганизация = new Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент>();
			this._проектнаяОрганизация.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент>>(this.OnПроектнаяОрганизацияSync);
			this._проектнаяОрганизация.OnChanged += new System.EventHandler(this.OnПроектнаяОрганизацияChanged);
			this._проектнаяОрганизация.OnChanging += new System.EventHandler(this.OnПроектнаяОрганизацияChanging);
			this._согласительноеСовещаниеЭлемент = new Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент>();
			this._согласительноеСовещаниеЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СогласительноеСовещаниеЭлемент>>(this.OnСогласительноеСовещаниеЭлементSync);
			this._согласительноеСовещаниеЭлемент.OnChanged += new System.EventHandler(this.OnСогласительноеСовещаниеЭлементChanged);
			this._согласительноеСовещаниеЭлемент.OnChanging += new System.EventHandler(this.OnСогласительноеСовещаниеЭлементChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// http://213.85.255.58/sg/sogi.main.index_
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="documents", Storage="_документыАИССОГИ", FieldType="Url")]
		public string ДокументыАИССОГИ {
			get {
				return this._документыАИССОГИ;
			}
			set {
				if ((value != this._документыАИССОГИ)) {
					this.OnPropertyChanging("ДокументыАИССОГИ", this._документыАИССОГИ);
					this._документыАИССОГИ = value;
					this.OnPropertyChanged("ДокументыАИССОГИ");
				}
			}
		}
		
		/// <summary>
		/// Дата публикации во ФГИС ТП
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateFGIS", Storage="_датаПубликацииВоФГИСТП", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПубликацииВоФГИСТП {
			get {
				return this._датаПубликацииВоФГИСТП;
			}
			set {
				if ((value != this._датаПубликацииВоФГИСТП)) {
					this.OnPropertyChanging("ДатаПубликацииВоФГИСТП", this._датаПубликацииВоФГИСТП);
					this._датаПубликацииВоФГИСТП = value;
					this.OnPropertyChanged("ДатаПубликацииВоФГИСТП");
				}
			}
		}
		
		/// <summary>
		/// Дата поступления в ПМО
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="datePMO", Storage="_датаПоступленияВПМО", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПоступленияВПМО {
			get {
				return this._датаПоступленияВПМО;
			}
			set {
				if ((value != this._датаПоступленияВПМО)) {
					this.OnPropertyChanging("ДатаПоступленияВПМО", this._датаПоступленияВПМО);
					this._датаПоступленияВПМО = value;
					this.OnPropertyChanged("ДатаПоступленияВПМО");
				}
			}
		}
		
		/// <summary>
		/// Дата проведения совещания в ПМО
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="datemeetingPMO", Storage="_датаПроведенияСовещанияВПМО", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПроведенияСовещанияВПМО {
			get {
				return this._датаПроведенияСовещанияВПМО;
			}
			set {
				if ((value != this._датаПроведенияСовещанияВПМО)) {
					this.OnPropertyChanging("ДатаПроведенияСовещанияВПМО", this._датаПроведенияСовещанияВПМО);
					this._датаПроведенияСовещанияВПМО = value;
					this.OnPropertyChanged("ДатаПроведенияСовещанияВПМО");
				}
			}
		}
		
		/// <summary>
		/// Дата письма по результатам согласования ЦИОГВ
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateCIOGV", Storage="_датаСогласованияЦИОГВ", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСогласованияЦИОГВ {
			get {
				return this._датаСогласованияЦИОГВ;
			}
			set {
				if ((value != this._датаСогласованияЦИОГВ)) {
					this.OnPropertyChanging("ДатаСогласованияЦИОГВ", this._датаСогласованияЦИОГВ);
					this._датаСогласованияЦИОГВ = value;
					this.OnPropertyChanged("ДатаСогласованияЦИОГВ");
				}
			}
		}
		
		/// <summary>
		/// Дата рассмотрения на МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateMVK", Storage="_датаРассмотренияНаМВК", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРассмотренияНаМВК {
			get {
				return this._датаРассмотренияНаМВК;
			}
			set {
				if ((value != this._датаРассмотренияНаМВК)) {
					this.OnPropertyChanging("ДатаРассмотренияНаМВК", this._датаРассмотренияНаМВК);
					this._датаРассмотренияНаМВК = value;
					this.OnPropertyChanged("ДатаРассмотренияНаМВК");
				}
			}
		}
		
		/// <summary>
		/// Срок направления в ПМО
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="timePMO", Storage="_срокНаправленияВПМО", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокНаправленияВПМО {
			get {
				return this._срокНаправленияВПМО;
			}
			set {
				if ((value != this._срокНаправленияВПМО)) {
					this.OnPropertyChanging("СрокНаправленияВПМО", this._срокНаправленияВПМО);
					this._срокНаправленияВПМО = value;
					this.OnPropertyChanged("СрокНаправленияВПМО");
				}
			}
		}
		
		/// <summary>
		/// Дата рассмотрения на ГС
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateGS", Storage="_датаРассмотренияНаГС", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРассмотренияНаГС {
			get {
				return this._датаРассмотренияНаГС;
			}
			set {
				if ((value != this._датаРассмотренияНаГС)) {
					this.OnPropertyChanging("ДатаРассмотренияНаГС", this._датаРассмотренияНаГС);
					this._датаРассмотренияНаГС = value;
					this.OnPropertyChanged("ДатаРассмотренияНаГС");
				}
			}
		}
		
		/// <summary>
		/// Дата проведения согласительной комиссии ОМС
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateSS", Storage="_датаСогласительногоСовещания", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСогласительногоСовещания {
			get {
				return this._датаСогласительногоСовещания;
			}
			set {
				if ((value != this._датаСогласительногоСовещания)) {
					this.OnPropertyChanging("ДатаСогласительногоСовещания", this._датаСогласительногоСовещания);
					this._датаСогласительногоСовещания = value;
					this.OnPropertyChanged("ДатаСогласительногоСовещания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0430__x043c__x0440__x04", Storage="_самртНазваниеДокументовТП", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> СамртНазваниеДокументовТП {
			get {
				return this._самртНазваниеДокументовТП;
			}
			set {
				if ((value != this._самртНазваниеДокументовТП)) {
					this.OnPropertyChanging("СамртНазваниеДокументовТП", this._самртНазваниеДокументовТП);
					this._самртНазваниеДокументовТП = value;
					this.OnPropertyChanged("СамртНазваниеДокументовТП");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x043e__x0433__x043b__x04", Storage="_согласованиеДокументовТП", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> СогласованиеДокументовТП {
			get {
				return this._согласованиеДокументовТП;
			}
			set {
				if ((value != this._согласованиеДокументовТП)) {
					this.OnPropertyChanging("СогласованиеДокументовТП", this._согласованиеДокументовТП);
					this._согласованиеДокументовТП = value;
					this.OnPropertyChanged("СогласованиеДокументовТП");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="status", Storage="_состояниеРассмотрения", FieldType="Choice")]
		public System.Nullable<СостояниеРассмотрения0> СостояниеРассмотрения {
			get {
				return this._состояниеРассмотрения;
			}
			set {
				if ((value != this._состояниеРассмотрения)) {
					this.OnPropertyChanging("СостояниеРассмотрения", this._состояниеРассмотрения);
					this._состояниеРассмотрения = value;
					this.OnPropertyChanged("СостояниеРассмотрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="level_conclusion", Storage="_уровеньСогласования", FieldType="Choice")]
		public System.Nullable<УровеньСогласования> УровеньСогласования {
			get {
				return this._уровеньСогласования;
			}
			set {
				if ((value != this._уровеньСогласования)) {
					this.OnPropertyChanging("УровеньСогласования", this._уровеньСогласования);
					this._уровеньСогласования = value;
					this.OnPropertyChanged("УровеньСогласования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="type_doc", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов")]
		public Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="district", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="location", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="organization", Storage="_уполномоченыйОрган", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация УполномоченыйОрган {
			get {
				return this._уполномоченыйОрган.GetEntity();
			}
			set {
				this._уполномоченыйОрган.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_проектнаяОрганизация", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Проектная организация")]
		public ПроектнаяОрганизацияЭлемент ПроектнаяОрганизация {
			get {
				return this._проектнаяОрганизация.GetEntity();
			}
			set {
				this._проектнаяОрганизация.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="docTP", Storage="_согласительноеСовещаниеЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Согласительное совещание")]
		public Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент> СогласительноеСовещаниеЭлемент {
			get {
				return this._согласительноеСовещаниеЭлемент;
			}
			set {
				this._согласительноеСовещаниеЭлемент.Assign(value);
			}
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументТПЭлемент.Add(this);
			}
			else {
				e.Item.ДокументТПЭлемент.Remove(this);
			}
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументТПЭлемент.Add(this);
			}
			else {
				e.Item.ДокументТПЭлемент.Remove(this);
			}
		}
		
		private void OnУполномоченыйОрганChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("УполномоченыйОрган", this._уполномоченыйОрган.Clone());
		}
		
		private void OnУполномоченыйОрганChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("УполномоченыйОрган");
		}
		
		private void OnУполномоченыйОрганSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументТПЭлемент.Add(this);
			}
			else {
				e.Item.ДокументТПЭлемент.Remove(this);
			}
		}
		
		private void OnПроектнаяОрганизацияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ПроектнаяОрганизация", this._проектнаяОрганизация.Clone());
		}
		
		private void OnПроектнаяОрганизацияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ПроектнаяОрганизация");
		}
		
		private void OnПроектнаяОрганизацияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументТПЭлемент.Add(this);
			}
			else {
				e.Item.ДокументТПЭлемент.Remove(this);
			}
		}
		
		private void OnСогласительноеСовещаниеЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СогласительноеСовещаниеЭлемент", this._согласительноеСовещаниеЭлемент.Clone());
		}
		
		private void OnСогласительноеСовещаниеЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СогласительноеСовещаниеЭлемент");
		}
		
		private void OnСогласительноеСовещаниеЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СогласительноеСовещаниеЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументТП = this;
			}
			else {
				e.Item.ДокументТП = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Документы объекта")]
	public partial class ДокументыОбъектаЭлемент : Элемент {
		
		private System.Nullable<System.DateTime> _датаВыдачи;
		
		private System.Nullable<System.DateTime> _датаНачалаДействия;
		
		private System.Nullable<System.DateTime> _срокДействия;
		
		private string _ссылкаНаДокумент;
		
		private string _примечание;
		
		private string _номерДокумента;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _ссылкаНаОбъект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ДокументыОбъектаЭлемент() {
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this._ссылкаНаОбъект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._ссылкаНаОбъект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnСсылкаНаОбъектSync);
			this._ссылкаНаОбъект.OnChanged += new System.EventHandler(this.OnСсылкаНаОбъектChanged);
			this._ссылкаНаОбъект.OnChanging += new System.EventHandler(this.OnСсылкаНаОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="datadelivery", Storage="_датаВыдачи", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВыдачи {
			get {
				return this._датаВыдачи;
			}
			set {
				if ((value != this._датаВыдачи)) {
					this.OnPropertyChanging("ДатаВыдачи", this._датаВыдачи);
					this._датаВыдачи = value;
					this.OnPropertyChanged("ДатаВыдачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="databegin", Storage="_датаНачалаДействия", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаНачалаДействия {
			get {
				return this._датаНачалаДействия;
			}
			set {
				if ((value != this._датаНачалаДействия)) {
					this.OnPropertyChanging("ДатаНачалаДействия", this._датаНачалаДействия);
					this._датаНачалаДействия = value;
					this.OnPropertyChanged("ДатаНачалаДействия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dataend", Storage="_срокДействия", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокДействия {
			get {
				return this._срокДействия;
			}
			set {
				if ((value != this._срокДействия)) {
					this.OnPropertyChanging("СрокДействия", this._срокДействия);
					this._срокДействия = value;
					this.OnPropertyChanged("СрокДействия");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="url", Storage="_ссылкаНаДокумент", FieldType="Url")]
		public string СсылкаНаДокумент {
			get {
				return this._ссылкаНаДокумент;
			}
			set {
				if ((value != this._ссылкаНаДокумент)) {
					this.OnPropertyChanging("СсылкаНаДокумент", this._ссылкаНаДокумент);
					this._ссылкаНаДокумент = value;
					this.OnPropertyChanged("СсылкаНаДокумент");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="note", Storage="_примечание", FieldType="Note")]
		public string Примечание {
			get {
				return this._примечание;
			}
			set {
				if ((value != this._примечание)) {
					this.OnPropertyChanging("Примечание", this._примечание);
					this._примечание = value;
					this.OnPropertyChanged("Примечание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="numberdoc", Storage="_номерДокумента", FieldType="Text")]
		public string НомерДокумента {
			get {
				return this._номерДокумента;
			}
			set {
				if ((value != this._номерДокумента)) {
					this.OnPropertyChanging("НомерДокумента", this._номерДокумента);
					this._номерДокумента = value;
					this.OnPropertyChanged("НомерДокумента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="documentkind", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов")]
		public Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ObjectLink", Storage="_ссылкаНаОбъект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент СсылкаНаОбъект {
			get {
				return this._ссылкаНаОбъект.GetEntity();
			}
			set {
				this._ссылкаНаОбъект.SetEntity(value);
			}
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnСсылкаНаОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаОбъект", this._ссылкаНаОбъект.Clone());
		}
		
		private void OnСсылкаНаОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаОбъект");
		}
		
		private void OnСсылкаНаОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДокументыОбъектаЭлемент.Add(this);
			}
			else {
				e.Item.ДокументыОбъектаЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Задачи согласования")]
	public partial class ЗадачиСогласованияЭлемент : Элемент {
		
		private System.Nullable<System.DateTime> _датаВынесенияЗаключения;
		
		private string _составЗамечаний;
		
		private string _реквизитыОфицОтвета;
		
		private System.Nullable<РезультатСогласования> _результатСогласования;
		
		private Microsoft.SharePoint.Linq.EntitySet<ЗаключенияЭлемент> _заключенияЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗадачиСогласованияЭлемент() {
			this._заключенияЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ЗаключенияЭлемент>();
			this._заключенияЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗаключенияЭлемент>>(this.OnЗаключенияЭлементSync);
			this._заключенияЭлемент.OnChanged += new System.EventHandler(this.OnЗаключенияЭлементChanged);
			this._заключенияЭлемент.OnChanging += new System.EventHandler(this.OnЗаключенияЭлементChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="dateconclusion", Storage="_датаВынесенияЗаключения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВынесенияЗаключения {
			get {
				return this._датаВынесенияЗаключения;
			}
			set {
				if ((value != this._датаВынесенияЗаключения)) {
					this.OnPropertyChanging("ДатаВынесенияЗаключения", this._датаВынесенияЗаключения);
					this._датаВынесенияЗаключения = value;
					this.OnPropertyChanged("ДатаВынесенияЗаключения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="notes", Storage="_составЗамечаний", FieldType="Note")]
		public string СоставЗамечаний {
			get {
				return this._составЗамечаний;
			}
			set {
				if ((value != this._составЗамечаний)) {
					this.OnPropertyChanging("СоставЗамечаний", this._составЗамечаний);
					this._составЗамечаний = value;
					this.OnPropertyChanged("СоставЗамечаний");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="details", Storage="_реквизитыОфицОтвета", FieldType="Text")]
		public string РеквизитыОфицОтвета {
			get {
				return this._реквизитыОфицОтвета;
			}
			set {
				if ((value != this._реквизитыОфицОтвета)) {
					this.OnPropertyChanging("РеквизитыОфицОтвета", this._реквизитыОфицОтвета);
					this._реквизитыОфицОтвета = value;
					this.OnPropertyChanged("РеквизитыОфицОтвета");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Элемент.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="result", Storage="_результатСогласования", FieldType="Choice")]
		public System.Nullable<РезультатСогласования> РезультатСогласования {
			get {
				return this._результатСогласования;
			}
			set {
				if ((value != this._результатСогласования)) {
					this.OnPropertyChanging("РезультатСогласования", this._результатСогласования);
					this._результатСогласования = value;
					this.OnPropertyChanged("РезультатСогласования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="tasks", Storage="_заключенияЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Заключения")]
		public Microsoft.SharePoint.Linq.EntitySet<ЗаключенияЭлемент> ЗаключенияЭлемент {
			get {
				return this._заключенияЭлемент;
			}
			set {
				this._заключенияЭлемент.Assign(value);
			}
		}
		
		private void OnЗаключенияЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЗаключенияЭлемент", this._заключенияЭлемент.Clone());
		}
		
		private void OnЗаключенияЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЗаключенияЭлемент");
		}
		
		private void OnЗаключенияЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗаключенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ЗадачаПоСогласованию = this;
			}
			else {
				e.Item.ЗадачаПоСогласованию = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Заключения")]
	public partial class ЗаключенияЭлемент : Элемент {
		
		private System.Nullable<System.DateTime> _датаВынесенияЗаключения;
		
		private string _составЗамечаний;
		
		private string _реквизитыОфицОтвета;
		
		private System.Nullable<РезультатСогласования0> _результатСогласования;
		
		private Microsoft.SharePoint.Linq.EntityRef<ЗадачиСогласованияЭлемент> _задачаПоСогласованию;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗаключенияЭлемент() {
			this._задачаПоСогласованию = new Microsoft.SharePoint.Linq.EntityRef<ЗадачиСогласованияЭлемент>();
			this._задачаПоСогласованию.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗадачиСогласованияЭлемент>>(this.OnЗадачаПоСогласованиюSync);
			this._задачаПоСогласованию.OnChanged += new System.EventHandler(this.OnЗадачаПоСогласованиюChanged);
			this._задачаПоСогласованию.OnChanging += new System.EventHandler(this.OnЗадачаПоСогласованиюChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="finaldate", Storage="_датаВынесенияЗаключения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаВынесенияЗаключения {
			get {
				return this._датаВынесенияЗаключения;
			}
			set {
				if ((value != this._датаВынесенияЗаключения)) {
					this.OnPropertyChanging("ДатаВынесенияЗаключения", this._датаВынесенияЗаключения);
					this._датаВынесенияЗаключения = value;
					this.OnPropertyChanged("ДатаВынесенияЗаключения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="notes", Storage="_составЗамечаний", FieldType="Note")]
		public string СоставЗамечаний {
			get {
				return this._составЗамечаний;
			}
			set {
				if ((value != this._составЗамечаний)) {
					this.OnPropertyChanging("СоставЗамечаний", this._составЗамечаний);
					this._составЗамечаний = value;
					this.OnPropertyChanged("СоставЗамечаний");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="details", Storage="_реквизитыОфицОтвета", FieldType="Text")]
		public string РеквизитыОфицОтвета {
			get {
				return this._реквизитыОфицОтвета;
			}
			set {
				if ((value != this._реквизитыОфицОтвета)) {
					this.OnPropertyChanging("РеквизитыОфицОтвета", this._реквизитыОфицОтвета);
					this._реквизитыОфицОтвета = value;
					this.OnPropertyChanged("РеквизитыОфицОтвета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="result", Storage="_результатСогласования", FieldType="Choice")]
		public System.Nullable<РезультатСогласования0> РезультатСогласования {
			get {
				return this._результатСогласования;
			}
			set {
				if ((value != this._результатСогласования)) {
					this.OnPropertyChanging("РезультатСогласования", this._результатСогласования);
					this._результатСогласования = value;
					this.OnPropertyChanged("РезультатСогласования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="tasks", Storage="_задачаПоСогласованию", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Задачи согласования")]
		public ЗадачиСогласованияЭлемент ЗадачаПоСогласованию {
			get {
				return this._задачаПоСогласованию.GetEntity();
			}
			set {
				this._задачаПоСогласованию.SetEntity(value);
			}
		}
		
		private void OnЗадачаПоСогласованиюChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЗадачаПоСогласованию", this._задачаПоСогласованию.Clone());
		}
		
		private void OnЗадачаПоСогласованиюChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЗадачаПоСогласованию");
		}
		
		private void OnЗадачаПоСогласованиюSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗадачиСогласованияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ЗаключенияЭлемент.Add(this);
			}
			else {
				e.Item.ЗаключенияЭлемент.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="HTML для повторного использования", Id="0x01002CF74A4DAE39480396EEA7A4BA2BE5FB")]
	public partial class HTMLДляПовторногоИспользования : Элемент {
		
		private string _название0;
		
		private string _заметки;
		
		private System.Nullable<bool> _автоматическоеОбновление;
		
		private System.Nullable<bool> _показыватьВРаскрывающемсяМеню;
		
		private System.Nullable<КатегорияКонтента> _категорияКонтента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public HTMLДляПовторногоИспользования() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_название0", ReadOnly=true, Required=true, FieldType="Computed")]
		public string Название0 {
			get {
				return this._название0;
			}
			set {
				if ((value != this._название0)) {
					this.OnPropertyChanging("Название0", this._название0);
					this._название0 = value;
					this.OnPropertyChanged("Название0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, контент данного элемента списка будет вставляться на веб-страницы как ссылка только для чтения. Новые версии данного элемента будут отображаться на веб-страницах автоматически. Если параметр не выбран, контент данного элемента списка будет вставляться на веб-страницы как копия, доступная авторам страниц для изменения. Новые версии данного элемента не будут автоматически отображаться на веб-страницах. Любые изменения этого параметра не будут влиять на существующие веб-страницы, использующие данный элемент.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutomaticUpdate", Storage="_автоматическоеОбновление", FieldType="Boolean")]
		public System.Nullable<bool> АвтоматическоеОбновление {
			get {
				return this._автоматическоеОбновление;
			}
			set {
				if ((value != this._автоматическоеОбновление)) {
					this.OnPropertyChanging("АвтоматическоеОбновление", this._автоматическоеОбновление);
					this._автоматическоеОбновление = value;
					this.OnPropertyChanged("АвтоматическоеОбновление");
				}
			}
		}
		
		/// <summary>
		/// Выберите данный параметр, если необходимо вывести этот повторно используемый элемент контента в раскрывающемся меню, доступном при редактировании страницы. Это позволяет быстро добавлять элементы на странице.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInRibbon", Storage="_показыватьВРаскрывающемсяМеню", FieldType="Boolean")]
		public System.Nullable<bool> ПоказыватьВРаскрывающемсяМеню {
			get {
				return this._показыватьВРаскрывающемсяМеню;
			}
			set {
				if ((value != this._показыватьВРаскрывающемсяМеню)) {
					this.OnPropertyChanging("ПоказыватьВРаскрывающемсяМеню", this._показыватьВРаскрывающемсяМеню);
					this._показыватьВРаскрывающемсяМеню = value;
					this.OnPropertyChanged("ПоказыватьВРаскрывающемсяМеню");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentCategory", Storage="_категорияКонтента", FieldType="Choice")]
		public System.Nullable<КатегорияКонтента> КатегорияКонтента {
			get {
				return this._категорияКонтента;
			}
			set {
				if ((value != this._категорияКонтента)) {
					this.OnPropertyChanging("КатегорияКонтента", this._категорияКонтента);
					this._категорияКонтента = value;
					this.OnPropertyChanged("КатегорияКонтента");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Текст для повторного использования", Id="0x01004D5A79BAFA4A4576B79C56FF3D0D662D")]
	public partial class ТекстДляПовторногоИспользования : Элемент {
		
		private string _название0;
		
		private string _заметки;
		
		private System.Nullable<bool> _автоматическоеОбновление;
		
		private System.Nullable<bool> _показыватьВРаскрывающемсяМеню;
		
		private string _текстДляПовторногоИспользования0;
		
		private System.Nullable<КатегорияКонтента> _категорияКонтента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ТекстДляПовторногоИспользования() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_название0", ReadOnly=true, FieldType="Computed")]
		public string Название0 {
			get {
				return this._название0;
			}
			set {
				if ((value != this._название0)) {
					this.OnPropertyChanging("Название0", this._название0);
					this._название0 = value;
					this.OnPropertyChanged("Название0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		/// <summary>
		/// Если этот параметр выбран, контент данного элемента списка будет вставляться на веб-страницы как ссылка только для чтения. Новые версии данного элемента будут отображаться на веб-страницах автоматически. Если параметр не выбран, контент данного элемента списка будет вставляться на веб-страницы как копия, доступная авторам страниц для изменения. Новые версии данного элемента не будут автоматически отображаться на веб-страницах. Любые изменения этого параметра не будут влиять на существующие веб-страницы, использующие данный элемент.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutomaticUpdate", Storage="_автоматическоеОбновление", FieldType="Boolean")]
		public System.Nullable<bool> АвтоматическоеОбновление {
			get {
				return this._автоматическоеОбновление;
			}
			set {
				if ((value != this._автоматическоеОбновление)) {
					this.OnPropertyChanging("АвтоматическоеОбновление", this._автоматическоеОбновление);
					this._автоматическоеОбновление = value;
					this.OnPropertyChanged("АвтоматическоеОбновление");
				}
			}
		}
		
		/// <summary>
		/// Выберите данный параметр, если необходимо вывести этот повторно используемый элемент контента в раскрывающемся меню, доступном при редактировании страницы. Это позволяет быстро добавлять элементы на странице.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInRibbon", Storage="_показыватьВРаскрывающемсяМеню", FieldType="Boolean")]
		public System.Nullable<bool> ПоказыватьВРаскрывающемсяМеню {
			get {
				return this._показыватьВРаскрывающемсяМеню;
			}
			set {
				if ((value != this._показыватьВРаскрывающемсяМеню)) {
					this.OnPropertyChanging("ПоказыватьВРаскрывающемсяМеню", this._показыватьВРаскрывающемсяМеню);
					this._показыватьВРаскрывающемсяМеню = value;
					this.OnPropertyChanged("ПоказыватьВРаскрывающемсяМеню");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReusableText", Storage="_текстДляПовторногоИспользования0", FieldType="Note")]
		public string ТекстДляПовторногоИспользования0 {
			get {
				return this._текстДляПовторногоИспользования0;
			}
			set {
				if ((value != this._текстДляПовторногоИспользования0)) {
					this.OnPropertyChanging("ТекстДляПовторногоИспользования0", this._текстДляПовторногоИспользования0);
					this._текстДляПовторногоИспользования0 = value;
					this.OnPropertyChanged("ТекстДляПовторногоИспользования0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentCategory", Storage="_категорияКонтента", FieldType="Choice")]
		public System.Nullable<КатегорияКонтента> КатегорияКонтента {
			get {
				return this._категорияКонтента;
			}
			set {
				if ((value != this._категорияКонтента)) {
					this.OnPropertyChanging("КатегорияКонтента", this._категорияКонтента);
					this._категорияКонтента = value;
					this.OnPropertyChanged("КатегорияКонтента");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Муниципальные районы")]
	public partial class МуниципальныеРайоныЭлемент : Элемент {
		
		private string _наименование;
		
		private string _кодОКАТО;
		
		private System.Nullable<ТипРайона> _типРайона;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент> _генпланыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> _документТПЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> _рГЗаявкиЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public МуниципальныеРайоныЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._генпланыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент>();
			this._генпланыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенпланыЭлемент>>(this.OnГенпланыЭлементSync);
			this._генпланыЭлемент.OnChanged += new System.EventHandler(this.OnГенпланыЭлементChanged);
			this._генпланыЭлемент.OnChanging += new System.EventHandler(this.OnГенпланыЭлементChanging);
			this._документТПЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент>();
			this._документТПЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент>>(this.OnДокументТПЭлементSync);
			this._документТПЭлемент.OnChanged += new System.EventHandler(this.OnДокументТПЭлементChanged);
			this._документТПЭлемент.OnChanging += new System.EventHandler(this.OnДокументТПЭлементChanging);
			this._объектыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлементSync);
			this._объектыЭлемент.OnChanged += new System.EventHandler(this.OnОбъектыЭлементChanged);
			this._объектыЭлемент.OnChanging += new System.EventHandler(this.OnОбъектыЭлементChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._рГЗаявкиЭлемент = new Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент>();
			this._рГЗаявкиЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnРГЗаявкиЭлементSync);
			this._рГЗаявкиЭлемент.OnChanged += new System.EventHandler(this.OnРГЗаявкиЭлементChanged);
			this._рГЗаявкиЭлемент.OnChanging += new System.EventHandler(this.OnРГЗаявкиЭлементChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x0430__x0438__x043c__x04", Storage="_наименование", FieldType="Text")]
		public string Наименование {
			get {
				return this._наименование;
			}
			set {
				if ((value != this._наименование)) {
					this.OnPropertyChanging("Наименование", this._наименование);
					this._наименование = value;
					this.OnPropertyChanged("Наименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x0434__x0020__x04", Storage="_кодОКАТО", FieldType="Text")]
		public string КодОКАТО {
			get {
				return this._кодОКАТО;
			}
			set {
				if ((value != this._кодОКАТО)) {
					this.OnPropertyChanging("КодОКАТО", this._кодОКАТО);
					this._кодОКАТО = value;
					this.OnPropertyChanged("КодОКАТО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0422__x0438__x043f__x0020__x04", Storage="_типРайона", FieldType="Choice")]
		public System.Nullable<ТипРайона> ТипРайона {
			get {
				return this._типРайона;
			}
			set {
				if ((value != this._типРайона)) {
					this.OnPropertyChanging("ТипРайона", this._типРайона);
					this._типРайона = value;
					this.OnPropertyChanged("ТипРайона");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на муниципальный район вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMunicipalDistrictMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_генпланыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Генпланы")]
		public Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент> ГенпланыЭлемент {
			get {
				return this._генпланыЭлемент;
			}
			set {
				this._генпланыЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="district", Storage="_документТПЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Документ ТП")]
		public Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> ДокументТПЭлемент {
			get {
				return this._документТПЭлемент;
			}
			set {
				this._документТПЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rayon", Storage="_объектыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент {
			get {
				return this._объектыЭлемент;
			}
			set {
				this._объектыЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на муниципальный район вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMunicipalDistrictMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="municipality", Storage="_рГЗаявкиЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Заявки")]
		public Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> РГЗаявкиЭлемент {
			get {
				return this._рГЗаявкиЭлемент;
			}
			set {
				this._рГЗаявкиЭлемент.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnГенпланыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГенпланыЭлемент", this._генпланыЭлемент.Clone());
		}
		
		private void OnГенпланыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГенпланыЭлемент");
		}
		
		private void OnГенпланыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенпланыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnДокументТПЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументТПЭлемент", this._документТПЭлемент.Clone());
		}
		
		private void OnДокументТПЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументТПЭлемент");
		}
		
		private void OnДокументТПЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnОбъектыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент", this._объектыЭлемент.Clone());
		}
		
		private void OnОбъектыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент");
		}
		
		private void OnОбъектыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
		
		private void OnРГЗаявкиЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РГЗаявкиЭлемент", this._рГЗаявкиЭлемент.Clone());
		}
		
		private void OnРГЗаявкиЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РГЗаявкиЭлемент");
		}
		
		private void OnРГЗаявкиЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.МуниципальныйРайон = this;
			}
			else {
				e.Item.МуниципальныйРайон = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Обманутые дольщики")]
	public partial class ОбманутыеДольщикиЭлемент : Элемент {
		
		private System.Nullable<System.DateTime> _дата;
		
		private string _муниципальноеОбразование;
		
		private string _адресОбъекта;
		
		private string _застройщики;
		
		private string _комментарии;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ОбманутыеДольщикиЭлемент() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430_", Storage="_дата", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Дата {
			get {
				return this._дата;
			}
			set {
				if ((value != this._дата)) {
					this.OnPropertyChanging("Дата", this._дата);
					this._дата = value;
					this.OnPropertyChanged("Дата");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_муниципальноеОбразование", FieldType="Text")]
		public string МуниципальноеОбразование {
			get {
				return this._муниципальноеОбразование;
			}
			set {
				if ((value != this._муниципальноеОбразование)) {
					this.OnPropertyChanging("МуниципальноеОбразование", this._муниципальноеОбразование);
					this._муниципальноеОбразование = value;
					this.OnPropertyChanged("МуниципальноеОбразование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0410__x0434__x0440__x0435__x04", Storage="_адресОбъекта", FieldType="Text")]
		public string АдресОбъекта {
			get {
				return this._адресОбъекта;
			}
			set {
				if ((value != this._адресОбъекта)) {
					this.OnPropertyChanging("АдресОбъекта", this._адресОбъекта);
					this._адресОбъекта = value;
					this.OnPropertyChanged("АдресОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x0430__x0441__x0442__x04", Storage="_застройщики", FieldType="Text")]
		public string Застройщики {
			get {
				return this._застройщики;
			}
			set {
				if ((value != this._застройщики)) {
					this.OnPropertyChanging("Застройщики", this._застройщики);
					this._застройщики = value;
					this.OnPropertyChanged("Застройщики");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x043c__x043c__x04", Storage="_комментарии", FieldType="Note")]
		public string Комментарии {
			get {
				return this._комментарии;
			}
			set {
				if ((value != this._комментарии)) {
					this.OnPropertyChanging("Комментарии", this._комментарии);
					this._комментарии = value;
					this.OnPropertyChanged("Комментарии");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Объекты")]
	public partial class ОбъектыЭлемент : Элемент {
		
		private string _адрес;
		
		private System.Nullable<double> _общаяПлощадьЗУ;
		
		private string _кадастровыйНомерЗУ;
		
		private string _фирменноеНазваниеОбъекта;
		
		private System.Nullable<System.DateTime> _фактическаяДатаВвода;
		
		private System.Nullable<System.DateTime> _плановыйСрокВвода;
		
		private System.Nullable<System.DateTime> _плановыйСрокВводаПоРазрешению;
		
		private System.Nullable<System.DateTime> _датаНачалаСтроительства;
		
		private string _серияПроекта;
		
		private System.Nullable<int> _копированиеIDРодительскогоОбъекта;
		
		private System.Nullable<double> _iDОбъекта;
		
		private System.Nullable<int> _копированиеОбъектовПоСловуCopyВНазвании;
		
		private System.Nullable<int> _счетчикКоличестваОбъектов;
		
		private System.Nullable<bool> _флажокСтатистики;
		
		private System.Nullable<ТипОбъекта> _типОбъекта;
		
		private System.Nullable<ВидРазрИспользования> _видРазрИспользования;
		
		private System.Nullable<КатегорияЗУ> _категорияЗУ;
		
		private System.Nullable<ИсточникФинансирования> _источникФинансирования;
		
		private System.Nullable<ВидСтроительства> _видСтроительства;
		
		private System.Nullable<Статус0> _статус;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ДокументыОбъектаЭлемент> _документыОбъектаЭлемент;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _названиеОбъекта;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _застройщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _соинвестор1;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _соинвестор2;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _соинвестор3;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент0;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _родительскийОбъект;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK> _issueObjectMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<СутьВопросаЭлемент> _сутьВопросаЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ФотогалереяХодаСтроительстваОбъектаРисунок> _фотогалереяХодаСтроительстваОбъектаРисунок;
		
		private Microsoft.SharePoint.Linq.EntitySet<СутьВопросаАналитическийПоказатель> _сутьВопросаАналитическийПоказатель;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ОбъектыЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._документыОбъектаЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ДокументыОбъектаЭлемент>();
			this._документыОбъектаЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументыОбъектаЭлемент>>(this.OnДокументыОбъектаЭлементSync);
			this._документыОбъектаЭлемент.OnChanged += new System.EventHandler(this.OnДокументыОбъектаЭлементChanged);
			this._документыОбъектаЭлемент.OnChanging += new System.EventHandler(this.OnДокументыОбъектаЭлементChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._названиеОбъекта = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._названиеОбъекта.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnНазваниеОбъектаSync);
			this._названиеОбъекта.OnChanged += new System.EventHandler(this.OnНазваниеОбъектаChanged);
			this._названиеОбъекта.OnChanging += new System.EventHandler(this.OnНазваниеОбъектаChanging);
			this._застройщик = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._застройщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnЗастройщикSync);
			this._застройщик.OnChanged += new System.EventHandler(this.OnЗастройщикChanged);
			this._застройщик.OnChanging += new System.EventHandler(this.OnЗастройщикChanging);
			this._соинвестор1 = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._соинвестор1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnСоинвестор1Sync);
			this._соинвестор1.OnChanged += new System.EventHandler(this.OnСоинвестор1Changed);
			this._соинвестор1.OnChanging += new System.EventHandler(this.OnСоинвестор1Changing);
			this._соинвестор2 = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._соинвестор2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnСоинвестор2Sync);
			this._соинвестор2.OnChanged += new System.EventHandler(this.OnСоинвестор2Changed);
			this._соинвестор2.OnChanging += new System.EventHandler(this.OnСоинвестор2Changing);
			this._соинвестор3 = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._соинвестор3.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnСоинвестор3Sync);
			this._соинвестор3.OnChanged += new System.EventHandler(this.OnСоинвестор3Changed);
			this._соинвестор3.OnChanging += new System.EventHandler(this.OnСоинвестор3Changing);
			this._объектыЭлемент0 = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлемент0Sync);
			this._объектыЭлемент0.OnChanged += new System.EventHandler(this.OnОбъектыЭлемент0Changed);
			this._объектыЭлемент0.OnChanging += new System.EventHandler(this.OnОбъектыЭлемент0Changing);
			this._родительскийОбъект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._родительскийОбъект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnРодительскийОбъектSync);
			this._родительскийОбъект.OnChanged += new System.EventHandler(this.OnРодительскийОбъектChanged);
			this._родительскийОбъект.OnChanging += new System.EventHandler(this.OnРодительскийОбъектChanging);
			this._issueObjectMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK>();
			this._issueObjectMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueObjectMVK>>(this.OnIssueObjectMVKSync);
			this._issueObjectMVK.OnChanged += new System.EventHandler(this.OnIssueObjectMVKChanged);
			this._issueObjectMVK.OnChanging += new System.EventHandler(this.OnIssueObjectMVKChanging);
			this._сутьВопросаЭлемент = new Microsoft.SharePoint.Linq.EntitySet<СутьВопросаЭлемент>();
			this._сутьВопросаЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СутьВопросаЭлемент>>(this.OnСутьВопросаЭлементSync);
			this._сутьВопросаЭлемент.OnChanged += new System.EventHandler(this.OnСутьВопросаЭлементChanged);
			this._сутьВопросаЭлемент.OnChanging += new System.EventHandler(this.OnСутьВопросаЭлементChanging);
			this._фотогалереяХодаСтроительстваОбъектаРисунок = new Microsoft.SharePoint.Linq.EntitySet<ФотогалереяХодаСтроительстваОбъектаРисунок>();
			this._фотогалереяХодаСтроительстваОбъектаРисунок.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ФотогалереяХодаСтроительстваОбъектаРисунок>>(this.OnФотогалереяХодаСтроительстваОбъектаРисунокSync);
			this._фотогалереяХодаСтроительстваОбъектаРисунок.OnChanged += new System.EventHandler(this.OnФотогалереяХодаСтроительстваОбъектаРисунокChanged);
			this._фотогалереяХодаСтроительстваОбъектаРисунок.OnChanging += new System.EventHandler(this.OnФотогалереяХодаСтроительстваОбъектаРисунокChanging);
			this._сутьВопросаАналитическийПоказатель = new Microsoft.SharePoint.Linq.EntitySet<СутьВопросаАналитическийПоказатель>();
			this._сутьВопросаАналитическийПоказатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СутьВопросаАналитическийПоказатель>>(this.OnСутьВопросаАналитическийПоказательSync);
			this._сутьВопросаАналитическийПоказатель.OnChanged += new System.EventHandler(this.OnСутьВопросаАналитическийПоказательChanged);
			this._сутьВопросаАналитическийПоказатель.OnChanging += new System.EventHandler(this.OnСутьВопросаАналитическийПоказательChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Adress", Storage="_адрес", FieldType="Text")]
		public string Адрес {
			get {
				return this._адрес;
			}
			set {
				if ((value != this._адрес)) {
					this.OnPropertyChanging("Адрес", this._адрес);
					this._адрес = value;
					this.OnPropertyChanged("Адрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Area", Storage="_общаяПлощадьЗУ", FieldType="Number")]
		public System.Nullable<double> ОбщаяПлощадьЗУ {
			get {
				return this._общаяПлощадьЗУ;
			}
			set {
				if ((value != this._общаяПлощадьЗУ)) {
					this.OnPropertyChanging("ОбщаяПлощадьЗУ", this._общаяПлощадьЗУ);
					this._общаяПлощадьЗУ = value;
					this.OnPropertyChanged("ОбщаяПлощадьЗУ");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cadastralnumber", Storage="_кадастровыйНомерЗУ", FieldType="Text")]
		public string КадастровыйНомерЗУ {
			get {
				return this._кадастровыйНомерЗУ;
			}
			set {
				if ((value != this._кадастровыйНомерЗУ)) {
					this.OnPropertyChanging("КадастровыйНомерЗУ", this._кадастровыйНомерЗУ);
					this._кадастровыйНомерЗУ = value;
					this.OnPropertyChanged("КадастровыйНомерЗУ");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Firmname", Storage="_фирменноеНазваниеОбъекта", FieldType="Text")]
		public string ФирменноеНазваниеОбъекта {
			get {
				return this._фирменноеНазваниеОбъекта;
			}
			set {
				if ((value != this._фирменноеНазваниеОбъекта)) {
					this.OnPropertyChanging("ФирменноеНазваниеОбъекта", this._фирменноеНазваниеОбъекта);
					this._фирменноеНазваниеОбъекта = value;
					this.OnPropertyChanged("ФирменноеНазваниеОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="factdate", Storage="_фактическаяДатаВвода", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ФактическаяДатаВвода {
			get {
				return this._фактическаяДатаВвода;
			}
			set {
				if ((value != this._фактическаяДатаВвода)) {
					this.OnPropertyChanging("ФактическаяДатаВвода", this._фактическаяДатаВвода);
					this._фактическаяДатаВвода = value;
					this.OnPropertyChanged("ФактическаяДатаВвода");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="plan0", Storage="_плановыйСрокВвода", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ПлановыйСрокВвода {
			get {
				return this._плановыйСрокВвода;
			}
			set {
				if ((value != this._плановыйСрокВвода)) {
					this.OnPropertyChanging("ПлановыйСрокВвода", this._плановыйСрокВвода);
					this._плановыйСрокВвода = value;
					this.OnPropertyChanged("ПлановыйСрокВвода");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="plan", Storage="_плановыйСрокВводаПоРазрешению", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ПлановыйСрокВводаПоРазрешению {
			get {
				return this._плановыйСрокВводаПоРазрешению;
			}
			set {
				if ((value != this._плановыйСрокВводаПоРазрешению)) {
					this.OnPropertyChanging("ПлановыйСрокВводаПоРазрешению", this._плановыйСрокВводаПоРазрешению);
					this._плановыйСрокВводаПоРазрешению = value;
					this.OnPropertyChanged("ПлановыйСрокВводаПоРазрешению");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="data", Storage="_датаНачалаСтроительства", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаНачалаСтроительства {
			get {
				return this._датаНачалаСтроительства;
			}
			set {
				if ((value != this._датаНачалаСтроительства)) {
					this.OnPropertyChanging("ДатаНачалаСтроительства", this._датаНачалаСтроительства);
					this._датаНачалаСтроительства = value;
					this.OnPropertyChanged("ДатаНачалаСтроительства");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Ser", Storage="_серияПроекта", FieldType="Text")]
		public string СерияПроекта {
			get {
				return this._серияПроекта;
			}
			set {
				if ((value != this._серияПроекта)) {
					this.OnPropertyChanging("СерияПроекта", this._серияПроекта);
					this._серияПроекта = value;
					this.OnPropertyChanged("СерияПроекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x043f__x0438__x04", Storage="_копированиеIDРодительскогоОбъекта", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> КопированиеIDРодительскогоОбъекта {
			get {
				return this._копированиеIDРодительскогоОбъекта;
			}
			set {
				if ((value != this._копированиеIDРодительскогоОбъекта)) {
					this.OnPropertyChanging("КопированиеIDРодительскогоОбъекта", this._копированиеIDРодительскогоОбъекта);
					this._копированиеIDРодительскогоОбъекта = value;
					this.OnPropertyChanged("КопированиеIDРодительскогоОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID_x0020_object", Storage="_iDОбъекта", FieldType="Number")]
		public System.Nullable<double> IDОбъекта {
			get {
				return this._iDОбъекта;
			}
			set {
				if ((value != this._iDОбъекта)) {
					this.OnPropertyChanging("IDОбъекта", this._iDОбъекта);
					this._iDОбъекта = value;
					this.OnPropertyChanged("IDОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x043f__x0438__x041", Storage="_копированиеОбъектовПоСловуCopyВНазвании", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> КопированиеОбъектовПоСловуCopyВНазвании {
			get {
				return this._копированиеОбъектовПоСловуCopyВНазвании;
			}
			set {
				if ((value != this._копированиеОбъектовПоСловуCopyВНазвании)) {
					this.OnPropertyChanging("КопированиеОбъектовПоСловуCopyВНазвании", this._копированиеОбъектовПоСловуCopyВНазвании);
					this._копированиеОбъектовПоСловуCopyВНазвании = value;
					this.OnPropertyChanged("КопированиеОбъектовПоСловуCopyВНазвании");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0447__x0435__x0442__x04", Storage="_счетчикКоличестваОбъектов", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> СчетчикКоличестваОбъектов {
			get {
				return this._счетчикКоличестваОбъектов;
			}
			set {
				if ((value != this._счетчикКоличестваОбъектов)) {
					this.OnPropertyChanging("СчетчикКоличестваОбъектов", this._счетчикКоличестваОбъектов);
					this._счетчикКоличестваОбъектов = value;
					this.OnPropertyChanged("СчетчикКоличестваОбъектов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0424__x043b__x0430__x0436__x04", Storage="_флажокСтатистики", FieldType="Boolean")]
		public System.Nullable<bool> ФлажокСтатистики {
			get {
				return this._флажокСтатистики;
			}
			set {
				if ((value != this._флажокСтатистики)) {
					this.OnPropertyChanging("ФлажокСтатистики", this._флажокСтатистики);
					this._флажокСтатистики = value;
					this.OnPropertyChanged("ФлажокСтатистики");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TypeObject", Storage="_типОбъекта", FieldType="Choice")]
		public System.Nullable<ТипОбъекта> ТипОбъекта {
			get {
				return this._типОбъекта;
			}
			set {
				if ((value != this._типОбъекта)) {
					this.OnPropertyChanging("ТипОбъекта", this._типОбъекта);
					this._типОбъекта = value;
					this.OnPropertyChanged("ТипОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Fuse", Storage="_видРазрИспользования", FieldType="Choice")]
		public System.Nullable<ВидРазрИспользования> ВидРазрИспользования {
			get {
				return this._видРазрИспользования;
			}
			set {
				if ((value != this._видРазрИспользования)) {
					this.OnPropertyChanging("ВидРазрИспользования", this._видРазрИспользования);
					this._видРазрИспользования = value;
					this.OnPropertyChanged("ВидРазрИспользования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="typeland", Storage="_категорияЗУ", FieldType="Choice")]
		public System.Nullable<КатегорияЗУ> КатегорияЗУ {
			get {
				return this._категорияЗУ;
			}
			set {
				if ((value != this._категорияЗУ)) {
					this.OnPropertyChanging("КатегорияЗУ", this._категорияЗУ);
					this._категорияЗУ = value;
					this.OnPropertyChanged("КатегорияЗУ");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ISTO4nik", Storage="_источникФинансирования", FieldType="Choice")]
		public System.Nullable<ИсточникФинансирования> ИсточникФинансирования {
			get {
				return this._источникФинансирования;
			}
			set {
				if ((value != this._источникФинансирования)) {
					this.OnPropertyChanging("ИсточникФинансирования", this._источникФинансирования);
					this._источникФинансирования = value;
					this.OnPropertyChanged("ИсточникФинансирования");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VID", Storage="_видСтроительства", FieldType="Choice")]
		public System.Nullable<ВидСтроительства> ВидСтроительства {
			get {
				return this._видСтроительства;
			}
			set {
				if ((value != this._видСтроительства)) {
					this.OnPropertyChanging("ВидСтроительства", this._видСтроительства);
					this._видСтроительства = value;
					this.OnPropertyChanged("ВидСтроительства");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_статус", FieldType="Choice")]
		public System.Nullable<Статус0> Статус {
			get {
				return this._статус;
			}
			set {
				if ((value != this._статус)) {
					this.OnPropertyChanging("Статус", this._статус);
					this._статус = value;
					this.OnPropertyChanged("Статус");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectObjectMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ObjectLink", Storage="_документыОбъектаЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Документы объекта")]
		public Microsoft.SharePoint.Linq.EntitySet<ДокументыОбъектаЭлемент> ДокументыОбъектаЭлемент {
			get {
				return this._документыОбъектаЭлемент;
			}
			set {
				this._документыОбъектаЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rayon", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Poseleniye", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Name_object", Storage="_названиеОбъекта", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Тип объекта")]
		public Элемент НазваниеОбъекта {
			get {
				return this._названиеОбъекта.GetEntity();
			}
			set {
				this._названиеОбъекта.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Builder", Storage="_застройщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Застройщик {
			get {
				return this._застройщик.GetEntity();
			}
			set {
				this._застройщик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x04", Storage="_соинвестор1", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Соинвестор1 {
			get {
				return this._соинвестор1.GetEntity();
			}
			set {
				this._соинвестор1.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x040", Storage="_соинвестор2", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Соинвестор2 {
			get {
				return this._соинвестор2.GetEntity();
			}
			set {
				this._соинвестор2.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x041", Storage="_соинвестор3", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Соинвестор3 {
			get {
				return this._соинвестор3.GetEntity();
			}
			set {
				this._соинвестор3.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0420__x043e__x0434__x0438__x04", Storage="_объектыЭлемент0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент0 {
			get {
				return this._объектыЭлемент0;
			}
			set {
				this._объектыЭлемент0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0420__x043e__x0434__x0438__x04", Storage="_родительскийОбъект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент РодительскийОбъект {
			get {
				return this._родительскийОбъект.GetEntity();
			}
			set {
				this._родительскийОбъект.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectObjectMVK", Storage="_issueObjectMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK> IssueObjectMVK {
			get {
				return this._issueObjectMVK;
			}
			set {
				this._issueObjectMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rod_object", Storage="_сутьВопросаЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Суть вопроса")]
		public Microsoft.SharePoint.Linq.EntitySet<СутьВопросаЭлемент> СутьВопросаЭлемент {
			get {
				return this._сутьВопросаЭлемент;
			}
			set {
				this._сутьВопросаЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на объект строительства
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ObjectLink", Storage="_фотогалереяХодаСтроительстваОбъектаРисунок", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Фотогалерея хода строительства объекта")]
		public Microsoft.SharePoint.Linq.EntitySet<ФотогалереяХодаСтроительстваОбъектаРисунок> ФотогалереяХодаСтроительстваОбъектаРисунок {
			get {
				return this._фотогалереяХодаСтроительстваОбъектаРисунок;
			}
			set {
				this._фотогалереяХодаСтроительстваОбъектаРисунок.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rod_object", Storage="_сутьВопросаАналитическийПоказатель", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Суть вопроса")]
		public Microsoft.SharePoint.Linq.EntitySet<СутьВопросаАналитическийПоказатель> СутьВопросаАналитическийПоказатель {
			get {
				return this._сутьВопросаАналитическийПоказатель;
			}
			set {
				this._сутьВопросаАналитическийПоказатель.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Объект0 = this;
			}
			else {
				e.Item.Объект0 = null;
			}
		}
		
		private void OnДокументыОбъектаЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументыОбъектаЭлемент", this._документыОбъектаЭлемент.Clone());
		}
		
		private void OnДокументыОбъектаЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументыОбъектаЭлемент");
		}
		
		private void OnДокументыОбъектаЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументыОбъектаЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаОбъект = this;
			}
			else {
				e.Item.СсылкаНаОбъект = null;
			}
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент.Remove(this);
			}
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент.Remove(this);
			}
		}
		
		private void OnНазваниеОбъектаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("НазваниеОбъекта", this._названиеОбъекта.Clone());
		}
		
		private void OnНазваниеОбъектаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("НазваниеОбъекта");
		}
		
		private void OnНазваниеОбъектаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnЗастройщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Застройщик", this._застройщик.Clone());
		}
		
		private void OnЗастройщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Застройщик");
		}
		
		private void OnЗастройщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент.Remove(this);
			}
		}
		
		private void OnСоинвестор1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соинвестор1", this._соинвестор1.Clone());
		}
		
		private void OnСоинвестор1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соинвестор1");
		}
		
		private void OnСоинвестор1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент0.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент0.Remove(this);
			}
		}
		
		private void OnСоинвестор2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соинвестор2", this._соинвестор2.Clone());
		}
		
		private void OnСоинвестор2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соинвестор2");
		}
		
		private void OnСоинвестор2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент1.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент1.Remove(this);
			}
		}
		
		private void OnСоинвестор3Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соинвестор3", this._соинвестор3.Clone());
		}
		
		private void OnСоинвестор3Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соинвестор3");
		}
		
		private void OnСоинвестор3Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент2.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент2.Remove(this);
			}
		}
		
		private void OnОбъектыЭлемент0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент0", this._объектыЭлемент0.Clone());
		}
		
		private void OnОбъектыЭлемент0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент0");
		}
		
		private void OnОбъектыЭлемент0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РодительскийОбъект = this;
			}
			else {
				e.Item.РодительскийОбъект = null;
			}
		}
		
		private void OnРодительскийОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РодительскийОбъект", this._родительскийОбъект.Clone());
		}
		
		private void OnРодительскийОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РодительскийОбъект");
		}
		
		private void OnРодительскийОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОбъектыЭлемент0.Add(this);
			}
			else {
				e.Item.ОбъектыЭлемент0.Remove(this);
			}
		}
		
		private void OnIssueObjectMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueObjectMVK", this._issueObjectMVK.Clone());
		}
		
		private void OnIssueObjectMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueObjectMVK");
		}
		
		private void OnIssueObjectMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueObjectMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Объект = this;
			}
			else {
				e.Item.Объект = null;
			}
		}
		
		private void OnСутьВопросаЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СутьВопросаЭлемент", this._сутьВопросаЭлемент.Clone());
		}
		
		private void OnСутьВопросаЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СутьВопросаЭлемент");
		}
		
		private void OnСутьВопросаЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СутьВопросаЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РодительскийОбъект = this;
			}
			else {
				e.Item.РодительскийОбъект = null;
			}
		}
		
		private void OnФотогалереяХодаСтроительстваОбъектаРисунокChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ФотогалереяХодаСтроительстваОбъектаРисунок", this._фотогалереяХодаСтроительстваОбъектаРисунок.Clone());
		}
		
		private void OnФотогалереяХодаСтроительстваОбъектаРисунокChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ФотогалереяХодаСтроительстваОбъектаРисунок");
		}
		
		private void OnФотогалереяХодаСтроительстваОбъектаРисунокSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ФотогалереяХодаСтроительстваОбъектаРисунок> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаОбъект = this;
			}
			else {
				e.Item.СсылкаНаОбъект = null;
			}
		}
		
		private void OnСутьВопросаАналитическийПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СутьВопросаАналитическийПоказатель", this._сутьВопросаАналитическийПоказатель.Clone());
		}
		
		private void OnСутьВопросаАналитическийПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СутьВопросаАналитическийПоказатель");
		}
		
		private void OnСутьВопросаАналитическийПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СутьВопросаАналитическийПоказатель> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РодительскийОбъект = this;
			}
			else {
				e.Item.РодительскийОбъект = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Отчеты о контенте и структуре")]
	public partial class ОтчетыОКонтентеИСтруктуреЭлемент : Элемент {
		
		private string _идентификаторРесурса;
		
		private string _идентификаторРесурса0;
		
		private string _типСпискаCAML;
		
		private string _запросCAML;
		
		private string _описаниеОтчета;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ОтчетыОКонтентеИСтруктуреЭлемент() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x", Storage="_идентификаторРесурса", FieldType="Text")]
		public string ИдентификаторРесурса {
			get {
				return this._идентификаторРесурса;
			}
			set {
				if ((value != this._идентификаторРесурса)) {
					this.OnPropertyChanging("ИдентификаторРесурса", this._идентификаторРесурса);
					this._идентификаторРесурса = value;
					this.OnPropertyChanged("ИдентификаторРесурса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x0", Storage="_идентификаторРесурса0", FieldType="Text")]
		public string ИдентификаторРесурса0 {
			get {
				return this._идентификаторРесурса0;
			}
			set {
				if ((value != this._идентификаторРесурса0)) {
					this.OnPropertyChanging("ИдентификаторРесурса0", this._идентификаторРесурса0);
					this._идентификаторРесурса0 = value;
					this.OnPropertyChanged("ИдентификаторРесурса0");
				}
			}
		}
		
		/// <summary>
		/// Введите имя шаблона списка для типа списка CAML или оставьте поле пустым, чтобы найти шаблон в библиотеке документов
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x1", Storage="_типСпискаCAML", FieldType="Text")]
		public string ТипСпискаCAML {
			get {
				return this._типСпискаCAML;
			}
			set {
				if ((value != this._типСпискаCAML)) {
					this.OnPropertyChanging("ТипСпискаCAML", this._типСпискаCAML);
					this._типСпискаCAML = value;
					this.OnPropertyChanged("ТипСпискаCAML");
				}
			}
		}
		
		/// <summary>
		/// Введите разметку CAML для запроса отчета
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x2", Storage="_запросCAML", Required=true, FieldType="Text")]
		public string ЗапросCAML {
			get {
				return this._запросCAML;
			}
			set {
				if ((value != this._запросCAML)) {
					this.OnPropertyChanging("ЗапросCAML", this._запросCAML);
					this._запросCAML = value;
					this.OnPropertyChanged("ЗапросCAML");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x043f__x0438__x0441__x04", Storage="_описаниеОтчета", FieldType="Note")]
		public string ОписаниеОтчета {
			get {
				return this._описаниеОтчета;
			}
			set {
				if ((value != this._описаниеОтчета)) {
					this.OnPropertyChanging("ОписаниеОтчета", this._описаниеОтчета);
					this._описаниеОтчета = value;
					this.OnPropertyChanged("ОписаниеОтчета");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Аналитический показатель", Id="0x0100953A0FE8F958744D9480A5044290C318")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ПередаваемоеИмуществоАналитическийПоказатель))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СутьВопросаАналитическийПоказатель))]
	public partial class АналитическийПоказатель : Элемент {
		
		protected string _значение;
		
		protected Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопрос;
		
		protected Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		protected Microsoft.SharePoint.Linq.EntityRef<ПодгруппыАналитическихПоказателейЭлемент> _подгруппа;
		
		protected Microsoft.SharePoint.Linq.EntityRef<Элемент> _единицаИзмерения;
		
		protected Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АналитическийПоказатель() {
			this._вопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопросSync);
			this._вопрос.OnChanged += new System.EventHandler(this.OnВопросChanged);
			this._вопрос.OnChanging += new System.EventHandler(this.OnВопросChanging);
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this._подгруппа = new Microsoft.SharePoint.Linq.EntityRef<ПодгруппыАналитическихПоказателейЭлемент>();
			this._подгруппа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПодгруппыАналитическихПоказателейЭлемент>>(this.OnПодгруппаSync);
			this._подгруппа.OnChanged += new System.EventHandler(this.OnПодгруппаChanged);
			this._подгруппа.OnChanging += new System.EventHandler(this.OnПодгруппаChanging);
			this._единицаИзмерения = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._единицаИзмерения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnЕдиницаИзмеренияSync);
			this._единицаИзмерения.OnChanged += new System.EventHandler(this.OnЕдиницаИзмеренияChanged);
			this._единицаИзмерения.OnChanging += new System.EventHandler(this.OnЕдиницаИзмеренияChanging);
			this._объект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектSync);
			this._объект.OnChanged += new System.EventHandler(this.OnОбъектChanged);
			this._объект.OnChanging += new System.EventHandler(this.OnОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Значение", Storage="_значение", FieldType="Text")]
		public virtual string Значение {
			get {
				return this._значение;
			}
			set {
				if ((value != this._значение)) {
					this.OnPropertyChanging("Значение", this._значение);
					this._значение = value;
					this.OnPropertyChanged("Значение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Вопрос", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public virtual АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Показатель", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public virtual Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Подгруппа", Storage="_подгруппа", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Подгруппы аналитических показателей")]
		public virtual ПодгруппыАналитическихПоказателейЭлемент Подгруппа {
			get {
				return this._подгруппа.GetEntity();
			}
			set {
				this._подгруппа.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Единица_x0020_измерения", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public virtual Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Объект", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		private void OnВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос", this._вопрос.Clone());
		}
		
		private void OnВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос");
		}
		
		private void OnВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnПодгруппаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Подгруппа", this._подгруппа.Clone());
		}
		
		private void OnПодгруппаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Подгруппа");
		}
		
		private void OnПодгруппаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПодгруппыАналитическихПоказателейЭлемент> e) {
		}
		
		private void OnЕдиницаИзмеренияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЕдиницаИзмерения", this._единицаИзмерения.Clone());
		}
		
		private void OnЕдиницаИзмеренияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЕдиницаИзмерения");
		}
		
		private void OnЕдиницаИзмеренияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект", this._объект.Clone());
		}
		
		private void OnОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект");
		}
		
		private void OnОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Передаваемое имущество")]
	public partial class ПередаваемоеИмуществоЭлемент : Элемент {
		
		private string _комментарий;
		
		private System.Nullable<ЦельПередаваемогоИмущества> _цельПередаваемогоИмущества;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПередаваемоеИмуществоЭлемент() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="comment", Storage="_комментарий", FieldType="Text")]
		public string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="typeofpokazatel", Storage="_цельПередаваемогоИмущества", FieldType="Choice")]
		public System.Nullable<ЦельПередаваемогоИмущества> ЦельПередаваемогоИмущества {
			get {
				return this._цельПередаваемогоИмущества;
			}
			set {
				if ((value != this._цельПередаваемогоИмущества)) {
					this.OnPropertyChanging("ЦельПередаваемогоИмущества", this._цельПередаваемогоИмущества);
					this._цельПередаваемогоИмущества = value;
					this.OnPropertyChanged("ЦельПередаваемогоИмущества");
				}
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Подгруппы аналитических показателей")]
	public partial class ПодгруппыАналитическихПоказателейЭлемент : Элемент {
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПодгруппыАналитическихПоказателейЭлемент() {
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Показатели по вопросу")]
	public partial class ПоказателиПоВопросуЭлемент : Элемент {
		
		private string _значение;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопрос;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПоказателиПоВопросуЭлемент() {
			this._вопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопросSync);
			this._вопрос.OnChanged += new System.EventHandler(this.OnВопросChanged);
			this._вопрос.OnChanging += new System.EventHandler(this.OnВопросChanging);
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x043d__x0430__x0447__x04", Storage="_значение", FieldType="Text")]
		public string Значение {
			get {
				return this._значение;
			}
			set {
				if ((value != this._значение)) {
					this.OnPropertyChanging("Значение", this._значение);
					this._значение = value;
					this.OnPropertyChanged("Значение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0412__x043e__x043f__x0440__x04", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Градостроительные показатели")]
		public Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		private void OnВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос", this._вопрос.Clone());
		}
		
		private void OnВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос");
		}
		
		private void OnВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ПоказателиПоВопросуЭлемент.Add(this);
			}
			else {
				e.Item.ПоказателиПоВопросуЭлемент.Remove(this);
			}
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Поселения")]
	public partial class ПоселенияЭлемент : Элемент {
		
		private string _наименование;
		
		private string _кодОКАТО;
		
		private System.Nullable<ТипПоселения> _типПоселения;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент> _генпланыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> _документТПЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> _рГЗаявкиЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПоселенияЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._генпланыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент>();
			this._генпланыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенпланыЭлемент>>(this.OnГенпланыЭлементSync);
			this._генпланыЭлемент.OnChanged += new System.EventHandler(this.OnГенпланыЭлементChanged);
			this._генпланыЭлемент.OnChanging += new System.EventHandler(this.OnГенпланыЭлементChanging);
			this._документТПЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент>();
			this._документТПЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент>>(this.OnДокументТПЭлементSync);
			this._документТПЭлемент.OnChanged += new System.EventHandler(this.OnДокументТПЭлементChanged);
			this._документТПЭлемент.OnChanging += new System.EventHandler(this.OnДокументТПЭлементChanging);
			this._объектыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлементSync);
			this._объектыЭлемент.OnChanged += new System.EventHandler(this.OnОбъектыЭлементChanged);
			this._объектыЭлемент.OnChanging += new System.EventHandler(this.OnОбъектыЭлементChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._рГЗаявкиЭлемент = new Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент>();
			this._рГЗаявкиЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnРГЗаявкиЭлементSync);
			this._рГЗаявкиЭлемент.OnChanged += new System.EventHandler(this.OnРГЗаявкиЭлементChanged);
			this._рГЗаявкиЭлемент.OnChanging += new System.EventHandler(this.OnРГЗаявкиЭлементChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x0430__x0438__x043c__x04", Storage="_наименование", FieldType="Text")]
		public string Наименование {
			get {
				return this._наименование;
			}
			set {
				if ((value != this._наименование)) {
					this.OnPropertyChanging("Наименование", this._наименование);
					this._наименование = value;
					this.OnPropertyChanged("Наименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x0434__x0020__x04", Storage="_кодОКАТО", FieldType="Text")]
		public string КодОКАТО {
			get {
				return this._кодОКАТО;
			}
			set {
				if ((value != this._кодОКАТО)) {
					this.OnPropertyChanging("КодОКАТО", this._кодОКАТО);
					this._кодОКАТО = value;
					this.OnPropertyChanged("КодОКАТО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0422__x0438__x043f__x0020__x04", Storage="_типПоселения", FieldType="Choice")]
		public System.Nullable<ТипПоселения> ТипПоселения {
			get {
				return this._типПоселения;
			}
			set {
				if ((value != this._типПоселения)) {
					this.OnPropertyChanging("ТипПоселения", this._типПоселения);
					this._типПоселения = value;
					this.OnPropertyChanged("ТипПоселения");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на справочник поселений
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueSettlementMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0413__x043e__x0440__x043e__x04", Storage="_генпланыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Генпланы")]
		public Microsoft.SharePoint.Linq.EntitySet<ГенпланыЭлемент> ГенпланыЭлемент {
			get {
				return this._генпланыЭлемент;
			}
			set {
				this._генпланыЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="location", Storage="_документТПЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Документ ТП")]
		public Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> ДокументТПЭлемент {
			get {
				return this._документТПЭлемент;
			}
			set {
				this._документТПЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Poseleniye", Storage="_объектыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент {
			get {
				return this._объектыЭлемент;
			}
			set {
				this._объектыЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник поселений
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueSettlementMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0441__x0435__x04", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="settlement", Storage="_рГЗаявкиЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Заявки")]
		public Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> РГЗаявкиЭлемент {
			get {
				return this._рГЗаявкиЭлемент;
			}
			set {
				this._рГЗаявкиЭлемент.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
		
		private void OnГенпланыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГенпланыЭлемент", this._генпланыЭлемент.Clone());
		}
		
		private void OnГенпланыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГенпланыЭлемент");
		}
		
		private void OnГенпланыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенпланыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГородскойОкруг = this;
			}
			else {
				e.Item.ГородскойОкруг = null;
			}
		}
		
		private void OnДокументТПЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументТПЭлемент", this._документТПЭлемент.Clone());
		}
		
		private void OnДокументТПЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументТПЭлемент");
		}
		
		private void OnДокументТПЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
		
		private void OnОбъектыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент", this._объектыЭлемент.Clone());
		}
		
		private void OnОбъектыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент");
		}
		
		private void OnОбъектыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
		
		private void OnРГЗаявкиЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РГЗаявкиЭлемент", this._рГЗаявкиЭлемент.Clone());
		}
		
		private void OnРГЗаявкиЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РГЗаявкиЭлемент");
		}
		
		private void OnРГЗаявкиЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Поселение = this;
			}
			else {
				e.Item.Поселение = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Проектная организация")]
	public partial class ПроектнаяОрганизацияЭлемент : Элемент {
		
		private string _телефон;
		
		private string _представитель;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> _документТПЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> _рГЗаявкиЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПроектнаяОрганизацияЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._документТПЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент>();
			this._документТПЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент>>(this.OnДокументТПЭлементSync);
			this._документТПЭлемент.OnChanged += new System.EventHandler(this.OnДокументТПЭлементChanged);
			this._документТПЭлемент.OnChanging += new System.EventHandler(this.OnДокументТПЭлементChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._рГЗаявкиЭлемент = new Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент>();
			this._рГЗаявкиЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnРГЗаявкиЭлементSync);
			this._рГЗаявкиЭлемент.OnChanged += new System.EventHandler(this.OnРГЗаявкиЭлементChanged);
			this._рГЗаявкиЭлемент.OnChanging += new System.EventHandler(this.OnРГЗаявкиЭлементChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="telephone", Storage="_телефон", FieldType="Text")]
		public string Телефон {
			get {
				return this._телефон;
			}
			set {
				if ((value != this._телефон)) {
					this.OnPropertyChanging("Телефон", this._телефон);
					this._телефон = value;
					this.OnPropertyChanged("Телефон");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="agent", Storage="_представитель", FieldType="Text")]
		public string Представитель {
			get {
				return this._представитель;
			}
			set {
				if ((value != this._представитель)) {
					this.OnPropertyChanging("Представитель", this._представитель);
					this._представитель = value;
					this.OnPropertyChanged("Представитель");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_документТПЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Документ ТП")]
		public Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> ДокументТПЭлемент {
			get {
				return this._документТПЭлемент;
			}
			set {
				this._документТПЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="designer", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="designer", Storage="_рГЗаявкиЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Заявки")]
		public Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> РГЗаявкиЭлемент {
			get {
				return this._рГЗаявкиЭлемент;
			}
			set {
				this._рГЗаявкиЭлемент.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Проектировщик = this;
			}
			else {
				e.Item.Проектировщик = null;
			}
		}
		
		private void OnДокументТПЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументТПЭлемент", this._документТПЭлемент.Clone());
		}
		
		private void OnДокументТПЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументТПЭлемент");
		}
		
		private void OnДокументТПЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ПроектнаяОрганизация = this;
			}
			else {
				e.Item.ПроектнаяОрганизация = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Проектировщик = this;
			}
			else {
				e.Item.Проектировщик = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Проектировщик = this;
			}
			else {
				e.Item.Проектировщик = null;
			}
		}
		
		private void OnРГЗаявкиЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РГЗаявкиЭлемент", this._рГЗаявкиЭлемент.Clone());
		}
		
		private void OnРГЗаявкиЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РГЗаявкиЭлемент");
		}
		
		private void OnРГЗаявкиЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Проектировщик = this;
			}
			else {
				e.Item.Проектировщик = null;
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="MeetingAttachmentMVK", Id="0x01004ABA5C96F0559F4FB0A679A019792389")]
	public partial class MeetingAttachmentMVK : Элемент {
		
		private string _описаниеВложения;
		
		private System.Nullable<bool> _сканКопияПротокола;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент> _заседание;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MeetingAttachmentMVK() {
			this._заседание = new Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент>();
			this._заседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент>>(this.OnЗаседаниеSync);
			this._заседание.OnChanged += new System.EventHandler(this.OnЗаседаниеChanged);
			this._заседание.OnChanging += new System.EventHandler(this.OnЗаседаниеChanging);
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingAttachmentDescriptionMVK", Storage="_описаниеВложения", FieldType="Note")]
		public string ОписаниеВложения {
			get {
				return this._описаниеВложения;
			}
			set {
				if ((value != this._описаниеВложения)) {
					this.OnPropertyChanging("ОписаниеВложения", this._описаниеВложения);
					this._описаниеВложения = value;
					this.OnPropertyChanged("ОписаниеВложения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingAttachmentProtocolCopyMVK", Storage="_сканКопияПротокола", FieldType="Boolean")]
		public System.Nullable<bool> СканКопияПротокола {
			get {
				return this._сканКопияПротокола;
			}
			set {
				if ((value != this._сканКопияПротокола)) {
					this.OnPropertyChanging("СканКопияПротокола", this._сканКопияПротокола);
					this._сканКопияПротокола = value;
					this.OnPropertyChanged("СканКопияПротокола");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentMeetingMVK", Storage="_заседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заседания")]
		public РГЗаседанияЭлемент Заседание {
			get {
				return this._заседание.GetEntity();
			}
			set {
				this._заседание.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentDocTypeMVK", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов вложений")]
		public Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		private void OnЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание", this._заседание.Clone());
		}
		
		private void OnЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание");
		}
		
		private void OnЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.MeetingAttachmentMVK.Add(this);
			}
			else {
				e.Item.MeetingAttachmentMVK.Remove(this);
			}
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Тип содержимого для вопроса повестки заседания МВК
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IssueMVK", Id="0x01009435E8C0C3E94107BD6F56DE758815D6")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(РГВопросыЗаседанияЭлемент))]
	public partial class IssueMVK : Элемент {
		
		private string _адрес;
		
		private string _кадастровыйНомер;
		
		private string _решениеПоВопросу;
		
		private string _описание;
		
		private string _информация;
		
		private string _инвестор;
		
		private System.Nullable<int> _подномерВопроса;
		
		private string _тема;
		
		private System.Nullable<int> _номерВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _содокладчики;
		
		private Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент> _видРешения;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _докладчик;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаявкиЭлемент> _заявка;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент> _проектировщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _застройщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент> _заседание;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IssueMVK() {
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this._содокладчики = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._содокладчики.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСодокладчикиSync);
			this._содокладчики.OnChanged += new System.EventHandler(this.OnСодокладчикиChanged);
			this._содокладчики.OnChanging += new System.EventHandler(this.OnСодокладчикиChanging);
			this._видРешения = new Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент>();
			this._видРешения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент>>(this.OnВидРешенияSync);
			this._видРешения.OnChanged += new System.EventHandler(this.OnВидРешенияChanged);
			this._видРешения.OnChanging += new System.EventHandler(this.OnВидРешенияChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._докладчик = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._докладчик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnДокладчикSync);
			this._докладчик.OnChanged += new System.EventHandler(this.OnДокладчикChanged);
			this._докладчик.OnChanging += new System.EventHandler(this.OnДокладчикChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._заявка = new Microsoft.SharePoint.Linq.EntityRef<РГЗаявкиЭлемент>();
			this._заявка.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnЗаявкаSync);
			this._заявка.OnChanged += new System.EventHandler(this.OnЗаявкаChanged);
			this._заявка.OnChanging += new System.EventHandler(this.OnЗаявкаChanging);
			this._проектировщик = new Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент>();
			this._проектировщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент>>(this.OnПроектировщикSync);
			this._проектировщик.OnChanged += new System.EventHandler(this.OnПроектировщикChanged);
			this._проектировщик.OnChanging += new System.EventHandler(this.OnПроектировщикChanging);
			this._застройщик = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._застройщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnЗастройщикSync);
			this._застройщик.OnChanged += new System.EventHandler(this.OnЗастройщикChanged);
			this._застройщик.OnChanging += new System.EventHandler(this.OnЗастройщикChanging);
			this._заседание = new Microsoft.SharePoint.Linq.EntityRef<РГЗаседанияЭлемент>();
			this._заседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент>>(this.OnЗаседаниеSync);
			this._заседание.OnChanged += new System.EventHandler(this.OnЗаседаниеChanged);
			this._заседание.OnChanging += new System.EventHandler(this.OnЗаседаниеChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Адрес рассмотрения вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueAddressMVK", Storage="_адрес", FieldType="Note")]
		public string Адрес {
			get {
				return this._адрес;
			}
			set {
				if ((value != this._адрес)) {
					this.OnPropertyChanging("Адрес", this._адрес);
					this._адрес = value;
					this.OnPropertyChanged("Адрес");
				}
			}
		}
		
		/// <summary>
		/// Кадастровый номер вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueCadastreIdMVK", Storage="_кадастровыйНомер", FieldType="Text")]
		public string КадастровыйНомер {
			get {
				return this._кадастровыйНомер;
			}
			set {
				if ((value != this._кадастровыйНомер)) {
					this.OnPropertyChanging("КадастровыйНомер", this._кадастровыйНомер);
					this._кадастровыйНомер = value;
					this.OnPropertyChanged("КадастровыйНомер");
				}
			}
		}
		
		/// <summary>
		/// Решение по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueDecisionMVK", Storage="_решениеПоВопросу", FieldType="Note")]
		public string РешениеПоВопросу {
			get {
				return this._решениеПоВопросу;
			}
			set {
				if ((value != this._решениеПоВопросу)) {
					this.OnPropertyChanging("РешениеПоВопросу", this._решениеПоВопросу);
					this._решениеПоВопросу = value;
					this.OnPropertyChanged("РешениеПоВопросу");
				}
			}
		}
		
		/// <summary>
		/// Описание вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueDescriptionMVK", Storage="_описание", FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		/// <summary>
		/// Дополнительная информация по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueInfoMVK", Storage="_информация", FieldType="Text")]
		public string Информация {
			get {
				return this._информация;
			}
			set {
				if ((value != this._информация)) {
					this.OnPropertyChanging("Информация", this._информация);
					this._информация = value;
					this.OnPropertyChanged("Информация");
				}
			}
		}
		
		/// <summary>
		/// Инвестор по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueInvestorMVK", Storage="_инвестор", FieldType="Note")]
		public virtual string Инвестор {
			get {
				return this._инвестор;
			}
			set {
				if ((value != this._инвестор)) {
					this.OnPropertyChanging("Инвестор", this._инвестор);
					this._инвестор = value;
					this.OnPropertyChanged("Инвестор");
				}
			}
		}
		
		/// <summary>
		/// Подномер вопроса заседания МВК (дополнительная часть номера)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueSubnumber", Storage="_подномерВопроса", FieldType="Integer")]
		public System.Nullable<int> ПодномерВопроса {
			get {
				return this._подномерВопроса;
			}
			set {
				if ((value != this._подномерВопроса)) {
					this.OnPropertyChanging("ПодномерВопроса", this._подномерВопроса);
					this._подномерВопроса = value;
					this.OnPropertyChanged("ПодномерВопроса");
				}
			}
		}
		
		/// <summary>
		/// Тема вопроса заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueThemeMVK", Storage="_тема", FieldType="Note")]
		public string Тема {
			get {
				return this._тема;
			}
			set {
				if ((value != this._тема)) {
					this.OnPropertyChanging("Тема", this._тема);
					this._тема = value;
					this.OnPropertyChanged("Тема");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IssueNumberMVK", Storage="_номерВопроса", FieldType="Integer")]
		public System.Nullable<int> НомерВопроса {
			get {
				return this._номерВопроса;
			}
			set {
				if ((value != this._номерВопроса)) {
					this.OnPropertyChanging("НомерВопроса", this._номерВопроса);
					this._номерВопроса = value;
					this.OnPropertyChanged("НомерВопроса");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на категорию вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCategoryMVKLink", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылки на содокладчиков по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCoReportesMVK", Storage="_содокладчики", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Содокладчики {
			get {
				return this._содокладчики.GetEntity();
			}
			set {
				this._содокладчики.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Вид решения по вопросу МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueDecisionTypeMVK", Storage="_видРешения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Виды решения")]
		public ВидыРешенияЭлемент ВидРешения {
			get {
				return this._видРешения.GetEntity();
			}
			set {
				this._видРешения.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на муниципальный район вопроса МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMunicipalDistrictMVK", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на докладчика по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueReporterMVK", Storage="_докладчик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Докладчик {
			get {
				return this._докладчик.GetEntity();
			}
			set {
				this._докладчик.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник поселений
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueSettlementMVK", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueOrderMVK", Storage="_заявка", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заявки")]
		public РГЗаявкиЭлемент Заявка {
			get {
				return this._заявка.GetEntity();
			}
			set {
				this._заявка.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="projectorganization", Storage="_проектировщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Проектная организация")]
		public ПроектнаяОрганизацияЭлемент Проектировщик {
			get {
				return this._проектировщик.GetEntity();
			}
			set {
				this._проектировщик.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник застройщиков
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderBuilderMVK", Storage="_застройщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Застройщик {
			get {
				return this._застройщик.GetEntity();
			}
			set {
				this._застройщик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMeetingMVK", Storage="_заседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Заседания")]
		public РГЗаседанияЭлемент Заседание {
			get {
				return this._заседание.GetEntity();
			}
			set {
				this._заседание.SetEntity(value);
			}
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnСодокладчикиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Содокладчики", this._содокладчики.Clone());
		}
		
		private void OnСодокладчикиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Содокладчики");
		}
		
		private void OnСодокладчикиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnВидРешенияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВидРешения", this._видРешения.Clone());
		}
		
		private void OnВидРешенияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВидРешения");
		}
		
		private void OnВидРешенияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnДокладчикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Докладчик", this._докладчик.Clone());
		}
		
		private void OnДокладчикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Докладчик");
		}
		
		private void OnДокладчикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK0.Add(this);
			}
			else {
				e.Item.IssueMVK0.Remove(this);
			}
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnЗаявкаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заявка", this._заявка.Clone());
		}
		
		private void OnЗаявкаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заявка");
		}
		
		private void OnЗаявкаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnПроектировщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Проектировщик", this._проектировщик.Clone());
		}
		
		private void OnПроектировщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Проектировщик");
		}
		
		private void OnПроектировщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
		
		private void OnЗастройщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Застройщик", this._застройщик.Clone());
		}
		
		private void OnЗастройщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Застройщик");
		}
		
		private void OnЗастройщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
		}
		
		private void OnЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание", this._заседание.Clone());
		}
		
		private void OnЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание");
		}
		
		private void OnЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueMVK.Add(this);
			}
			else {
				e.Item.IssueMVK.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Заседание МВК
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="MeetingMVK", Id="0x0100C274D4A47E4742EEABF2D5FDF35DFBC9")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(РГЗаседанияЭлемент))]
	public partial class MeetingMVK : Элемент {
		
		private string _комментарий;
		
		private System.Nullable<System.DateTime> _датаПроведения;
		
		private string _номерЗаседания;
		
		private string _местоПроведенияЗаседания;
		
		private System.Nullable<Статус> _статус;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public MeetingMVK() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Комментарий к заседанию МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingCommentMVK", Storage="_комментарий", FieldType="Note")]
		public virtual string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		/// <summary>
		/// Дата проведения заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingDateMVK", Storage="_датаПроведения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПроведения {
			get {
				return this._датаПроведения;
			}
			set {
				if ((value != this._датаПроведения)) {
					this.OnPropertyChanging("ДатаПроведения", this._датаПроведения);
					this._датаПроведения = value;
					this.OnPropertyChanged("ДатаПроведения");
				}
			}
		}
		
		/// <summary>
		/// Номер заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingNumberMVK", Storage="_номерЗаседания", FieldType="Text")]
		public string НомерЗаседания {
			get {
				return this._номерЗаседания;
			}
			set {
				if ((value != this._номерЗаседания)) {
					this.OnPropertyChanging("НомерЗаседания", this._номерЗаседания);
					this._номерЗаседания = value;
					this.OnPropertyChanged("НомерЗаседания");
				}
			}
		}
		
		/// <summary>
		/// Место проведения заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingPlaceMVK", Storage="_местоПроведенияЗаседания", FieldType="Note")]
		public string МестоПроведенияЗаседания {
			get {
				return this._местоПроведенияЗаседания;
			}
			set {
				if ((value != this._местоПроведенияЗаседания)) {
					this.OnPropertyChanging("МестоПроведенияЗаседания", this._местоПроведенияЗаседания);
					this._местоПроведенияЗаседания = value;
					this.OnPropertyChanged("МестоПроведенияЗаседания");
				}
			}
		}
		
		/// <summary>
		/// Статус заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingStatusMVK", Storage="_статус", FieldType="Choice")]
		public System.Nullable<Статус> Статус {
			get {
				return this._статус;
			}
			set {
				if ((value != this._статус)) {
					this.OnPropertyChanging("Статус", this._статус);
					this._статус = value;
					this.OnPropertyChanged("Статус");
				}
			}
		}
	}
	
	/// <summary>
	/// Заявка МВК
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="OrderMVK", Id="0x0100ED5F7CB6A1DD4E8D9D5163520BDDD6D0")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(РГЗаявкиЭлемент))]
	public partial class OrderMVK : Элемент {
		
		private string _описаниеЗаявки;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _застройщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _авторЗаявки;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public OrderMVK() {
			this._застройщик = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._застройщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnЗастройщикSync);
			this._застройщик.OnChanged += new System.EventHandler(this.OnЗастройщикChanged);
			this._застройщик.OnChanging += new System.EventHandler(this.OnЗастройщикChanging);
			this._объект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектSync);
			this._объект.OnChanged += new System.EventHandler(this.OnОбъектChanged);
			this._объект.OnChanging += new System.EventHandler(this.OnОбъектChanging);
			this._авторЗаявки = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._авторЗаявки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnАвторЗаявкиSync);
			this._авторЗаявки.OnChanged += new System.EventHandler(this.OnАвторЗаявкиChanged);
			this._авторЗаявки.OnChanging += new System.EventHandler(this.OnАвторЗаявкиChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Описание заявки МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrderTextMVK", Storage="_описаниеЗаявки", FieldType="Note")]
		public string ОписаниеЗаявки {
			get {
				return this._описаниеЗаявки;
			}
			set {
				if ((value != this._описаниеЗаявки)) {
					this.OnPropertyChanging("ОписаниеЗаявки", this._описаниеЗаявки);
					this._описаниеЗаявки = value;
					this.OnPropertyChanged("ОписаниеЗаявки");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на справочник застройщиков
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderBuilderMVK", Storage="_застройщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент Застройщик {
			get {
				return this._застройщик.GetEntity();
			}
			set {
				this._застройщик.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник объектов
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderObjectMVK", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public virtual ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Автор заявки МВК, ссылка на справочник организаций
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrderOrgAuthorMVK", Storage="_авторЗаявки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public virtual СправочникОрганизацийОрганизация АвторЗаявки {
			get {
				return this._авторЗаявки.GetEntity();
			}
			set {
				this._авторЗаявки.SetEntity(value);
			}
		}
		
		private void OnЗастройщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Застройщик", this._застройщик.Clone());
		}
		
		private void OnЗастройщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Застройщик");
		}
		
		private void OnЗастройщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
		}
		
		private void OnОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект", this._объект.Clone());
		}
		
		private void OnОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект");
		}
		
		private void OnОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
		}
		
		private void OnАвторЗаявкиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АвторЗаявки", this._авторЗаявки.Clone());
		}
		
		private void OnАвторЗаявкиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АвторЗаявки");
		}
		
		private void OnАвторЗаявкиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IssueObjectMVK", Id="0x0100AE06B3C3A194064F937508FB680B08F5")]
	public partial class IssueObjectMVK : Элемент {
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопрос;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _объект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IssueObjectMVK() {
			this._вопрос = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопросSync);
			this._вопрос.OnChanged += new System.EventHandler(this.OnВопросChanged);
			this._вопрос.OnChanging += new System.EventHandler(this.OnВопросChanging);
			this._объект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._объект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектSync);
			this._объект.OnChanged += new System.EventHandler(this.OnОбъектChanged);
			this._объект.OnChanging += new System.EventHandler(this.OnОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectIssueMVK", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public РГВопросыЗаседанияЭлемент Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectObjectMVK", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		private void OnВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос", this._вопрос.Clone());
		}
		
		private void OnВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос");
		}
		
		private void OnВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueObjectMVK.Add(this);
			}
			else {
				e.Item.IssueObjectMVK.Remove(this);
			}
		}
		
		private void OnОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Объект", this._объект.Clone());
		}
		
		private void OnОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Объект");
		}
		
		private void OnОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueObjectMVK.Add(this);
			}
			else {
				e.Item.IssueObjectMVK.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Тип содержимого для поручения МВК
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AssignmentMVK", Id="0x01009E8BDC3C1146476781B2724822295453")]
	public partial class AssignmentMVK : Элемент {
		
		private string _номерПоручения;
		
		private System.Nullable<int> _количествоДнейНаРешение;
		
		private string _зависимыйСрок;
		
		private System.Nullable<System.DateTime> _фактическийСрокИсполненияПоручения;
		
		private string _примечание;
		
		private System.Nullable<System.DateTime> _срокИсполненияПоручения;
		
		private string _типЗависимостиПланируемойДаты;
		
		private System.Nullable<double> _количествоПродлений;
		
		private string _ответственныйИсполнитель;
		
		private string _текстПоручения;
		
		private System.Nullable<СостояниеКонтроляПоручения> _состояниеКонтроляПоручения;
		
		private System.Nullable<ТипДней> _типДней;
		
		private System.Nullable<СтатусПоручения> _статусПоручения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _соисполнители;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _контролерПоручения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _исполнитель;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _организацияИсполнителя;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition> _должностьИсполнителя;
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения> _типПоручения;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AssignmentMVK() {
			this._соисполнители = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._соисполнители.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСоисполнителиSync);
			this._соисполнители.OnChanged += new System.EventHandler(this.OnСоисполнителиChanged);
			this._соисполнители.OnChanging += new System.EventHandler(this.OnСоисполнителиChanging);
			this._контролерПоручения = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._контролерПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnКонтролерПорученияSync);
			this._контролерПоручения.OnChanged += new System.EventHandler(this.OnКонтролерПорученияChanged);
			this._контролерПоручения.OnChanging += new System.EventHandler(this.OnКонтролерПорученияChanging);
			this._исполнитель = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._исполнитель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnИсполнительSync);
			this._исполнитель.OnChanged += new System.EventHandler(this.OnИсполнительChanged);
			this._исполнитель.OnChanging += new System.EventHandler(this.OnИсполнительChanging);
			this._организацияИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._организацияИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnОрганизацияИсполнителяSync);
			this._организацияИсполнителя.OnChanged += new System.EventHandler(this.OnОрганизацияИсполнителяChanged);
			this._организацияИсполнителя.OnChanging += new System.EventHandler(this.OnОрганизацияИсполнителяChanging);
			this._должностьИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition>();
			this._должностьИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition>>(this.OnДолжностьИсполнителяSync);
			this._должностьИсполнителя.OnChanged += new System.EventHandler(this.OnДолжностьИсполнителяChanged);
			this._должностьИсполнителя.OnChanging += new System.EventHandler(this.OnДолжностьИсполнителяChanging);
			this._вопросПовестки = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопросПовесткиSync);
			this._вопросПовестки.OnChanged += new System.EventHandler(this.OnВопросПовесткиChanged);
			this._вопросПовестки.OnChanging += new System.EventHandler(this.OnВопросПовесткиChanging);
			this._типПоручения = new Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения>();
			this._типПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения>>(this.OnТипПорученияSync);
			this._типПоручения.OnChanged += new System.EventHandler(this.OnТипПорученияChanged);
			this._типПоручения.OnChanging += new System.EventHandler(this.OnТипПорученияChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Номер поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AsignmentNumberMVK", Storage="_номерПоручения", FieldType="Text")]
		public string НомерПоручения {
			get {
				return this._номерПоручения;
			}
			set {
				if ((value != this._номерПоручения)) {
					this.OnPropertyChanging("НомерПоручения", this._номерПоручения);
					this._номерПоручения = value;
					this.OnPropertyChanged("НомерПоручения");
				}
			}
		}
		
		/// <summary>
		/// Количество дней на решение (поручение МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDaysForResolveMVK", Storage="_количествоДнейНаРешение", FieldType="Integer")]
		public System.Nullable<int> КоличествоДнейНаРешение {
			get {
				return this._количествоДнейНаРешение;
			}
			set {
				if ((value != this._количествоДнейНаРешение)) {
					this.OnPropertyChanging("КоличествоДнейНаРешение", this._количествоДнейНаРешение);
					this._количествоДнейНаРешение = value;
					this.OnPropertyChanged("КоличествоДнейНаРешение");
				}
			}
		}
		
		/// <summary>
		/// Зависимый срок (текстовое представление зависимости от другого поручения МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDependentTermTextMVK", Storage="_зависимыйСрок", FieldType="Text")]
		public string ЗависимыйСрок {
			get {
				return this._зависимыйСрок;
			}
			set {
				if ((value != this._зависимыйСрок)) {
					this.OnPropertyChanging("ЗависимыйСрок", this._зависимыйСрок);
					this._зависимыйСрок = value;
					this.OnPropertyChanged("ЗависимыйСрок");
				}
			}
		}
		
		/// <summary>
		/// Фактический срок исполнения поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentFactDateMVK", Storage="_фактическийСрокИсполненияПоручения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ФактическийСрокИсполненияПоручения {
			get {
				return this._фактическийСрокИсполненияПоручения;
			}
			set {
				if ((value != this._фактическийСрокИсполненияПоручения)) {
					this.OnPropertyChanging("ФактическийСрокИсполненияПоручения", this._фактическийСрокИсполненияПоручения);
					this._фактическийСрокИсполненияПоручения = value;
					this.OnPropertyChanged("ФактическийСрокИсполненияПоручения");
				}
			}
		}
		
		/// <summary>
		/// Примечание к поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentNoteMVK", Storage="_примечание", FieldType="Note")]
		public string Примечание {
			get {
				return this._примечание;
			}
			set {
				if ((value != this._примечание)) {
					this.OnPropertyChanging("Примечание", this._примечание);
					this._примечание = value;
					this.OnPropertyChanged("Примечание");
				}
			}
		}
		
		/// <summary>
		/// Планируемый срок исполнения поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanDateMVK", Storage="_срокИсполненияПоручения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокИсполненияПоручения {
			get {
				return this._срокИсполненияПоручения;
			}
			set {
				if ((value != this._срокИсполненияПоручения)) {
					this.OnPropertyChanging("СрокИсполненияПоручения", this._срокИсполненияПоручения);
					this._срокИсполненияПоручения = value;
					this.OnPropertyChanged("СрокИсполненияПоручения");
				}
			}
		}
		
		/// <summary>
		/// Тип зависимости планируемой даты поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanIsDependentMVK", Storage="_типЗависимостиПланируемойДаты", FieldType="Text")]
		public string ТипЗависимостиПланируемойДаты {
			get {
				return this._типЗависимостиПланируемойДаты;
			}
			set {
				if ((value != this._типЗависимостиПланируемойДаты)) {
					this.OnPropertyChanging("ТипЗависимостиПланируемойДаты", this._типЗависимостиПланируемойДаты);
					this._типЗависимостиПланируемойДаты = value;
					this.OnPropertyChanged("ТипЗависимостиПланируемойДаты");
				}
			}
		}
		
		/// <summary>
		/// Количество продлений поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentProlongationCountMVK", Storage="_количествоПродлений", FieldType="Number")]
		public System.Nullable<double> КоличествоПродлений {
			get {
				return this._количествоПродлений;
			}
			set {
				if ((value != this._количествоПродлений)) {
					this.OnPropertyChanging("КоличествоПродлений", this._количествоПродлений);
					this._количествоПродлений = value;
					this.OnPropertyChanged("КоличествоПродлений");
				}
			}
		}
		
		/// <summary>
		/// Ответственный исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentResponsibleExecutorMVK", Storage="_ответственныйИсполнитель", FieldType="Text")]
		public string ОтветственныйИсполнитель {
			get {
				return this._ответственныйИсполнитель;
			}
			set {
				if ((value != this._ответственныйИсполнитель)) {
					this.OnPropertyChanging("ОтветственныйИсполнитель", this._ответственныйИсполнитель);
					this._ответственныйИсполнитель = value;
					this.OnPropertyChanged("ОтветственныйИсполнитель");
				}
			}
		}
		
		/// <summary>
		/// Текст поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentTextMVK", Storage="_текстПоручения", FieldType="Note")]
		public string ТекстПоручения {
			get {
				return this._текстПоручения;
			}
			set {
				if ((value != this._текстПоручения)) {
					this.OnPropertyChanging("ТекстПоручения", this._текстПоручения);
					this._текстПоручения = value;
					this.OnPropertyChanged("ТекстПоручения");
				}
			}
		}
		
		/// <summary>
		/// Состояние контроля поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentControlStateMVK", Storage="_состояниеКонтроляПоручения", FieldType="Choice")]
		public System.Nullable<СостояниеКонтроляПоручения> СостояниеКонтроляПоручения {
			get {
				return this._состояниеКонтроляПоручения;
			}
			set {
				if ((value != this._состояниеКонтроляПоручения)) {
					this.OnPropertyChanging("СостояниеКонтроляПоручения", this._состояниеКонтроляПоручения);
					this._состояниеКонтроляПоручения = value;
					this.OnPropertyChanged("СостояниеКонтроляПоручения");
				}
			}
		}
		
		/// <summary>
		/// Тип дней (зависимость от другого поручения МВК)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDayTypeMVK", Storage="_типДней", FieldType="Choice")]
		public System.Nullable<ТипДней> ТипДней {
			get {
				return this._типДней;
			}
			set {
				if ((value != this._типДней)) {
					this.OnPropertyChanging("ТипДней", this._типДней);
					this._типДней = value;
					this.OnPropertyChanged("ТипДней");
				}
			}
		}
		
		/// <summary>
		/// Статус поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentStatusMVK", Storage="_статусПоручения", FieldType="Choice")]
		public System.Nullable<СтатусПоручения> СтатусПоручения {
			get {
				return this._статусПоручения;
			}
			set {
				if ((value != this._статусПоручения)) {
					this.OnPropertyChanging("СтатусПоручения", this._статусПоручения);
					this._статусПоручения = value;
					this.OnPropertyChanged("СтатусПоручения");
				}
			}
		}
		
		/// <summary>
		/// Соисполнители по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentCoExecutorsMVK", Storage="_соисполнители", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Соисполнители {
			get {
				return this._соисполнители.GetEntity();
			}
			set {
				this._соисполнители.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Контролер по исполнению поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerMVK", Storage="_контролерПоручения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник КонтролерПоручения {
			get {
				return this._контролерПоручения.GetEntity();
			}
			set {
				this._контролерПоручения.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorMVK", Storage="_исполнитель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Исполнитель {
			get {
				return this._исполнитель.GetEntity();
			}
			set {
				this._исполнитель.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Организация исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrgMVK", Storage="_организацияИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация ОрганизацияИсполнителя {
			get {
				return this._организацияИсполнителя.GetEntity();
			}
			set {
				this._организацияИсполнителя.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Должность исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionMVK", Storage="_должностьИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник должностей")]
		public СправочникДолжностейPosition ДолжностьИсполнителя {
			get {
				return this._должностьИсполнителя.GetEntity();
			}
			set {
				this._должностьИсполнителя.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на вопрос повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentIssueMVK", Storage="_вопросПовестки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public РГВопросыЗаседанияЭлемент ВопросПовестки {
			get {
				return this._вопросПовестки.GetEntity();
			}
			set {
				this._вопросПовестки.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Тип поручения
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeMVK", Storage="_типПоручения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы поручений")]
		public ТипыПорученийТипПоручения ТипПоручения {
			get {
				return this._типПоручения.GetEntity();
			}
			set {
				this._типПоручения.SetEntity(value);
			}
		}
		
		private void OnСоисполнителиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соисполнители", this._соисполнители.Clone());
		}
		
		private void OnСоисполнителиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соисполнители");
		}
		
		private void OnСоисполнителиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK.Add(this);
			}
			else {
				e.Item.AssignmentMVK.Remove(this);
			}
		}
		
		private void OnКонтролерПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КонтролерПоручения", this._контролерПоручения.Clone());
		}
		
		private void OnКонтролерПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КонтролерПоручения");
		}
		
		private void OnКонтролерПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK0.Add(this);
			}
			else {
				e.Item.AssignmentMVK0.Remove(this);
			}
		}
		
		private void OnИсполнительChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Исполнитель", this._исполнитель.Clone());
		}
		
		private void OnИсполнительChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Исполнитель");
		}
		
		private void OnИсполнительSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK1.Add(this);
			}
			else {
				e.Item.AssignmentMVK1.Remove(this);
			}
		}
		
		private void OnОрганизацияИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОрганизацияИсполнителя", this._организацияИсполнителя.Clone());
		}
		
		private void OnОрганизацияИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОрганизацияИсполнителя");
		}
		
		private void OnОрганизацияИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK.Add(this);
			}
			else {
				e.Item.AssignmentMVK.Remove(this);
			}
		}
		
		private void OnДолжностьИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДолжностьИсполнителя", this._должностьИсполнителя.Clone());
		}
		
		private void OnДолжностьИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДолжностьИсполнителя");
		}
		
		private void OnДолжностьИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK.Add(this);
			}
			else {
				e.Item.AssignmentMVK.Remove(this);
			}
		}
		
		private void OnВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВопросПовестки", this._вопросПовестки.Clone());
		}
		
		private void OnВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВопросПовестки");
		}
		
		private void OnВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK.Add(this);
			}
			else {
				e.Item.AssignmentMVK.Remove(this);
			}
		}
		
		private void OnТипПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипПоручения", this._типПоручения.Clone());
		}
		
		private void OnТипПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипПоручения");
		}
		
		private void OnТипПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AssignmentMVK.Add(this);
			}
			else {
				e.Item.AssignmentMVK.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Согласительное совещание")]
	public partial class СогласительноеСовещаниеЭлемент : Элемент {
		
		private System.Nullable<System.DateTime> _датаПроведения;
		
		private string _местоПроведения;
		
		private string _решение;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _участники;
		
		private Microsoft.SharePoint.Linq.EntityRef<ДокументТПЭлемент> _документТП;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СогласительноеСовещаниеЭлемент() {
			this._участники = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._участники.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnУчастникиSync);
			this._участники.OnChanged += new System.EventHandler(this.OnУчастникиChanged);
			this._участники.OnChanging += new System.EventHandler(this.OnУчастникиChanging);
			this._документТП = new Microsoft.SharePoint.Linq.EntityRef<ДокументТПЭлемент>();
			this._документТП.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент>>(this.OnДокументТПSync);
			this._документТП.OnChanged += new System.EventHandler(this.OnДокументТПChanged);
			this._документТП.OnChanging += new System.EventHandler(this.OnДокументТПChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="date_meeting", Storage="_датаПроведения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПроведения {
			get {
				return this._датаПроведения;
			}
			set {
				if ((value != this._датаПроведения)) {
					this.OnPropertyChanging("ДатаПроведения", this._датаПроведения);
					this._датаПроведения = value;
					this.OnPropertyChanged("ДатаПроведения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="place_meeting", Storage="_местоПроведения", FieldType="Text")]
		public string МестоПроведения {
			get {
				return this._местоПроведения;
			}
			set {
				if ((value != this._местоПроведения)) {
					this.OnPropertyChanging("МестоПроведения", this._местоПроведения);
					this._местоПроведения = value;
					this.OnPropertyChanged("МестоПроведения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="conclusion", Storage="_решение", FieldType="Note")]
		public string Решение {
			get {
				return this._решение;
			}
			set {
				if ((value != this._решение)) {
					this.OnPropertyChanging("Решение", this._решение);
					this._решение = value;
					this.OnPropertyChanged("Решение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="party", Storage="_участники", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> Участники {
			get {
				return this._участники;
			}
			set {
				this._участники.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="docTP", Storage="_документТП", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Документ ТП")]
		public ДокументТПЭлемент ДокументТП {
			get {
				return this._документТП.GetEntity();
			}
			set {
				this._документТП.SetEntity(value);
			}
		}
		
		private void OnУчастникиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Участники", this._участники.Clone());
		}
		
		private void OnУчастникиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Участники");
		}
		
		private void OnУчастникиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СогласительноеСовещаниеЭлемент.Add(this);
			}
			else {
				e.Item.СогласительноеСовещаниеЭлемент.Remove(this);
			}
		}
		
		private void OnДокументТПChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументТП", this._документТП.Clone());
		}
		
		private void OnДокументТПChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументТП");
		}
		
		private void OnДокументТПSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СогласительноеСовещаниеЭлемент.Add(this);
			}
			else {
				e.Item.СогласительноеСовещаниеЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Справочник застройщиков")]
	public partial class СправочникЗастройщиковЭлемент : Элемент {
		
		private System.Nullable<double> _количествоОбъектов;
		
		private System.Nullable<double> _общаяПлощадьЗастройкиОбъектов;
		
		private string _местоРегистрации;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент0;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент1;
		
		private Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> _объектыЭлемент2;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникЗастройщиковЭлемент> _справочникЗастройщиковЭлемент0;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент> _головнаяОрганизация;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СправочникЗастройщиковЭлемент() {
			this._объектыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлементSync);
			this._объектыЭлемент.OnChanged += new System.EventHandler(this.OnОбъектыЭлементChanged);
			this._объектыЭлемент.OnChanging += new System.EventHandler(this.OnОбъектыЭлементChanging);
			this._объектыЭлемент0 = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлемент0Sync);
			this._объектыЭлемент0.OnChanged += new System.EventHandler(this.OnОбъектыЭлемент0Changed);
			this._объектыЭлемент0.OnChanging += new System.EventHandler(this.OnОбъектыЭлемент0Changing);
			this._объектыЭлемент1 = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлемент1Sync);
			this._объектыЭлемент1.OnChanged += new System.EventHandler(this.OnОбъектыЭлемент1Changed);
			this._объектыЭлемент1.OnChanging += new System.EventHandler(this.OnОбъектыЭлемент1Changing);
			this._объектыЭлемент2 = new Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент>();
			this._объектыЭлемент2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnОбъектыЭлемент2Sync);
			this._объектыЭлемент2.OnChanged += new System.EventHandler(this.OnОбъектыЭлемент2Changed);
			this._объектыЭлемент2.OnChanging += new System.EventHandler(this.OnОбъектыЭлемент2Changing);
			this._справочникЗастройщиковЭлемент0 = new Microsoft.SharePoint.Linq.EntitySet<СправочникЗастройщиковЭлемент>();
			this._справочникЗастройщиковЭлемент0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnСправочникЗастройщиковЭлемент0Sync);
			this._справочникЗастройщиковЭлемент0.OnChanged += new System.EventHandler(this.OnСправочникЗастройщиковЭлемент0Changed);
			this._справочникЗастройщиковЭлемент0.OnChanging += new System.EventHandler(this.OnСправочникЗастройщиковЭлемент0Changing);
			this._головнаяОрганизация = new Microsoft.SharePoint.Linq.EntityRef<СправочникЗастройщиковЭлемент>();
			this._головнаяОрганизация.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент>>(this.OnГоловнаяОрганизацияSync);
			this._головнаяОрганизация.OnChanged += new System.EventHandler(this.OnГоловнаяОрганизацияChanged);
			this._головнаяОрганизация.OnChanging += new System.EventHandler(this.OnГоловнаяОрганизацияChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x043b__x0438__x04", Storage="_количествоОбъектов", FieldType="Number")]
		public System.Nullable<double> КоличествоОбъектов {
			get {
				return this._количествоОбъектов;
			}
			set {
				if ((value != this._количествоОбъектов)) {
					this.OnPropertyChanging("КоличествоОбъектов", this._количествоОбъектов);
					this._количествоОбъектов = value;
					this.OnPropertyChanged("КоличествоОбъектов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0431__x0449__x0430__x04", Storage="_общаяПлощадьЗастройкиОбъектов", FieldType="Number")]
		public System.Nullable<double> ОбщаяПлощадьЗастройкиОбъектов {
			get {
				return this._общаяПлощадьЗастройкиОбъектов;
			}
			set {
				if ((value != this._общаяПлощадьЗастройкиОбъектов)) {
					this.OnPropertyChanging("ОбщаяПлощадьЗастройкиОбъектов", this._общаяПлощадьЗастройкиОбъектов);
					this._общаяПлощадьЗастройкиОбъектов = value;
					this.OnPropertyChanged("ОбщаяПлощадьЗастройкиОбъектов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="registration", Storage="_местоРегистрации", FieldType="Choice")]
		public string МестоРегистрации {
			get {
				return this._местоРегистрации;
			}
			set {
				if ((value != this._местоРегистрации)) {
					this.OnPropertyChanging("МестоРегистрации", this._местоРегистрации);
					this._местоРегистрации = value;
					this.OnPropertyChanged("МестоРегистрации");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Builder", Storage="_объектыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент {
			get {
				return this._объектыЭлемент;
			}
			set {
				this._объектыЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x04", Storage="_объектыЭлемент0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент0 {
			get {
				return this._объектыЭлемент0;
			}
			set {
				this._объектыЭлемент0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x040", Storage="_объектыЭлемент1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент1 {
			get {
				return this._объектыЭлемент1;
			}
			set {
				this._объектыЭлемент1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0421__x043e__x0438__x043d__x041", Storage="_объектыЭлемент2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Объекты")]
		public Microsoft.SharePoint.Linq.EntitySet<ОбъектыЭлемент> ОбъектыЭлемент2 {
			get {
				return this._объектыЭлемент2;
			}
			set {
				this._объектыЭлемент2.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="directing_agency", Storage="_справочникЗастройщиковЭлемент0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Справочник застройщиков")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникЗастройщиковЭлемент> СправочникЗастройщиковЭлемент0 {
			get {
				return this._справочникЗастройщиковЭлемент0;
			}
			set {
				this._справочникЗастройщиковЭлемент0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="directing_agency", Storage="_головнаяОрганизация", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник застройщиков")]
		public СправочникЗастройщиковЭлемент ГоловнаяОрганизация {
			get {
				return this._головнаяОрганизация.GetEntity();
			}
			set {
				this._головнаяОрганизация.SetEntity(value);
			}
		}
		
		private void OnОбъектыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент", this._объектыЭлемент.Clone());
		}
		
		private void OnОбъектыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент");
		}
		
		private void OnОбъектыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Застройщик = this;
			}
			else {
				e.Item.Застройщик = null;
			}
		}
		
		private void OnОбъектыЭлемент0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент0", this._объектыЭлемент0.Clone());
		}
		
		private void OnОбъектыЭлемент0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент0");
		}
		
		private void OnОбъектыЭлемент0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соинвестор1 = this;
			}
			else {
				e.Item.Соинвестор1 = null;
			}
		}
		
		private void OnОбъектыЭлемент1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент1", this._объектыЭлемент1.Clone());
		}
		
		private void OnОбъектыЭлемент1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент1");
		}
		
		private void OnОбъектыЭлемент1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соинвестор2 = this;
			}
			else {
				e.Item.Соинвестор2 = null;
			}
		}
		
		private void OnОбъектыЭлемент2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОбъектыЭлемент2", this._объектыЭлемент2.Clone());
		}
		
		private void OnОбъектыЭлемент2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОбъектыЭлемент2");
		}
		
		private void OnОбъектыЭлемент2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соинвестор3 = this;
			}
			else {
				e.Item.Соинвестор3 = null;
			}
		}
		
		private void OnСправочникЗастройщиковЭлемент0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СправочникЗастройщиковЭлемент0", this._справочникЗастройщиковЭлемент0.Clone());
		}
		
		private void OnСправочникЗастройщиковЭлемент0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СправочникЗастройщиковЭлемент0");
		}
		
		private void OnСправочникЗастройщиковЭлемент0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГоловнаяОрганизация = this;
			}
			else {
				e.Item.ГоловнаяОрганизация = null;
			}
		}
		
		private void OnГоловнаяОрганизацияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГоловнаяОрганизация", this._головнаяОрганизация.Clone());
		}
		
		private void OnГоловнаяОрганизацияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГоловнаяОрганизация");
		}
		
		private void OnГоловнаяОрганизацияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникЗастройщиковЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СправочникЗастройщиковЭлемент0.Add(this);
			}
			else {
				e.Item.СправочникЗастройщиковЭлемент0.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Суть вопроса")]
	public partial class СутьВопросаЭлемент : Элемент {
		
		private string _комментарий;
		
		private System.Nullable<bool> _флажокСтатистики;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _родительскийОбъект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СутьВопросаЭлемент() {
			this._родительскийОбъект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._родительскийОбъект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnРодительскийОбъектSync);
			this._родительскийОбъект.OnChanged += new System.EventHandler(this.OnРодительскийОбъектChanged);
			this._родительскийОбъект.OnChanging += new System.EventHandler(this.OnРодительскийОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="comment", Storage="_комментарий", FieldType="Text")]
		public string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0424__x043b__x0430__x0436__x04", Storage="_флажокСтатистики", FieldType="Boolean")]
		public System.Nullable<bool> ФлажокСтатистики {
			get {
				return this._флажокСтатистики;
			}
			set {
				if ((value != this._флажокСтатистики)) {
					this.OnPropertyChanging("ФлажокСтатистики", this._флажокСтатистики);
					this._флажокСтатистики = value;
					this.OnPropertyChanged("ФлажокСтатистики");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rod_object", Storage="_родительскийОбъект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент РодительскийОбъект {
			get {
				return this._родительскийОбъект.GetEntity();
			}
			set {
				this._родительскийОбъект.SetEntity(value);
			}
		}
		
		private void OnРодительскийОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РодительскийОбъект", this._родительскийОбъект.Clone());
		}
		
		private void OnРодительскийОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РодительскийОбъект");
		}
		
		private void OnРодительскийОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СутьВопросаЭлемент.Add(this);
			}
			else {
				e.Item.СутьВопросаЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01", List="Фонд ветхого жилья")]
	public partial class ФондВетхогоЖильяЭлемент : Элемент {
		
		private string _муниципальноеОбразование;
		
		private System.Nullable<System.DateTime> _срокРассмотрения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _докладчик;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ФондВетхогоЖильяЭлемент() {
			this._докладчик = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._докладчик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnДокладчикSync);
			this._докладчик.OnChanged += new System.EventHandler(this.OnДокладчикChanged);
			this._докладчик.OnChanging += new System.EventHandler(this.OnДокладчикChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_муниципальноеОбразование", FieldType="Text")]
		public string МуниципальноеОбразование {
			get {
				return this._муниципальноеОбразование;
			}
			set {
				if ((value != this._муниципальноеОбразование)) {
					this.OnPropertyChanging("МуниципальноеОбразование", this._муниципальноеОбразование);
					this._муниципальноеОбразование = value;
					this.OnPropertyChanged("МуниципальноеОбразование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0440__x043e__x043a__x00", Storage="_срокРассмотрения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокРассмотрения {
			get {
				return this._срокРассмотрения;
			}
			set {
				if ((value != this._срокРассмотрения)) {
					this.OnPropertyChanging("СрокРассмотрения", this._срокРассмотрения);
					this._срокРассмотрения = value;
					this.OnPropertyChanged("СрокРассмотрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0414__x043e__x043a__x043b__x04", Storage="_докладчик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Докладчик {
			get {
				return this._докладчик.GetEntity();
			}
			set {
				this._докладчик.SetEntity(value);
			}
		}
		
		private void OnДокладчикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Докладчик", this._докладчик.Clone());
		}
		
		private void OnДокладчикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Докладчик");
		}
		
		private void OnДокладчикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ФондВетхогоЖильяЭлемент.Add(this);
			}
			else {
				e.Item.ФондВетхогоЖильяЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создание документа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Документ", Id="0x0101", List="АК - Вложения вопроса заседания")]
	public partial class АКВложенияВопросаЗаседанияДокумент : Документ {
		
		private string _значениеИдентификатораДокумента;
		
		private string _идентификаторДокумента;
		
		private System.Nullable<int> _скрытиеПаспортаОбъекта;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _ссылкаНаВопрос;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание> _ссылкаНаЗаседание;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКВложенияВопросаЗаседанияДокумент() {
			this._ссылкаНаВопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._ссылкаНаВопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnСсылкаНаВопросSync);
			this._ссылкаНаВопрос.OnChanged += new System.EventHandler(this.OnСсылкаНаВопросChanged);
			this._ссылкаНаВопрос.OnChanging += new System.EventHandler(this.OnСсылкаНаВопросChanging);
			this._ссылкаНаЗаседание = new Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание>();
			this._ссылкаНаЗаседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnСсылкаНаЗаседаниеSync);
			this._ссылкаНаЗаседание.OnChanged += new System.EventHandler(this.OnСсылкаНаЗаседаниеChanged);
			this._ссылкаНаЗаседание.OnChanging += new System.EventHandler(this.OnСсылкаНаЗаседаниеChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Значение идентификатора документа, присвоенного данному элементу.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocId", Storage="_значениеИдентификатораДокумента", ReadOnly=true, FieldType="Text")]
		public string ЗначениеИдентификатораДокумента {
			get {
				return this._значениеИдентификатораДокумента;
			}
			set {
				if ((value != this._значениеИдентификатораДокумента)) {
					this.OnPropertyChanging("ЗначениеИдентификатораДокумента", this._значениеИдентификатораДокумента);
					this._значениеИдентификатораДокумента = value;
					this.OnPropertyChanged("ЗначениеИдентификатораДокумента");
				}
			}
		}
		
		/// <summary>
		/// Постоянная ссылка на этот документ.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocIdUrl", Storage="_идентификаторДокумента", ReadOnly=true, FieldType="Url")]
		public string ИдентификаторДокумента {
			get {
				return this._идентификаторДокумента;
			}
			set {
				if ((value != this._идентификаторДокумента)) {
					this.OnPropertyChanging("ИдентификаторДокумента", this._идентификаторДокумента);
					this._идентификаторДокумента = value;
					this.OnPropertyChanged("ИдентификаторДокумента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x043a__x0440__x044b__x0442__x0438__x0435__x043f_", Storage="_скрытиеПаспортаОбъекта", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> СкрытиеПаспортаОбъекта {
			get {
				return this._скрытиеПаспортаОбъекта;
			}
			set {
				if ((value != this._скрытиеПаспортаОбъекта)) {
					this.OnPropertyChanging("СкрытиеПаспортаОбъекта", this._скрытиеПаспортаОбъекта);
					this._скрытиеПаспортаОбъекта = value;
					this.OnPropertyChanged("СкрытиеПаспортаОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLinkFromDS", Storage="_ссылкаНаВопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки СсылкаНаВопрос {
			get {
				return this._ссылкаНаВопрос.GetEntity();
			}
			set {
				this._ссылкаНаВопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLinkFromDS", Storage="_ссылкаНаЗаседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Заседания")]
		public АКЗаседанияЗаседание СсылкаНаЗаседание {
			get {
				return this._ссылкаНаЗаседание.GetEntity();
			}
			set {
				this._ссылкаНаЗаседание.SetEntity(value);
			}
		}
		
		private void OnСсылкаНаВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаВопрос", this._ссылкаНаВопрос.Clone());
		}
		
		private void OnСсылкаНаВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаВопрос");
		}
		
		private void OnСсылкаНаВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВложенияВопросаЗаседанияДокумент.Add(this);
			}
			else {
				e.Item.АКВложенияВопросаЗаседанияДокумент.Remove(this);
			}
		}
		
		private void OnСсылкаНаЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаЗаседание", this._ссылкаНаЗаседание.Clone());
		}
		
		private void OnСсылкаНаЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаЗаседание");
		}
		
		private void OnСсылкаНаЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВложенияВопросаЗаседанияДокумент.Add(this);
			}
			else {
				e.Item.АКВложенияВопросаЗаседанияДокумент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Отслеживание поручения, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Задача", Id="0x0108", List="Задачи")]
	public partial class ЗадачиЗадача : Задача {
		
		private Microsoft.SharePoint.Linq.EntitySet<Элемент> _предшественники;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗадачиЗадача() {
			this._предшественники = new Microsoft.SharePoint.Linq.EntitySet<Элемент>();
			this._предшественники.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПредшественникиSync);
			this._предшественники.OnChanged += new System.EventHandler(this.OnПредшественникиChanged);
			this._предшественники.OnChanging += new System.EventHandler(this.OnПредшественникиChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_срок", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_состояниеЗадачи", FieldType="Choice")]
		public override System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_предшественники", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Задачи")]
		public Microsoft.SharePoint.Linq.EntitySet<Элемент> Предшественники {
			get {
				return this._предшественники;
			}
			set {
				this._предшественники.Assign(value);
			}
		}
		
		private void OnПредшественникиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Предшественники", this._предшественники.Clone());
		}
		
		private void OnПредшественникиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Предшественники");
		}
		
		private void OnПредшественникиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Отслеживание поручения, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Задача", Id="0x0108", List="Задачи рабочего процесса")]
	public partial class ЗадачиРабочегоПроцессаЗадача : Задача {
		
		private Microsoft.SharePoint.Linq.EntitySet<Элемент> _предшественники;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗадачиРабочегоПроцессаЗадача() {
			this._предшественники = new Microsoft.SharePoint.Linq.EntitySet<Элемент>();
			this._предшественники.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПредшественникиSync);
			this._предшественники.OnChanged += new System.EventHandler(this.OnПредшественникиChanged);
			this._предшественники.OnChanging += new System.EventHandler(this.OnПредшественникиChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_срок", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_состояниеЗадачи", FieldType="Choice")]
		public override System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_предшественники", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Задачи рабочего процесса")]
		public Microsoft.SharePoint.Linq.EntitySet<Элемент> Предшественники {
			get {
				return this._предшественники;
			}
			set {
				this._предшественники.Assign(value);
			}
		}
		
		private void OnПредшественникиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Предшественники", this._предшественники.Clone());
		}
		
		private void OnПредшественникиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Предшественники");
		}
		
		private void OnПредшественникиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Отправка актива.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Мультимедийный актив", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Изображение))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Аудио))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ВоспроизведениеВидео))]
	public partial class МультимедийныйАктив : Документ {
		
		private string _образец;
		
		private string _ключевыеСлова;
		
		private string _просмотрЭскизов;
		
		private System.Nullable<int> _ширинаРисунка;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public МультимедийныйАктив() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_образец", FieldType="Computed")]
		public string Образец {
			get {
				return this._образец;
			}
			set {
				if ((value != this._образец)) {
					this.OnPropertyChanging("Образец", this._образец);
					this._образец = value;
					this.OnPropertyChanged("Образец");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_ключевыеСлова", FieldType="Note")]
		public string КлючевыеСлова {
			get {
				return this._ключевыеСлова;
			}
			set {
				if ((value != this._ключевыеСлова)) {
					this.OnPropertyChanging("КлючевыеСлова", this._ключевыеСлова);
					this._ключевыеСлова = value;
					this.OnPropertyChanged("КлючевыеСлова");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ThumbnailOnForm", Storage="_просмотрЭскизов", FieldType="Computed")]
		public string ПросмотрЭскизов {
			get {
				return this._просмотрЭскизов;
			}
			set {
				if ((value != this._просмотрЭскизов)) {
					this.OnPropertyChanging("ПросмотрЭскизов", this._просмотрЭскизов);
					this._просмотрЭскизов = value;
					this.OnPropertyChanged("ПросмотрЭскизов");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_ширинаРисунка", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> ШиринаРисунка {
			get {
				return this._ширинаРисунка;
			}
			set {
				if ((value != this._ширинаРисунка)) {
					this.OnPropertyChanging("ШиринаРисунка", this._ширинаРисунка);
					this._ширинаРисунка = value;
					this.OnPropertyChanged("ШиринаРисунка");
				}
			}
		}
	}
	
	/// <summary>
	/// Только для внутреннего использования
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Base", Id="0x01", List="Микроканал")]
	public partial class МикроканалBase : Элемент {
		
		private System.Nullable<int> _microBlogType;
		
		private string _postAuthor;
		
		private System.Nullable<int> _definitionId;
		
		private System.Nullable<int> _rootPostID;
		
		private string _rootPostUniqueID;
		
		private System.Nullable<int> _attributes;
		
		private string _content;
		
		private string _contentData;
		
		private string _searchContent;
		
		private string _postSource;
		
		private System.Nullable<int> _peopleCount;
		
		private string _peopleList;
		
		private string _postSourceUri;
		
		private System.Nullable<int> _mediaLinkType;
		
		private string _mediaLinkDescription;
		
		private string _mediaLinkURI;
		
		private string _mediaLinkUISnippet;
		
		private string _mediaLinkContentURI;
		
		private System.Nullable<int> _mediaLength;
		
		private System.Nullable<int> _mediaWidth;
		
		private System.Nullable<int> _mediaHeight;
		
		private string _mediaActionClickUrl;
		
		private System.Nullable<int> _mediaActionClickKind;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public МикроканалBase() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MicroBlogType", Storage="_microBlogType", FieldType="Integer")]
		public System.Nullable<int> MicroBlogType {
			get {
				return this._microBlogType;
			}
			set {
				if ((value != this._microBlogType)) {
					this.OnPropertyChanging("MicroBlogType", this._microBlogType);
					this._microBlogType = value;
					this.OnPropertyChanged("MicroBlogType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostAuthor", Storage="_postAuthor", FieldType="Text")]
		public string PostAuthor {
			get {
				return this._postAuthor;
			}
			set {
				if ((value != this._postAuthor)) {
					this.OnPropertyChanging("PostAuthor", this._postAuthor);
					this._postAuthor = value;
					this.OnPropertyChanged("PostAuthor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DefinitionId", Storage="_definitionId", FieldType="Integer")]
		public System.Nullable<int> DefinitionId {
			get {
				return this._definitionId;
			}
			set {
				if ((value != this._definitionId)) {
					this.OnPropertyChanging("DefinitionId", this._definitionId);
					this._definitionId = value;
					this.OnPropertyChanged("DefinitionId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RootPostID", Storage="_rootPostID", FieldType="Integer")]
		public System.Nullable<int> RootPostID {
			get {
				return this._rootPostID;
			}
			set {
				if ((value != this._rootPostID)) {
					this.OnPropertyChanging("RootPostID", this._rootPostID);
					this._rootPostID = value;
					this.OnPropertyChanged("RootPostID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RootPostUniqueID", Storage="_rootPostUniqueID", FieldType="Text")]
		public string RootPostUniqueID {
			get {
				return this._rootPostUniqueID;
			}
			set {
				if ((value != this._rootPostUniqueID)) {
					this.OnPropertyChanging("RootPostUniqueID", this._rootPostUniqueID);
					this._rootPostUniqueID = value;
					this.OnPropertyChanged("RootPostUniqueID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Attributes", Storage="_attributes", FieldType="Integer")]
		public System.Nullable<int> Attributes {
			get {
				return this._attributes;
			}
			set {
				if ((value != this._attributes)) {
					this.OnPropertyChanging("Attributes", this._attributes);
					this._attributes = value;
					this.OnPropertyChanged("Attributes");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_content", FieldType="Note")]
		public string Content {
			get {
				return this._content;
			}
			set {
				if ((value != this._content)) {
					this.OnPropertyChanging("Content", this._content);
					this._content = value;
					this.OnPropertyChanged("Content");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentData", Storage="_contentData", FieldType="Note")]
		public string ContentData {
			get {
				return this._contentData;
			}
			set {
				if ((value != this._contentData)) {
					this.OnPropertyChanging("ContentData", this._contentData);
					this._contentData = value;
					this.OnPropertyChanged("ContentData");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SearchContent", Storage="_searchContent", FieldType="Note")]
		public string SearchContent {
			get {
				return this._searchContent;
			}
			set {
				if ((value != this._searchContent)) {
					this.OnPropertyChanging("SearchContent", this._searchContent);
					this._searchContent = value;
					this.OnPropertyChanged("SearchContent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostSource", Storage="_postSource", FieldType="Text")]
		public string PostSource {
			get {
				return this._postSource;
			}
			set {
				if ((value != this._postSource)) {
					this.OnPropertyChanging("PostSource", this._postSource);
					this._postSource = value;
					this.OnPropertyChanged("PostSource");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleCount", Storage="_peopleCount", FieldType="Integer")]
		public System.Nullable<int> PeopleCount {
			get {
				return this._peopleCount;
			}
			set {
				if ((value != this._peopleCount)) {
					this.OnPropertyChanging("PeopleCount", this._peopleCount);
					this._peopleCount = value;
					this.OnPropertyChanged("PeopleCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleList", Storage="_peopleList", FieldType="Note")]
		public string PeopleList {
			get {
				return this._peopleList;
			}
			set {
				if ((value != this._peopleList)) {
					this.OnPropertyChanging("PeopleList", this._peopleList);
					this._peopleList = value;
					this.OnPropertyChanged("PeopleList");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostSourceUri", Storage="_postSourceUri", FieldType="Note")]
		public string PostSourceUri {
			get {
				return this._postSourceUri;
			}
			set {
				if ((value != this._postSourceUri)) {
					this.OnPropertyChanging("PostSourceUri", this._postSourceUri);
					this._postSourceUri = value;
					this.OnPropertyChanged("PostSourceUri");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkType", Storage="_mediaLinkType", FieldType="Integer")]
		public System.Nullable<int> MediaLinkType {
			get {
				return this._mediaLinkType;
			}
			set {
				if ((value != this._mediaLinkType)) {
					this.OnPropertyChanging("MediaLinkType", this._mediaLinkType);
					this._mediaLinkType = value;
					this.OnPropertyChanged("MediaLinkType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkDescription", Storage="_mediaLinkDescription", FieldType="Text")]
		public string MediaLinkDescription {
			get {
				return this._mediaLinkDescription;
			}
			set {
				if ((value != this._mediaLinkDescription)) {
					this.OnPropertyChanging("MediaLinkDescription", this._mediaLinkDescription);
					this._mediaLinkDescription = value;
					this.OnPropertyChanged("MediaLinkDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkURI", Storage="_mediaLinkURI", FieldType="Url")]
		public string MediaLinkURI {
			get {
				return this._mediaLinkURI;
			}
			set {
				if ((value != this._mediaLinkURI)) {
					this.OnPropertyChanging("MediaLinkURI", this._mediaLinkURI);
					this._mediaLinkURI = value;
					this.OnPropertyChanged("MediaLinkURI");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkUISnippet", Storage="_mediaLinkUISnippet", FieldType="Url")]
		public string MediaLinkUISnippet {
			get {
				return this._mediaLinkUISnippet;
			}
			set {
				if ((value != this._mediaLinkUISnippet)) {
					this.OnPropertyChanging("MediaLinkUISnippet", this._mediaLinkUISnippet);
					this._mediaLinkUISnippet = value;
					this.OnPropertyChanged("MediaLinkUISnippet");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkContentURI", Storage="_mediaLinkContentURI", FieldType="Url")]
		public string MediaLinkContentURI {
			get {
				return this._mediaLinkContentURI;
			}
			set {
				if ((value != this._mediaLinkContentURI)) {
					this.OnPropertyChanging("MediaLinkContentURI", this._mediaLinkContentURI);
					this._mediaLinkContentURI = value;
					this.OnPropertyChanged("MediaLinkContentURI");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLength", Storage="_mediaLength", FieldType="Integer")]
		public System.Nullable<int> MediaLength {
			get {
				return this._mediaLength;
			}
			set {
				if ((value != this._mediaLength)) {
					this.OnPropertyChanging("MediaLength", this._mediaLength);
					this._mediaLength = value;
					this.OnPropertyChanged("MediaLength");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaWidth", Storage="_mediaWidth", FieldType="Integer")]
		public System.Nullable<int> MediaWidth {
			get {
				return this._mediaWidth;
			}
			set {
				if ((value != this._mediaWidth)) {
					this.OnPropertyChanging("MediaWidth", this._mediaWidth);
					this._mediaWidth = value;
					this.OnPropertyChanged("MediaWidth");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaHeight", Storage="_mediaHeight", FieldType="Integer")]
		public System.Nullable<int> MediaHeight {
			get {
				return this._mediaHeight;
			}
			set {
				if ((value != this._mediaHeight)) {
					this.OnPropertyChanging("MediaHeight", this._mediaHeight);
					this._mediaHeight = value;
					this.OnPropertyChanged("MediaHeight");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaActionClickUrl", Storage="_mediaActionClickUrl", FieldType="Url")]
		public string MediaActionClickUrl {
			get {
				return this._mediaActionClickUrl;
			}
			set {
				if ((value != this._mediaActionClickUrl)) {
					this.OnPropertyChanging("MediaActionClickUrl", this._mediaActionClickUrl);
					this._mediaActionClickUrl = value;
					this.OnPropertyChanged("MediaActionClickUrl");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaActionClickKind", Storage="_mediaActionClickKind", FieldType="Integer")]
		public System.Nullable<int> MediaActionClickKind {
			get {
				return this._mediaActionClickKind;
			}
			set {
				if ((value != this._mediaActionClickKind)) {
					this.OnPropertyChanging("MediaActionClickKind", this._mediaActionClickKind);
					this._mediaActionClickKind = value;
					this.OnPropertyChanged("MediaActionClickKind");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Base.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Base.");
			}
		}
	}
	
	/// <summary>
	/// "Системная страница" - это системный шаблон типа контента, созданный средством "Ресурсы публикации" и недоступный для изменения. Чтобы добавить столбцы в библиотеку страниц, обновите этот шаблон.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Системная страница", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Страница))]
	public partial class СистемнаяСтраница : Документ {
		
		private string _заметки;
		
		private string _адресЭлектроннойПочтыКонтакта;
		
		private string _имяКонтакта;
		
		private string _картинкаКонтакта;
		
		private string _макетСтраницы;
		
		private System.Nullable<bool> _скрыватьФизическийURLАдресВРезультатахПоиска;
		
		private System.Nullable<int> _контактId;
		
		private string _контакт;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СистемнаяСтраница() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		/// <summary>
		/// "Адрес эл. почты контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания адреса электронной почты контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactEmail", Storage="_адресЭлектроннойПочтыКонтакта", FieldType="Text")]
		public string АдресЭлектроннойПочтыКонтакта {
			get {
				return this._адресЭлектроннойПочтыКонтакта;
			}
			set {
				if ((value != this._адресЭлектроннойПочтыКонтакта)) {
					this.OnPropertyChanging("АдресЭлектроннойПочтыКонтакта", this._адресЭлектроннойПочтыКонтакта);
					this._адресЭлектроннойПочтыКонтакта = value;
					this.OnPropertyChanged("АдресЭлектроннойПочтыКонтакта");
				}
			}
		}
		
		/// <summary>
		/// "Имя контактного лица" — это столбец сайта, созданный средством публикации. Он используется в типа контента страницы для указания имени контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactName", Storage="_имяКонтакта", FieldType="Text")]
		public string ИмяКонтакта {
			get {
				return this._имяКонтакта;
			}
			set {
				if ((value != this._имяКонтакта)) {
					this.OnPropertyChanging("ИмяКонтакта", this._имяКонтакта);
					this._имяКонтакта = value;
					this.OnPropertyChanged("ИмяКонтакта");
				}
			}
		}
		
		/// <summary>
		/// "Картинка контакта" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для размещения картинки контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactPicture", Storage="_картинкаКонтакта", FieldType="Url")]
		public string КартинкаКонтакта {
			get {
				return this._картинкаКонтакта;
			}
			set {
				if ((value != this._картинкаКонтакта)) {
					this.OnPropertyChanging("КартинкаКонтакта", this._картинкаКонтакта);
					this._картинкаКонтакта = value;
					this.OnPropertyChanged("КартинкаКонтакта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingPageLayout", Storage="_макетСтраницы", ReadOnly=true, FieldType="Url")]
		public string МакетСтраницы {
			get {
				return this._макетСтраницы;
			}
			set {
				if ((value != this._макетСтраницы)) {
					this.OnPropertyChanging("МакетСтраницы", this._макетСтраницы);
					this._макетСтраницы = value;
					this.OnPropertyChanged("МакетСтраницы");
				}
			}
		}
		
		/// <summary>
		/// Если этот флажок установлен, физический URL-адрес этой страницы не отображается в результатах поиска. Полнотекстовый URL-адрес, назначенный этой странице, отображается всегда.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingIsFurlPage", Storage="_скрыватьФизическийURLАдресВРезультатахПоиска", FieldType="Boolean")]
		public System.Nullable<bool> СкрыватьФизическийURLАдресВРезультатахПоиска {
			get {
				return this._скрыватьФизическийURLАдресВРезультатахПоиска;
			}
			set {
				if ((value != this._скрыватьФизическийURLАдресВРезультатахПоиска)) {
					this.OnPropertyChanging("СкрыватьФизическийURLАдресВРезультатахПоиска", this._скрыватьФизическийURLАдресВРезультатахПоиска);
					this._скрыватьФизическийURLАдресВРезультатахПоиска = value;
					this.OnPropertyChanged("СкрыватьФизическийURLАдресВРезультатахПоиска");
				}
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_контактId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> КонтактId {
			get {
				return this._контактId;
			}
			set {
				if ((value != this._контактId)) {
					this.OnPropertyChanging("КонтактId", this._контактId);
					this._контактId = value;
					this.OnPropertyChanged("КонтактId");
				}
			}
		}
		
		/// <summary>
		/// "Контакт" — это столбец сайта, созданный средством публикации. Он используется в типе контента страницы для указания контактного лица или группы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_контакт", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Контакт {
			get {
				return this._контакт;
			}
			set {
				if ((value != this._контакт)) {
					this.OnPropertyChanging("Контакт", this._контакт);
					this._контакт = value;
					this.OnPropertyChanged("Контакт");
				}
			}
		}
	}
	
	/// <summary>
	/// Группировка и описание связанных задач, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Сводная задача", Id="0x012004", List="Задачи")]
	public partial class ЗадачиСводнаяЗадача : СводнаяЗадача {
		
		private Microsoft.SharePoint.Linq.EntitySet<Элемент> _предшественники;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗадачиСводнаяЗадача() {
			this._предшественники = new Microsoft.SharePoint.Linq.EntitySet<Элемент>();
			this._предшественники.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПредшественникиSync);
			this._предшественники.OnChanged += new System.EventHandler(this.OnПредшественникиChanged);
			this._предшественники.OnChanging += new System.EventHandler(this.OnПредшественникиChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_срок", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_состояниеЗадачи", FieldType="Choice")]
		public override System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_предшественники", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Задачи")]
		public Microsoft.SharePoint.Linq.EntitySet<Элемент> Предшественники {
			get {
				return this._предшественники;
			}
			set {
				this._предшественники.Assign(value);
			}
		}
		
		private void OnПредшественникиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Предшественники", this._предшественники.Clone());
		}
		
		private void OnПредшественникиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Предшественники");
		}
		
		private void OnПредшественникиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Группировка и описание связанных задач, которое должен выполнить пользователь или рабочая группа.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Сводная задача", Id="0x012004", List="Задачи рабочего процесса")]
	public partial class ЗадачиРабочегоПроцессаСводнаяЗадача : СводнаяЗадача {
		
		private Microsoft.SharePoint.Linq.EntitySet<Элемент> _предшественники;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗадачиРабочегоПроцессаСводнаяЗадача() {
			this._предшественники = new Microsoft.SharePoint.Linq.EntitySet<Элемент>();
			this._предшественники.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПредшественникиSync);
			this._предшественники.OnChanged += new System.EventHandler(this.OnПредшественникиChanged);
			this._предшественники.OnChanging += new System.EventHandler(this.OnПредшественникиChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_срок", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> Срок {
			get {
				return this._срок;
			}
			set {
				if ((value != this._срок)) {
					this.OnPropertyChanging("Срок", this._срок);
					this._срок = value;
					this.OnPropertyChanged("Срок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_состояниеЗадачи", FieldType="Choice")]
		public override System.Nullable<СостояниеЗадачи> СостояниеЗадачи {
			get {
				return this._состояниеЗадачи;
			}
			set {
				if ((value != this._состояниеЗадачи)) {
					this.OnPropertyChanging("СостояниеЗадачи", this._состояниеЗадачи);
					this._состояниеЗадачи = value;
					this.OnPropertyChanged("СостояниеЗадачи");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_предшественники", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Задачи рабочего процесса")]
		public Microsoft.SharePoint.Linq.EntitySet<Элемент> Предшественники {
			get {
				return this._предшественники;
			}
			set {
				this._предшественники.Assign(value);
			}
		}
		
		private void OnПредшественникиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Предшественники", this._предшественники.Clone());
		}
		
		private void OnПредшественникиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Предшественники");
		}
		
		private void OnПредшественникиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Отправка изображения или фотографии.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Рисунок", Id="0x010102", List="Новости")]
	public partial class НовостиРисунок : Рисунок {
		
		private string _uRLАдрес;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public НовостиРисунок() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_заметки", FieldType="Note")]
		public override string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRLАдрес", FieldType="Url")]
		public string URLАдрес {
			get {
				return this._uRLАдрес;
			}
			set {
				if ((value != this._uRLАдрес)) {
					this.OnPropertyChanging("URLАдрес", this._uRLАдрес);
					this._uRLАдрес = value;
					this.OnPropertyChanged("URLАдрес");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдресИзображенияДляПросмотра {
			get {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Рисунок.");
			}
			set {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Рисунок.");
			}
		}
	}
	
	/// <summary>
	/// Отправка изображения или фотографии.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Рисунок", Id="0x010102", List="Фотогалерея хода строительства объекта")]
	public partial class ФотогалереяХодаСтроительстваОбъектаРисунок : Рисунок {
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _ссылкаНаОбъект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ФотогалереяХодаСтроительстваОбъектаРисунок() {
			this._ссылкаНаОбъект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._ссылкаНаОбъект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnСсылкаНаОбъектSync);
			this._ссылкаНаОбъект.OnChanged += new System.EventHandler(this.OnСсылкаНаОбъектChanged);
			this._ссылкаНаОбъект.OnChanging += new System.EventHandler(this.OnСсылкаНаОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_заметки", FieldType="Note")]
		public override string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string URLАдресИзображенияДляПросмотра {
			get {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Рисунок.");
			}
			set {
				throw new System.InvalidOperationException("Field AlternateThumbnailUrl was removed from content type Рисунок.");
			}
		}
		
		/// <summary>
		/// Ссылка на объект строительства
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ObjectLink", Storage="_ссылкаНаОбъект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент СсылкаНаОбъект {
			get {
				return this._ссылкаНаОбъект.GetEntity();
			}
			set {
				this._ссылкаНаОбъект.SetEntity(value);
			}
		}
		
		private void OnСсылкаНаОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаОбъект", this._ссылкаНаОбъект.Clone());
		}
		
		private void OnСсылкаНаОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаОбъект");
		}
		
		private void OnСсылкаНаОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ФотогалереяХодаСтроительстваОбъектаРисунок.Add(this);
			}
			else {
				e.Item.ФотогалереяХодаСтроительстваОбъектаРисунок.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Создайте набор документов, если необходимо управлять несколькими документами как одним продуктом работы.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Набор документов", Id="0x0120D520", List="АК - Вложения вопроса заседания")]
	public partial class АКВложенияВопросаЗаседанияНаборДокументов : НаборДокументов {
		
		private string _значениеИдентификатораДокумента;
		
		private string _идентификаторДокумента;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _ссылкаНаВопрос;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание> _ссылкаНаЗаседание;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКВложенияВопросаЗаседанияНаборДокументов() {
			this._ссылкаНаВопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._ссылкаНаВопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnСсылкаНаВопросSync);
			this._ссылкаНаВопрос.OnChanged += new System.EventHandler(this.OnСсылкаНаВопросChanged);
			this._ссылкаНаВопрос.OnChanging += new System.EventHandler(this.OnСсылкаНаВопросChanging);
			this._ссылкаНаЗаседание = new Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание>();
			this._ссылкаНаЗаседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnСсылкаНаЗаседаниеSync);
			this._ссылкаНаЗаседание.OnChanged += new System.EventHandler(this.OnСсылкаНаЗаседаниеChanged);
			this._ссылкаНаЗаседание.OnChanging += new System.EventHandler(this.OnСсылкаНаЗаседаниеChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Значение идентификатора документа, присвоенного данному элементу.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocId", Storage="_значениеИдентификатораДокумента", ReadOnly=true, FieldType="Text")]
		public string ЗначениеИдентификатораДокумента {
			get {
				return this._значениеИдентификатораДокумента;
			}
			set {
				if ((value != this._значениеИдентификатораДокумента)) {
					this.OnPropertyChanging("ЗначениеИдентификатораДокумента", this._значениеИдентификатораДокумента);
					this._значениеИдентификатораДокумента = value;
					this.OnPropertyChanged("ЗначениеИдентификатораДокумента");
				}
			}
		}
		
		/// <summary>
		/// Постоянная ссылка на этот документ.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocIdUrl", Storage="_идентификаторДокумента", ReadOnly=true, FieldType="Url")]
		public string ИдентификаторДокумента {
			get {
				return this._идентификаторДокумента;
			}
			set {
				if ((value != this._идентификаторДокумента)) {
					this.OnPropertyChanging("ИдентификаторДокумента", this._идентификаторДокумента);
					this._идентификаторДокумента = value;
					this.OnPropertyChanged("ИдентификаторДокумента");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLinkFromDS", Storage="_ссылкаНаВопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки СсылкаНаВопрос {
			get {
				return this._ссылкаНаВопрос.GetEntity();
			}
			set {
				this._ссылкаНаВопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLinkFromDS", Storage="_ссылкаНаЗаседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Заседания")]
		public АКЗаседанияЗаседание СсылкаНаЗаседание {
			get {
				return this._ссылкаНаЗаседание.GetEntity();
			}
			set {
				this._ссылкаНаЗаседание.SetEntity(value);
			}
		}
		
		private void OnСсылкаНаВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаВопрос", this._ссылкаНаВопрос.Clone());
		}
		
		private void OnСсылкаНаВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаВопрос");
		}
		
		private void OnСсылкаНаВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВложенияВопросаЗаседанияНаборДокументов.Add(this);
			}
			else {
				e.Item.АКВложенияВопросаЗаседанияНаборДокументов.Remove(this);
			}
		}
		
		private void OnСсылкаНаЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаЗаседание", this._ссылкаНаЗаседание.Clone());
		}
		
		private void OnСсылкаНаЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаЗаседание");
		}
		
		private void OnСсылкаНаЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВложенияВопросаЗаседанияНаборДокументов.Add(this);
			}
			else {
				e.Item.АКВложенияВопросаЗаседанияНаборДокументов.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IssueAttachmentMVK", Id="0x0120D520000B0FC5BE72384B6E95B4FF3C32334D41")]
	public partial class IssueAttachmentMVK : НаборДокументов {
		
		private Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент> _вопрос;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IssueAttachmentMVK() {
			this._вопрос = new Microsoft.SharePoint.Linq.EntityRef<РГВопросыЗаседанияЭлемент>();
			this._вопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент>>(this.OnВопросSync);
			this._вопрос.OnChanged += new System.EventHandler(this.OnВопросChanged);
			this._вопрос.OnChanging += new System.EventHandler(this.OnВопросChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueAttachmentIssueMVK", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="РГ - Вопросы заседания")]
		public РГВопросыЗаседанияЭлемент Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		private void OnВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Вопрос", this._вопрос.Clone());
		}
		
		private void OnВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Вопрос");
		}
		
		private void OnВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГВопросыЗаседанияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IssueAttachmentMVK.Add(this);
			}
			else {
				e.Item.IssueAttachmentMVK.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Базовые настройки
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BaseConfiguration", Id="0x01", List="ConfigurationList")]
	public partial class ConfigurationListBaseConfiguration : Элемент {
		
		private System.Nullable<int> _текущийНомерЗаседания;
		
		private System.Nullable<int> _группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId;
		
		private string _группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ConfigurationListBaseConfiguration() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CurrentMeetingNumber", Storage="_текущийНомерЗаседания", Required=true, FieldType="Integer")]
		public System.Nullable<int> ТекущийНомерЗаседания {
			get {
				return this._текущийНомерЗаседания;
			}
			set {
				if ((value != this._текущийНомерЗаседания)) {
					this.OnPropertyChanging("ТекущийНомерЗаседания", this._текущийНомерЗаседания);
					this._текущийНомерЗаседания = value;
					this.OnPropertyChanged("ТекущийНомерЗаседания");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type BaseConfiguration.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type BaseConfiguration.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuestionCommentGroup", Storage="_группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId {
			get {
				return this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId;
			}
			set {
				if ((value != this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId)) {
					this.OnPropertyChanging("ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId", this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId);
					this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId = value;
					this.OnPropertyChanged("ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuestionCommentGroup", Storage="_группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName {
			get {
				return this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName;
			}
			set {
				if ((value != this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName)) {
					this.OnPropertyChanging("ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName", this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName);
					this._группаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName = value;
					this.OnPropertyChanged("ГруппаДляЗаданияТипаРешенийИКомментарияУВопросаПовесткиImnName");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ListFieldsContentType", Id="0x01", List="Report2")]
	public partial class Report2ListFieldsContentType : Элемент {
		
		private string _количество;
		
		private System.Nullable<double> _значениеПоказателя;
		
		private System.Nullable<double> _индексСортировки;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _ссылкаНаКатегориюВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _ссылкаНаПоказатель;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Report2ListFieldsContentType() {
			this._ссылкаНаКатегориюВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._ссылкаНаКатегориюВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnСсылкаНаКатегориюВопросаSync);
			this._ссылкаНаКатегориюВопроса.OnChanged += new System.EventHandler(this.OnСсылкаНаКатегориюВопросаChanged);
			this._ссылкаНаКатегориюВопроса.OnChanging += new System.EventHandler(this.OnСсылкаНаКатегориюВопросаChanging);
			this._ссылкаНаПоказатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._ссылкаНаПоказатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnСсылкаНаПоказательSync);
			this._ссылкаНаПоказатель.OnChanged += new System.EventHandler(this.OnСсылкаНаПоказательChanged);
			this._ссылкаНаПоказатель.OnChanging += new System.EventHandler(this.OnСсылкаНаПоказательChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountValue", Storage="_количество", FieldType="Text")]
		public string Количество {
			get {
				return this._количество;
			}
			set {
				if ((value != this._количество)) {
					this.OnPropertyChanging("Количество", this._количество);
					this._количество = value;
					this.OnPropertyChanged("Количество");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarkSumValue", Storage="_значениеПоказателя", FieldType="Number")]
		public System.Nullable<double> ЗначениеПоказателя {
			get {
				return this._значениеПоказателя;
			}
			set {
				if ((value != this._значениеПоказателя)) {
					this.OnPropertyChanging("ЗначениеПоказателя", this._значениеПоказателя);
					this._значениеПоказателя = value;
					this.OnPropertyChanged("ЗначениеПоказателя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SortIndex", Storage="_индексСортировки", FieldType="Number")]
		public System.Nullable<double> ИндексСортировки {
			get {
				return this._индексСортировки;
			}
			set {
				if ((value != this._индексСортировки)) {
					this.OnPropertyChanging("ИндексСортировки", this._индексСортировки);
					this._индексСортировки = value;
					this.OnPropertyChanged("ИндексСортировки");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type ListFieldsContentType.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type ListFieldsContentType.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionCategoryLink", Storage="_ссылкаНаКатегориюВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса СсылкаНаКатегориюВопроса {
			get {
				return this._ссылкаНаКатегориюВопроса.GetEntity();
			}
			set {
				this._ссылкаНаКатегориюВопроса.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MarkLink", Storage="_ссылкаНаПоказатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public Элемент СсылкаНаПоказатель {
			get {
				return this._ссылкаНаПоказатель.GetEntity();
			}
			set {
				this._ссылкаНаПоказатель.SetEntity(value);
			}
		}
		
		private void OnСсылкаНаКатегориюВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаКатегориюВопроса", this._ссылкаНаКатегориюВопроса.Clone());
		}
		
		private void OnСсылкаНаКатегориюВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаКатегориюВопроса");
		}
		
		private void OnСсылкаНаКатегориюВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
		}
		
		private void OnСсылкаНаПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаПоказатель", this._ссылкаНаПоказатель.Clone());
		}
		
		private void OnСсылкаНаПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаПоказатель");
		}
		
		private void OnСсылкаНаПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Вложение заседания", Id="0x01", List="АК - Вложения заседания")]
	public partial class АКВложенияЗаседанияВложениеЗаседания : Элемент {
		
		private string _описаниеВложения;
		
		private System.Nullable<bool> _сканКопияПротокола;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание> _заседание;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКВложенияЗаседанияВложениеЗаседания() {
			this._заседание = new Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание>();
			this._заседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnЗаседаниеSync);
			this._заседание.OnChanged += new System.EventHandler(this.OnЗаседаниеChanged);
			this._заседание.OnChanging += new System.EventHandler(this.OnЗаседаниеChanging);
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AttachmentDescription", Storage="_описаниеВложения", FieldType="Note")]
		public string ОписаниеВложения {
			get {
				return this._описаниеВложения;
			}
			set {
				if ((value != this._описаниеВложения)) {
					this.OnPropertyChanging("ОписаниеВложения", this._описаниеВложения);
					this._описаниеВложения = value;
					this.OnPropertyChanged("ОписаниеВложения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AttachmentProtocolScanCopy", Storage="_сканКопияПротокола", FieldType="Boolean")]
		public System.Nullable<bool> СканКопияПротокола {
			get {
				return this._сканКопияПротокола;
			}
			set {
				if ((value != this._сканКопияПротокола)) {
					this.OnPropertyChanging("СканКопияПротокола", this._сканКопияПротокола);
					this._сканКопияПротокола = value;
					this.OnPropertyChanged("СканКопияПротокола");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Вложение заседания.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Вложение заседания.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLink", Storage="_заседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Заседания")]
		public АКЗаседанияЗаседание Заседание {
			get {
				return this._заседание.GetEntity();
			}
			set {
				this._заседание.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AttachmentDocumentTypeLink", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов вложений")]
		public Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		private void OnЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание", this._заседание.Clone());
		}
		
		private void OnЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание");
		}
		
		private void OnЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Вложение отчета по поручению", Id="0x01", List="АК - Вложения отчета по поручению")]
	public partial class АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению : Элемент {
		
		private string _описаниеВложения;
		
		private System.Nullable<bool> _вложениеОтчета;
		
		private System.Nullable<int> _вычислениеПолейВложенияОтчета;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКОтчетыПоПоручениюОтчетПоПоручению> _отчетПоПоручению;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _типДокумента;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению() {
			this._отчетПоПоручению = new Microsoft.SharePoint.Linq.EntityRef<АКОтчетыПоПоручениюОтчетПоПоручению>();
			this._отчетПоПоручению.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКОтчетыПоПоручениюОтчетПоПоручению>>(this.OnОтчетПоПоручениюSync);
			this._отчетПоПоручению.OnChanged += new System.EventHandler(this.OnОтчетПоПоручениюChanged);
			this._отчетПоПоручению.OnChanging += new System.EventHandler(this.OnОтчетПоПоручениюChanging);
			this._типДокумента = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._типДокумента.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипДокументаSync);
			this._типДокумента.OnChanged += new System.EventHandler(this.OnТипДокументаChanged);
			this._типДокумента.OnChanging += new System.EventHandler(this.OnТипДокументаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AttachmentDescription", Storage="_описаниеВложения", FieldType="Note")]
		public string ОписаниеВложения {
			get {
				return this._описаниеВложения;
			}
			set {
				if ((value != this._описаниеВложения)) {
					this.OnPropertyChanging("ОписаниеВложения", this._описаниеВложения);
					this._описаниеВложения = value;
					this.OnPropertyChanged("ОписаниеВложения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AttachmentIsForReport", Storage="_вложениеОтчета", FieldType="Boolean")]
		public System.Nullable<bool> ВложениеОтчета {
			get {
				return this._вложениеОтчета;
			}
			set {
				if ((value != this._вложениеОтчета)) {
					this.OnPropertyChanging("ВложениеОтчета", this._вложениеОтчета);
					this._вложениеОтчета = value;
					this.OnPropertyChanged("ВложениеОтчета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0412__x044b__x0447__x0438__x04", Storage="_вычислениеПолейВложенияОтчета", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ВычислениеПолейВложенияОтчета {
			get {
				return this._вычислениеПолейВложенияОтчета;
			}
			set {
				if ((value != this._вычислениеПолейВложенияОтчета)) {
					this.OnPropertyChanging("ВычислениеПолейВложенияОтчета", this._вычислениеПолейВложенияОтчета);
					this._вычислениеПолейВложенияОтчета = value;
					this.OnPropertyChanged("ВычислениеПолейВложенияОтчета");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Вложение отчета по поручению.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Вложение отчета по поручению.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentReportLink", Storage="_отчетПоПоручению", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Отчеты по поручению")]
		public АКОтчетыПоПоручениюОтчетПоПоручению ОтчетПоПоручению {
			get {
				return this._отчетПоПоручению.GetEntity();
			}
			set {
				this._отчетПоПоручению.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AttachmentDocumentTypeLink", Storage="_типДокумента", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы документов вложений")]
		public Элемент ТипДокумента {
			get {
				return this._типДокумента.GetEntity();
			}
			set {
				this._типДокумента.SetEntity(value);
			}
		}
		
		private void OnОтчетПоПоручениюChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОтчетПоПоручению", this._отчетПоПоручению.Clone());
		}
		
		private void OnОтчетПоПоручениюChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОтчетПоПоручению");
		}
		
		private void OnОтчетПоПоручениюSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКОтчетыПоПоручениюОтчетПоПоручению> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.Add(this);
			}
			else {
				e.Item.АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.Remove(this);
			}
		}
		
		private void OnТипДокументаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипДокумента", this._типДокумента.Clone());
		}
		
		private void OnТипДокументаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипДокумента");
		}
		
		private void OnТипДокументаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Тип контента для вопроса повестки заседания
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Вопрос повестки", Id="0x01", List="АК - Вопросы заседания")]
	public partial class АКВопросыЗаседанияВопросПовестки : Элемент {
		
		private System.Nullable<double> _номерВопроса;
		
		private string _темаВопроса;
		
		private string _описаниеВопросаПовестки;
		
		private string _внешниеИсточники;
		
		private string _наименованиеОбъекта;
		
		private string _основание;
		
		private System.Nullable<System.DateTime> _датаРассмотрения;
		
		private string _типПроекта;
		
		private string _адрес;
		
		private string _инвестор;
		
		private string _решение;
		
		private System.Nullable<bool> _рассмотрен;
		
		
		private string _кадастровыйНомер;
		
		private string _дляОтображенияВПоручении;
		
		private string _инфо;
		
		private Microsoft.SharePoint.Linq.EntitySet<ПоказателиПоВопросуЭлемент> _показателиПоВопросуЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент> _аКВложенияВопросаЗаседанияДокумент;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов> _аКВложенияВопросаЗаседанияНаборДокументов;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание> _заседание;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _докладчик;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _содокладчики;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки0;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _связанныйВопрос;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private Microsoft.SharePoint.Linq.EntitySet<Элемент> _типОбъекта;
		
		private Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент> _типРешения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _заявительНаКомиссию;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент> _проектировщик;
		
		private Microsoft.SharePoint.Linq.EntitySet<СвязанныеВопросыСвязанныйВопрос> _связанныеВопросыСвязанныйВопрос;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКВопросыЗаседанияВопросПовестки() {
			this._показателиПоВопросуЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ПоказателиПоВопросуЭлемент>();
			this._показателиПоВопросуЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоказателиПоВопросуЭлемент>>(this.OnПоказателиПоВопросуЭлементSync);
			this._показателиПоВопросуЭлемент.OnChanged += new System.EventHandler(this.OnПоказателиПоВопросуЭлементChanged);
			this._показателиПоВопросуЭлемент.OnChanging += new System.EventHandler(this.OnПоказателиПоВопросуЭлементChanging);
			this._аКВложенияВопросаЗаседанияДокумент = new Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент>();
			this._аКВложенияВопросаЗаседанияДокумент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияДокумент>>(this.OnАКВложенияВопросаЗаседанияДокументSync);
			this._аКВложенияВопросаЗаседанияДокумент.OnChanged += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияДокументChanged);
			this._аКВложенияВопросаЗаседанияДокумент.OnChanging += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияДокументChanging);
			this._аКВложенияВопросаЗаседанияНаборДокументов = new Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов>();
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияНаборДокументов>>(this.OnАКВложенияВопросаЗаседанияНаборДокументовSync);
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnChanged += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияНаборДокументовChanged);
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnChanging += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияНаборДокументовChanging);
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this._заседание = new Microsoft.SharePoint.Linq.EntityRef<АКЗаседанияЗаседание>();
			this._заседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnЗаседаниеSync);
			this._заседание.OnChanged += new System.EventHandler(this.OnЗаседаниеChanged);
			this._заседание.OnChanging += new System.EventHandler(this.OnЗаседаниеChanging);
			this._докладчик = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._докладчик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnДокладчикSync);
			this._докладчик.OnChanged += new System.EventHandler(this.OnДокладчикChanged);
			this._докладчик.OnChanging += new System.EventHandler(this.OnДокладчикChanging);
			this._содокладчики = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._содокладчики.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСодокладчикиSync);
			this._содокладчики.OnChanged += new System.EventHandler(this.OnСодокладчикиChanged);
			this._содокладчики.OnChanging += new System.EventHandler(this.OnСодокладчикиChanging);
			this._аКВопросыЗаседанияВопросПовестки0 = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовестки0Sync);
			this._аКВопросыЗаседанияВопросПовестки0.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовестки0Changed);
			this._аКВопросыЗаседанияВопросПовестки0.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовестки0Changing);
			this._связанныйВопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._связанныйВопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnСвязанныйВопросSync);
			this._связанныйВопрос.OnChanged += new System.EventHandler(this.OnСвязанныйВопросChanged);
			this._связанныйВопрос.OnChanging += new System.EventHandler(this.OnСвязанныйВопросChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._типОбъекта = new Microsoft.SharePoint.Linq.EntitySet<Элемент>();
			this._типОбъекта.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnТипОбъектаSync);
			this._типОбъекта.OnChanged += new System.EventHandler(this.OnТипОбъектаChanged);
			this._типОбъекта.OnChanging += new System.EventHandler(this.OnТипОбъектаChanging);
			this._типРешения = new Microsoft.SharePoint.Linq.EntityRef<ВидыРешенияЭлемент>();
			this._типРешения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент>>(this.OnТипРешенияSync);
			this._типРешения.OnChanged += new System.EventHandler(this.OnТипРешенияChanged);
			this._типРешения.OnChanging += new System.EventHandler(this.OnТипРешенияChanging);
			this._заявительНаКомиссию = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._заявительНаКомиссию.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnЗаявительНаКомиссиюSync);
			this._заявительНаКомиссию.OnChanged += new System.EventHandler(this.OnЗаявительНаКомиссиюChanged);
			this._заявительНаКомиссию.OnChanging += new System.EventHandler(this.OnЗаявительНаКомиссиюChanging);
			this._проектировщик = new Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент>();
			this._проектировщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент>>(this.OnПроектировщикSync);
			this._проектировщик.OnChanged += new System.EventHandler(this.OnПроектировщикChanged);
			this._проектировщик.OnChanging += new System.EventHandler(this.OnПроектировщикChanging);
			this._связанныеВопросыСвязанныйВопрос = new Microsoft.SharePoint.Linq.EntitySet<СвязанныеВопросыСвязанныйВопрос>();
			this._связанныеВопросыСвязанныйВопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СвязанныеВопросыСвязанныйВопрос>>(this.OnСвязанныеВопросыСвязанныйВопросSync);
			this._связанныеВопросыСвязанныйВопрос.OnChanged += new System.EventHandler(this.OnСвязанныеВопросыСвязанныйВопросChanged);
			this._связанныеВопросыСвязанныйВопрос.OnChanging += new System.EventHandler(this.OnСвязанныеВопросыСвязанныйВопросChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionNumber", Storage="_номерВопроса", Required=true, FieldType="Number")]
		public System.Nullable<double> НомерВопроса {
			get {
				return this._номерВопроса;
			}
			set {
				if ((value != this._номерВопроса)) {
					this.OnPropertyChanging("НомерВопроса", this._номерВопроса);
					this._номерВопроса = value;
					this.OnPropertyChanged("НомерВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionTheme", Storage="_темаВопроса", Required=true, FieldType="Note")]
		public string ТемаВопроса {
			get {
				return this._темаВопроса;
			}
			set {
				if ((value != this._темаВопроса)) {
					this.OnPropertyChanging("ТемаВопроса", this._темаВопроса);
					this._темаВопроса = value;
					this.OnPropertyChanged("ТемаВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionDescription", Storage="_описаниеВопросаПовестки", FieldType="Note")]
		public string ОписаниеВопросаПовестки {
			get {
				return this._описаниеВопросаПовестки;
			}
			set {
				if ((value != this._описаниеВопросаПовестки)) {
					this.OnPropertyChanging("ОписаниеВопросаПовестки", this._описаниеВопросаПовестки);
					this._описаниеВопросаПовестки = value;
					this.OnPropertyChanged("ОписаниеВопросаПовестки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionExtResources", Storage="_внешниеИсточники", FieldType="Note")]
		public string ВнешниеИсточники {
			get {
				return this._внешниеИсточники;
			}
			set {
				if ((value != this._внешниеИсточники)) {
					this.OnPropertyChanging("ВнешниеИсточники", this._внешниеИсточники);
					this._внешниеИсточники = value;
					this.OnPropertyChanged("ВнешниеИсточники");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionSiteName", Storage="_наименованиеОбъекта", FieldType="Text")]
		public string НаименованиеОбъекта {
			get {
				return this._наименованиеОбъекта;
			}
			set {
				if ((value != this._наименованиеОбъекта)) {
					this.OnPropertyChanging("НаименованиеОбъекта", this._наименованиеОбъекта);
					this._наименованиеОбъекта = value;
					this.OnPropertyChanged("НаименованиеОбъекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionReason", Storage="_основание", FieldType="Note")]
		public string Основание {
			get {
				return this._основание;
			}
			set {
				if ((value != this._основание)) {
					this.OnPropertyChanging("Основание", this._основание);
					this._основание = value;
					this.OnPropertyChanged("Основание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionIncomingDate", Storage="_датаРассмотрения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаРассмотрения {
			get {
				return this._датаРассмотрения;
			}
			set {
				if ((value != this._датаРассмотрения)) {
					this.OnPropertyChanging("ДатаРассмотрения", this._датаРассмотрения);
					this._датаРассмотрения = value;
					this.OnPropertyChanged("ДатаРассмотрения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionProjectType", Storage="_типПроекта", FieldType="Text")]
		public string ТипПроекта {
			get {
				return this._типПроекта;
			}
			set {
				if ((value != this._типПроекта)) {
					this.OnPropertyChanging("ТипПроекта", this._типПроекта);
					this._типПроекта = value;
					this.OnPropertyChanged("ТипПроекта");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionAddress", Storage="_адрес", FieldType="Note")]
		public string Адрес {
			get {
				return this._адрес;
			}
			set {
				if ((value != this._адрес)) {
					this.OnPropertyChanging("Адрес", this._адрес);
					this._адрес = value;
					this.OnPropertyChanged("Адрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionInvestor", Storage="_инвестор", FieldType="Note")]
		public string Инвестор {
			get {
				return this._инвестор;
			}
			set {
				if ((value != this._инвестор)) {
					this.OnPropertyChanging("Инвестор", this._инвестор);
					this._инвестор = value;
					this.OnPropertyChanged("Инвестор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionProtocolDecision", Storage="_решение", FieldType="Note")]
		public string Решение {
			get {
				return this._решение;
			}
			set {
				if ((value != this._решение)) {
					this.OnPropertyChanging("Решение", this._решение);
					this._решение = value;
					this.OnPropertyChanged("Решение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaQuestionIsConsidered", Storage="_рассмотрен", FieldType="Boolean")]
		public System.Nullable<bool> Рассмотрен {
			get {
				return this._рассмотрен;
			}
			set {
				if ((value != this._рассмотрен)) {
					this.OnPropertyChanging("Рассмотрен", this._рассмотрен);
					this._рассмотрен = value;
					this.OnPropertyChanged("Рассмотрен");
				}
			}
		}
		

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CadastreNumber", Storage="_кадастровыйНомер", FieldType="Text")]
		public string КадастровыйНомер {
			get {
				return this._кадастровыйНомер;
			}
			set {
				if ((value != this._кадастровыйНомер)) {
					this.OnPropertyChanging("КадастровыйНомер", this._кадастровыйНомер);
					this._кадастровыйНомер = value;
					this.OnPropertyChanged("КадастровыйНомер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x043b__x044f__x0020__x04", Storage="_дляОтображенияВПоручении", ReadOnly=true, IsCalculated=true, FieldType="Text")]
		public string ДляОтображенияВПоручении {
			get {
				return this._дляОтображенияВПоручении;
			}
			set {
				if ((value != this._дляОтображенияВПоручении)) {
					this.OnPropertyChanging("ДляОтображенияВПоручении", this._дляОтображенияВПоручении);
					this._дляОтображенияВПоручении = value;
					this.OnPropertyChanged("ДляОтображенияВПоручении");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0418__x043d__x0444__x043e_", Storage="_инфо", FieldType="Text")]
		public string Инфо {
			get {
				return this._инфо;
			}
			set {
				if ((value != this._инфо)) {
					this.OnPropertyChanging("Инфо", this._инфо);
					this._инфо = value;
					this.OnPropertyChanged("Инфо");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Вопрос повестки.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Вопрос повестки.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0412__x043e__x043f__x0440__x04", Storage="_показателиПоВопросуЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Показатели по вопросу")]
		public Microsoft.SharePoint.Linq.EntitySet<ПоказателиПоВопросуЭлемент> ПоказателиПоВопросуЭлемент {
			get {
				return this._показателиПоВопросуЭлемент;
			}
			set {
				this._показателиПоВопросуЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLinkFromDS", Storage="_аКВложенияВопросаЗаседанияДокумент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вложения вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент> АКВложенияВопросаЗаседанияДокумент {
			get {
				return this._аКВложенияВопросаЗаседанияДокумент;
			}
			set {
				this._аКВложенияВопросаЗаседанияДокумент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLinkFromDS", Storage="_аКВложенияВопросаЗаседанияНаборДокументов", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вложения вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов> АКВложенияВопросаЗаседанияНаборДокументов {
			get {
				return this._аКВложенияВопросаЗаседанияНаборДокументов;
			}
			set {
				this._аКВложенияВопросаЗаседанияНаборДокументов.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="QuestionCategoryLink", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLink", Storage="_заседание", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Заседания")]
		public АКЗаседанияЗаседание Заседание {
			get {
				return this._заседание.GetEntity();
			}
			set {
				this._заседание.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionReporterFullNameLink", Storage="_докладчик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Докладчик {
			get {
				return this._докладчик.GetEntity();
			}
			set {
				this._докладчик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionSoreporterFullNameLink", Storage="_содокладчики", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> Содокладчики {
			get {
				return this._содокладчики;
			}
			set {
				this._содокладчики.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaLinkedQuestionLink", Storage="_аКВопросыЗаседанияВопросПовестки0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки0 {
			get {
				return this._аКВопросыЗаседанияВопросПовестки0;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaLinkedQuestionLink", Storage="_связанныйВопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки СвязанныйВопрос {
			get {
				return this._связанныйВопрос.GetEntity();
			}
			set {
				this._связанныйВопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041c__x0443__x043d__x0438__x04", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0441__x0435__x04", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0422__x0438__x043f__x0020__x04", Storage="_типОбъекта", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Тип объекта")]
		public Microsoft.SharePoint.Linq.EntitySet<Элемент> ТипОбъекта {
			get {
				return this._типОбъекта;
			}
			set {
				this._типОбъекта.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0422__x0438__x043f__x0020__x040", Storage="_типРешения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Виды решения")]
		public ВидыРешенияЭлемент ТипРешения {
			get {
				return this._типРешения.GetEntity();
			}
			set {
				this._типРешения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionDeclarant", Storage="_заявительНаКомиссию", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация ЗаявительНаКомиссию {
			get {
				return this._заявительНаКомиссию.GetEntity();
			}
			set {
				this._заявительНаКомиссию.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="designer", Storage="_проектировщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Проектная организация")]
		public ПроектнаяОрганизацияЭлемент Проектировщик {
			get {
				return this._проектировщик.GetEntity();
			}
			set {
				this._проектировщик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaLinkedQuestionLink", Storage="_связанныеВопросыСвязанныйВопрос", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Связанные вопросы")]
		public Microsoft.SharePoint.Linq.EntitySet<СвязанныеВопросыСвязанныйВопрос> СвязанныеВопросыСвязанныйВопрос {
			get {
				return this._связанныеВопросыСвязанныйВопрос;
			}
			set {
				this._связанныеВопросыСвязанныйВопрос.Assign(value);
			}
		}
		
		private void OnПоказателиПоВопросуЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ПоказателиПоВопросуЭлемент", this._показателиПоВопросуЭлемент.Clone());
		}
		
		private void OnПоказателиПоВопросуЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ПоказателиПоВопросуЭлемент");
		}
		
		private void OnПоказателиПоВопросуЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоказателиПоВопросуЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Вопрос = this;
			}
			else {
				e.Item.Вопрос = null;
			}
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВложенияВопросаЗаседанияДокумент", this._аКВложенияВопросаЗаседанияДокумент.Clone());
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВложенияВопросаЗаседанияДокумент");
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияДокумент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаВопрос = this;
			}
			else {
				e.Item.СсылкаНаВопрос = null;
			}
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВложенияВопросаЗаседанияНаборДокументов", this._аКВложенияВопросаЗаседанияНаборДокументов.Clone());
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВложенияВопросаЗаседанияНаборДокументов");
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияНаборДокументов> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаВопрос = this;
			}
			else {
				e.Item.СсылкаНаВопрос = null;
			}
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Заседание", this._заседание.Clone());
		}
		
		private void OnЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Заседание");
		}
		
		private void OnЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
		}
		
		private void OnДокладчикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Докладчик", this._докладчик.Clone());
		}
		
		private void OnДокладчикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Докладчик");
		}
		
		private void OnДокладчикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnСодокладчикиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Содокладчики", this._содокладчики.Clone());
		}
		
		private void OnСодокладчикиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Содокладчики");
		}
		
		private void OnСодокладчикиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки0.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки0.Remove(this);
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки0", this._аКВопросыЗаседанияВопросПовестки0.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки0");
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СвязанныйВопрос = this;
			}
			else {
				e.Item.СвязанныйВопрос = null;
			}
		}
		
		private void OnСвязанныйВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СвязанныйВопрос", this._связанныйВопрос.Clone());
		}
		
		private void OnСвязанныйВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СвязанныйВопрос");
		}
		
		private void OnСвязанныйВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки0.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки0.Remove(this);
			}
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnТипОбъектаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипОбъекта", this._типОбъекта.Clone());
		}
		
		private void OnТипОбъектаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипОбъекта");
		}
		
		private void OnТипОбъектаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnТипРешенияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипРешения", this._типРешения.Clone());
		}
		
		private void OnТипРешенияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипРешения");
		}
		
		private void OnТипРешенияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ВидыРешенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnЗаявительНаКомиссиюChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЗаявительНаКомиссию", this._заявительНаКомиссию.Clone());
		}
		
		private void OnЗаявительНаКомиссиюChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЗаявительНаКомиссию");
		}
		
		private void OnЗаявительНаКомиссиюSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnПроектировщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Проектировщик", this._проектировщик.Clone());
		}
		
		private void OnПроектировщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Проектировщик");
		}
		
		private void OnПроектировщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКВопросыЗаседанияВопросПовестки.Add(this);
			}
			else {
				e.Item.АКВопросыЗаседанияВопросПовестки.Remove(this);
			}
		}
		
		private void OnСвязанныеВопросыСвязанныйВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СвязанныеВопросыСвязанныйВопрос", this._связанныеВопросыСвязанныйВопрос.Clone());
		}
		
		private void OnСвязанныеВопросыСвязанныйВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СвязанныеВопросыСвязанныйВопрос");
		}
		
		private void OnСвязанныеВопросыСвязанныйВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СвязанныеВопросыСвязанныйВопрос> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СвязанныйВопрос = this;
			}
			else {
				e.Item.СвязанныйВопрос = null;
			}
		}
	}
	
	/// <summary>
	/// Тип содержимого для заседаний
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Заседание", Id="0x01", List="АК - Заседания")]
	public partial class АКЗаседанияЗаседание : Элемент {
		
		private string _номер;
		
		private string _наименование;
		
		private string _местоПроведения;
		
		private System.Nullable<System.DateTime> _датаПроведения;
		
		private string _остальныеУчастникиЗаседания;
		
		private string _дата;
		
		private System.Nullable<int> _установитьСтатусЗавершено;
		
		private System.Nullable<int> _отправитьУведомлениеВсемПользователям;
		
		private System.Nullable<int> _отправкаУведомленияВсемПользователямОбИзменениях;
		
		private System.Nullable<int> _отправитьУведомлениеПодписаниеПротокола;
		
		private System.Nullable<Статус1> _статус;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент> _аКВложенияВопросаЗаседанияДокумент;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов> _аКВложенияВопросаЗаседанияНаборДокументов;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _ответственныйСекретарь;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _секретарь;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _членыГрадостроительногоСовета;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКЗаседанияЗаседание() {
			this._аКВложенияВопросаЗаседанияДокумент = new Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент>();
			this._аКВложенияВопросаЗаседанияДокумент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияДокумент>>(this.OnАКВложенияВопросаЗаседанияДокументSync);
			this._аКВложенияВопросаЗаседанияДокумент.OnChanged += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияДокументChanged);
			this._аКВложенияВопросаЗаседанияДокумент.OnChanging += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияДокументChanging);
			this._аКВложенияВопросаЗаседанияНаборДокументов = new Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов>();
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияНаборДокументов>>(this.OnАКВложенияВопросаЗаседанияНаборДокументовSync);
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnChanged += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияНаборДокументовChanged);
			this._аКВложенияВопросаЗаседанияНаборДокументов.OnChanging += new System.EventHandler(this.OnАКВложенияВопросаЗаседанияНаборДокументовChanging);
			this._ответственныйСекретарь = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._ответственныйСекретарь.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnОтветственныйСекретарьSync);
			this._ответственныйСекретарь.OnChanged += new System.EventHandler(this.OnОтветственныйСекретарьChanged);
			this._ответственныйСекретарь.OnChanging += new System.EventHandler(this.OnОтветственныйСекретарьChanging);
			this._секретарь = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._секретарь.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСекретарьSync);
			this._секретарь.OnChanged += new System.EventHandler(this.OnСекретарьChanged);
			this._секретарь.OnChanging += new System.EventHandler(this.OnСекретарьChanging);
			this._членыГрадостроительногоСовета = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._членыГрадостроительногоСовета.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnЧленыГрадостроительногоСоветаSync);
			this._членыГрадостроительногоСовета.OnChanged += new System.EventHandler(this.OnЧленыГрадостроительногоСоветаChanged);
			this._членыГрадостроительногоСовета.OnChanging += new System.EventHandler(this.OnЧленыГрадостроительногоСоветаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingNumber", Storage="_номер", Required=true, FieldType="Text")]
		public string Номер {
			get {
				return this._номер;
			}
			set {
				if ((value != this._номер)) {
					this.OnPropertyChanging("Номер", this._номер);
					this._номер = value;
					this.OnPropertyChanged("Номер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingTitle", Storage="_наименование", FieldType="Text")]
		public string Наименование {
			get {
				return this._наименование;
			}
			set {
				if ((value != this._наименование)) {
					this.OnPropertyChanging("Наименование", this._наименование);
					this._наименование = value;
					this.OnPropertyChanged("Наименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingPlace", Storage="_местоПроведения", FieldType="Text")]
		public string МестоПроведения {
			get {
				return this._местоПроведения;
			}
			set {
				if ((value != this._местоПроведения)) {
					this.OnPropertyChanging("МестоПроведения", this._местоПроведения);
					this._местоПроведения = value;
					this.OnPropertyChanged("МестоПроведения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingDate", Storage="_датаПроведения", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПроведения {
			get {
				return this._датаПроведения;
			}
			set {
				if ((value != this._датаПроведения)) {
					this.OnPropertyChanging("ДатаПроведения", this._датаПроведения);
					this._датаПроведения = value;
					this.OnPropertyChanged("ДатаПроведения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OtherParticipantsList", Storage="_остальныеУчастникиЗаседания", FieldType="Note")]
		public string ОстальныеУчастникиЗаседания {
			get {
				return this._остальныеУчастникиЗаседания;
			}
			set {
				if ((value != this._остальныеУчастникиЗаседания)) {
					this.OnPropertyChanging("ОстальныеУчастникиЗаседания", this._остальныеУчастникиЗаседания);
					this._остальныеУчастникиЗаседания = value;
					this.OnPropertyChanged("ОстальныеУчастникиЗаседания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430_", Storage="_дата", FieldType="Text")]
		public string Дата {
			get {
				return this._дата;
			}
			set {
				if ((value != this._дата)) {
					this.OnPropertyChanging("Дата", this._дата);
					this._дата = value;
					this.OnPropertyChanged("Дата");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0423__x0441__x0442__x0430__x04", Storage="_установитьСтатусЗавершено", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> УстановитьСтатусЗавершено {
			get {
				return this._установитьСтатусЗавершено;
			}
			set {
				if ((value != this._установитьСтатусЗавершено)) {
					this.OnPropertyChanging("УстановитьСтатусЗавершено", this._установитьСтатусЗавершено);
					this._установитьСтатусЗавершено = value;
					this.OnPropertyChanged("УстановитьСтатусЗавершено");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0442__x043f__x0440__x04", Storage="_отправитьУведомлениеВсемПользователям", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ОтправитьУведомлениеВсемПользователям {
			get {
				return this._отправитьУведомлениеВсемПользователям;
			}
			set {
				if ((value != this._отправитьУведомлениеВсемПользователям)) {
					this.OnPropertyChanging("ОтправитьУведомлениеВсемПользователям", this._отправитьУведомлениеВсемПользователям);
					this._отправитьУведомлениеВсемПользователям = value;
					this.OnPropertyChanged("ОтправитьУведомлениеВсемПользователям");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0442__x043f__x0440__x040", Storage="_отправкаУведомленияВсемПользователямОбИзменениях", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ОтправкаУведомленияВсемПользователямОбИзменениях {
			get {
				return this._отправкаУведомленияВсемПользователямОбИзменениях;
			}
			set {
				if ((value != this._отправкаУведомленияВсемПользователямОбИзменениях)) {
					this.OnPropertyChanging("ОтправкаУведомленияВсемПользователямОбИзменениях", this._отправкаУведомленияВсемПользователямОбИзменениях);
					this._отправкаУведомленияВсемПользователямОбИзменениях = value;
					this.OnPropertyChanged("ОтправкаУведомленияВсемПользователямОбИзменениях");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0442__x043f__x0440__x041", Storage="_отправитьУведомлениеПодписаниеПротокола", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ОтправитьУведомлениеПодписаниеПротокола {
			get {
				return this._отправитьУведомлениеПодписаниеПротокола;
			}
			set {
				if ((value != this._отправитьУведомлениеПодписаниеПротокола)) {
					this.OnPropertyChanging("ОтправитьУведомлениеПодписаниеПротокола", this._отправитьУведомлениеПодписаниеПротокола);
					this._отправитьУведомлениеПодписаниеПротокола = value;
					this.OnPropertyChanged("ОтправитьУведомлениеПодписаниеПротокола");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Заседание.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Заседание.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MeetingStatus", Storage="_статус", FieldType="Choice")]
		public System.Nullable<Статус1> Статус {
			get {
				return this._статус;
			}
			set {
				if ((value != this._статус)) {
					this.OnPropertyChanging("Статус", this._статус);
					this._статус = value;
					this.OnPropertyChanged("Статус");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLinkFromDS", Storage="_аКВложенияВопросаЗаседанияДокумент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вложения вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияДокумент> АКВложенияВопросаЗаседанияДокумент {
			get {
				return this._аКВложенияВопросаЗаседанияДокумент;
			}
			set {
				this._аКВложенияВопросаЗаседанияДокумент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingLinkFromDS", Storage="_аКВложенияВопросаЗаседанияНаборДокументов", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вложения вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВложенияВопросаЗаседанияНаборДокументов> АКВложенияВопросаЗаседанияНаборДокументов {
			get {
				return this._аКВложенияВопросаЗаседанияНаборДокументов;
			}
			set {
				this._аКВложенияВопросаЗаседанияНаборДокументов.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProtocolResponsibleSecretaryLink", Storage="_ответственныйСекретарь", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник ОтветственныйСекретарь {
			get {
				return this._ответственныйСекретарь.GetEntity();
			}
			set {
				this._ответственныйСекретарь.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecretaryFullNameLink", Storage="_секретарь", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Секретарь {
			get {
				return this._секретарь.GetEntity();
			}
			set {
				this._секретарь.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProtocolExtParticipants", Storage="_членыГрадостроительногоСовета", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> ЧленыГрадостроительногоСовета {
			get {
				return this._членыГрадостроительногоСовета;
			}
			set {
				this._членыГрадостроительногоСовета.Assign(value);
			}
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВложенияВопросаЗаседанияДокумент", this._аКВложенияВопросаЗаседанияДокумент.Clone());
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВложенияВопросаЗаседанияДокумент");
		}
		
		private void OnАКВложенияВопросаЗаседанияДокументSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияДокумент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаЗаседание = this;
			}
			else {
				e.Item.СсылкаНаЗаседание = null;
			}
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВложенияВопросаЗаседанияНаборДокументов", this._аКВложенияВопросаЗаседанияНаборДокументов.Clone());
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВложенияВопросаЗаседанияНаборДокументов");
		}
		
		private void OnАКВложенияВопросаЗаседанияНаборДокументовSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияВопросаЗаседанияНаборДокументов> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СсылкаНаЗаседание = this;
			}
			else {
				e.Item.СсылкаНаЗаседание = null;
			}
		}
		
		private void OnОтветственныйСекретарьChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОтветственныйСекретарь", this._ответственныйСекретарь.Clone());
		}
		
		private void OnОтветственныйСекретарьChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОтветственныйСекретарь");
		}
		
		private void OnОтветственныйСекретарьSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКЗаседанияЗаседание.Add(this);
			}
			else {
				e.Item.АКЗаседанияЗаседание.Remove(this);
			}
		}
		
		private void OnСекретарьChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Секретарь", this._секретарь.Clone());
		}
		
		private void OnСекретарьChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Секретарь");
		}
		
		private void OnСекретарьSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКЗаседанияЗаседание0.Add(this);
			}
			else {
				e.Item.АКЗаседанияЗаседание0.Remove(this);
			}
		}
		
		private void OnЧленыГрадостроительногоСоветаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЧленыГрадостроительногоСовета", this._членыГрадостроительногоСовета.Clone());
		}
		
		private void OnЧленыГрадостроительногоСоветаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЧленыГрадостроительногоСовета");
		}
		
		private void OnЧленыГрадостроительногоСоветаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКЗаседанияЗаседание1.Add(this);
			}
			else {
				e.Item.АКЗаседанияЗаседание1.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Список отражает связь многие ко многим для списков Объект и Вопрос повестки заседания
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Объект вопроса", Id="0x0100801A9BF42D9CF441A8DE498AE7E2F2E2", List="АК - Объекты вопроса заседания")]
	public partial class АКОбъектыВопросаЗаседанияОбъектВопроса : ОбъектВопроса {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКОбъектыВопросаЗаседанияОбъектВопроса() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041e__x0431__x044a__x0435__x04", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public override ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0412__x043e__x043f__x0440__x04", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public override АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
	}
	
	/// <summary>
	/// Тип содержимого для хранения данных отчета, создаваемого при исполнении поручения
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Отчет по поручению", Id="0x01", List="АК - Отчеты по поручению")]
	public partial class АКОтчетыПоПоручениюОтчетПоПоручению : Элемент {
		
		private string _текст;
		
		private System.Nullable<System.DateTime> _датаЗапроса;
		
		private System.Nullable<System.DateTime> _ожидаемаяДатаОтвета;
		
		private System.Nullable<System.DateTime> _новыйСрок;
		
		private string _комментарийКРезолюции;
		
		private System.Nullable<System.DateTime> _датаОтчета;
		
		private string _инфо;
		
		private System.Nullable<int> _обновлениеПоследнегоОтчета;
		
		private System.Nullable<РешениеПоОтчету> _решениеПоОтчету;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению> _аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение> _поручение;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКОтчетыПоПоручениюОтчетПоПоручению() {
			this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению = new Microsoft.SharePoint.Linq.EntitySet<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению>();
			this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению>>(this.OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюSync);
			this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.OnChanged += new System.EventHandler(this.OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюChanged);
			this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.OnChanging += new System.EventHandler(this.OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюChanging);
			this._поручение = new Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение>();
			this._поручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnПоручениеSync);
			this._поручение.OnChanged += new System.EventHandler(this.OnПоручениеChanged);
			this._поручение.OnChanging += new System.EventHandler(this.OnПоручениеChanging);
			this._аКПорученияПоручение = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручениеSync);
			this._аКПорученияПоручение.OnChanged += new System.EventHandler(this.OnАКПорученияПоручениеChanged);
			this._аКПорученияПоручение.OnChanging += new System.EventHandler(this.OnАКПорученияПоручениеChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportText", Storage="_текст", FieldType="Note")]
		public string Текст {
			get {
				return this._текст;
			}
			set {
				if ((value != this._текст)) {
					this.OnPropertyChanging("Текст", this._текст);
					this._текст = value;
					this.OnPropertyChanged("Текст");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportRequestDate", Storage="_датаЗапроса", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаЗапроса {
			get {
				return this._датаЗапроса;
			}
			set {
				if ((value != this._датаЗапроса)) {
					this.OnPropertyChanging("ДатаЗапроса", this._датаЗапроса);
					this._датаЗапроса = value;
					this.OnPropertyChanged("ДатаЗапроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportRequestPlanAnswerDate", Storage="_ожидаемаяДатаОтвета", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ОжидаемаяДатаОтвета {
			get {
				return this._ожидаемаяДатаОтвета;
			}
			set {
				if ((value != this._ожидаемаяДатаОтвета)) {
					this.OnPropertyChanging("ОжидаемаяДатаОтвета", this._ожидаемаяДатаОтвета);
					this._ожидаемаяДатаОтвета = value;
					this.OnPropertyChanged("ОжидаемаяДатаОтвета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportResolutionNewDate", Storage="_новыйСрок", FieldType="DateTime")]
		public System.Nullable<System.DateTime> НовыйСрок {
			get {
				return this._новыйСрок;
			}
			set {
				if ((value != this._новыйСрок)) {
					this.OnPropertyChanging("НовыйСрок", this._новыйСрок);
					this._новыйСрок = value;
					this.OnPropertyChanged("НовыйСрок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportResolutionComment", Storage="_комментарийКРезолюции", FieldType="Note")]
		public string КомментарийКРезолюции {
			get {
				return this._комментарийКРезолюции;
			}
			set {
				if ((value != this._комментарийКРезолюции)) {
					this.OnPropertyChanging("КомментарийКРезолюции", this._комментарийКРезолюции);
					this._комментарийКРезолюции = value;
					this.OnPropertyChanged("КомментарийКРезолюции");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportFactAnswerDate", Storage="_датаОтчета", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаОтчета {
			get {
				return this._датаОтчета;
			}
			set {
				if ((value != this._датаОтчета)) {
					this.OnPropertyChanging("ДатаОтчета", this._датаОтчета);
					this._датаОтчета = value;
					this.OnPropertyChanged("ДатаОтчета");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportRequestText", Storage="_инфо", FieldType="Note")]
		public string Инфо {
			get {
				return this._инфо;
			}
			set {
				if ((value != this._инфо)) {
					this.OnPropertyChanging("Инфо", this._инфо);
					this._инфо = value;
					this.OnPropertyChanged("Инфо");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0431__x043d__x043e__x04", Storage="_обновлениеПоследнегоОтчета", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ОбновлениеПоследнегоОтчета {
			get {
				return this._обновлениеПоследнегоОтчета;
			}
			set {
				if ((value != this._обновлениеПоследнегоОтчета)) {
					this.OnPropertyChanging("ОбновлениеПоследнегоОтчета", this._обновлениеПоследнегоОтчета);
					this._обновлениеПоследнегоОтчета = value;
					this.OnPropertyChanged("ОбновлениеПоследнегоОтчета");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Отчет по поручению.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Отчет по поручению.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentReportResolutionDecision", Storage="_решениеПоОтчету", FieldType="Choice")]
		public System.Nullable<РешениеПоОтчету> РешениеПоОтчету {
			get {
				return this._решениеПоОтчету;
			}
			set {
				if ((value != this._решениеПоОтчету)) {
					this.OnPropertyChanging("РешениеПоОтчету", this._решениеПоОтчету);
					this._решениеПоОтчету = value;
					this.OnPropertyChanged("РешениеПоОтчету");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentReportLink", Storage="_аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вложения отчета по поручению")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению> АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению {
			get {
				return this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению;
			}
			set {
				this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentLink", Storage="_поручение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Поручения")]
		public АКПорученияПоручение Поручение {
			get {
				return this._поручение.GetEntity();
			}
			set {
				this._поручение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0441__x043b__x04", Storage="_аКПорученияПоручение", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение {
			get {
				return this._аКПорученияПоручение;
			}
			set {
				this._аКПорученияПоручение.Assign(value);
			}
		}
		
		private void OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению", this._аКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению.Clone());
		}
		
		private void OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению");
		}
		
		private void OnАКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручениюSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВложенияОтчетаПоПоручениюВложениеОтчетаПоПоручению> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОтчетПоПоручению = this;
			}
			else {
				e.Item.ОтчетПоПоручению = null;
			}
		}
		
		private void OnПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поручение", this._поручение.Clone());
		}
		
		private void OnПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поручение");
		}
		
		private void OnПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
		}
		
		private void OnАКПорученияПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение", this._аКПорученияПоручение.Clone());
		}
		
		private void OnАКПорученияПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение");
		}
		
		private void OnАКПорученияПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ПоследнийОтчет = this;
			}
			else {
				e.Item.ПоследнийОтчет = null;
			}
		}
	}
	
	/// <summary>
	/// Тип содержимого для использования в поручениях, выдаваемых по итогам заседания
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Поручение", Id="0x01", List="АК - Поручения")]
	public partial class АКПорученияПоручение : Элемент {
		
		private string _номер;
		
		private string _текстПоручения;
		
		private System.Nullable<System.DateTime> _датаСоздания;
		
		private System.Nullable<System.DateTime> _срокИсполнения;
		
		private System.Nullable<System.DateTime> _фактическаяДатаИсполнения;
		
		private System.Nullable<int> _количествоДнейНаРешение;
		
		private string _примечание;
		
		private string _типЗависимостиПланируемойДаты;
		
		private string _текстЗависимогоПоручения;
		
		private string _ответственныйИсполнитель;
		
		private string _зависимыйСрок;
		
		private System.Nullable<double> _количествоПродлений;
		
		private System.Nullable<int> _вычислениеПолейПоручения;
		
		private string _дляВыводаВОтчете;
		
		private string _решения;
		
		private string _инфо;
		
		private string _заседание;
		
		private string _исполнительОрганизация;
		
		private string _типОрганизации;
		
		private System.Nullable<ТипЗависимостиОтДругогоПоручения> _типЗависимостиОтДругогоПоручения;
		
		private System.Nullable<Статус2> _статус;
		
		private System.Nullable<СостояниеКонтроля> _состояниеКонтроля;
		
		private System.Nullable<ТипДней0> _типДней;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение> _зависимоеПоручение;
		
		private Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения> _типПоручения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _контролер;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _исполнитель;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition> _должностьИсполнителя;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _организацияИсполнителя;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _соисполнители;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКОтчетыПоПоручениюОтчетПоПоручению> _последнийОтчет;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public АКПорученияПоручение() {
			this._зависимоеПоручение = new Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение>();
			this._зависимоеПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnЗависимоеПоручениеSync);
			this._зависимоеПоручение.OnChanged += new System.EventHandler(this.OnЗависимоеПоручениеChanged);
			this._зависимоеПоручение.OnChanging += new System.EventHandler(this.OnЗависимоеПоручениеChanging);
			this._типПоручения = new Microsoft.SharePoint.Linq.EntityRef<ТипыПорученийТипПоручения>();
			this._типПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения>>(this.OnТипПорученияSync);
			this._типПоручения.OnChanged += new System.EventHandler(this.OnТипПорученияChanged);
			this._типПоручения.OnChanging += new System.EventHandler(this.OnТипПорученияChanging);
			this._контролер = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._контролер.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnКонтролерSync);
			this._контролер.OnChanged += new System.EventHandler(this.OnКонтролерChanged);
			this._контролер.OnChanging += new System.EventHandler(this.OnКонтролерChanging);
			this._вопросПовестки = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопросПовесткиSync);
			this._вопросПовестки.OnChanged += new System.EventHandler(this.OnВопросПовесткиChanged);
			this._вопросПовестки.OnChanging += new System.EventHandler(this.OnВопросПовесткиChanging);
			this._исполнитель = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._исполнитель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnИсполнительSync);
			this._исполнитель.OnChanged += new System.EventHandler(this.OnИсполнительChanged);
			this._исполнитель.OnChanging += new System.EventHandler(this.OnИсполнительChanging);
			this._должностьИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition>();
			this._должностьИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition>>(this.OnДолжностьИсполнителяSync);
			this._должностьИсполнителя.OnChanged += new System.EventHandler(this.OnДолжностьИсполнителяChanged);
			this._должностьИсполнителя.OnChanging += new System.EventHandler(this.OnДолжностьИсполнителяChanging);
			this._организацияИсполнителя = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._организацияИсполнителя.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnОрганизацияИсполнителяSync);
			this._организацияИсполнителя.OnChanged += new System.EventHandler(this.OnОрганизацияИсполнителяChanged);
			this._организацияИсполнителя.OnChanging += new System.EventHandler(this.OnОрганизацияИсполнителяChanging);
			this._соисполнители = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._соисполнители.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСоисполнителиSync);
			this._соисполнители.OnChanged += new System.EventHandler(this.OnСоисполнителиChanged);
			this._соисполнители.OnChanging += new System.EventHandler(this.OnСоисполнителиChanging);
			this._последнийОтчет = new Microsoft.SharePoint.Linq.EntityRef<АКОтчетыПоПоручениюОтчетПоПоручению>();
			this._последнийОтчет.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКОтчетыПоПоручениюОтчетПоПоручению>>(this.OnПоследнийОтчетSync);
			this._последнийОтчет.OnChanged += new System.EventHandler(this.OnПоследнийОтчетChanged);
			this._последнийОтчет.OnChanging += new System.EventHandler(this.OnПоследнийОтчетChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentNumber", Storage="_номер", Required=true, FieldType="Text")]
		public string Номер {
			get {
				return this._номер;
			}
			set {
				if ((value != this._номер)) {
					this.OnPropertyChanging("Номер", this._номер);
					this._номер = value;
					this.OnPropertyChanged("Номер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentText", Storage="_текстПоручения", FieldType="Note")]
		public string ТекстПоручения {
			get {
				return this._текстПоручения;
			}
			set {
				if ((value != this._текстПоручения)) {
					this.OnPropertyChanging("ТекстПоручения", this._текстПоручения);
					this._текстПоручения = value;
					this.OnPropertyChanged("ТекстПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentCreationDate", Storage="_датаСоздания", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСоздания {
			get {
				return this._датаСоздания;
			}
			set {
				if ((value != this._датаСоздания)) {
					this.OnPropertyChanging("ДатаСоздания", this._датаСоздания);
					this._датаСоздания = value;
					this.OnPropertyChanged("ДатаСоздания");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanDate", Storage="_срокИсполнения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> СрокИсполнения {
			get {
				return this._срокИсполнения;
			}
			set {
				if ((value != this._срокИсполнения)) {
					this.OnPropertyChanging("СрокИсполнения", this._срокИсполнения);
					this._срокИсполнения = value;
					this.OnPropertyChanged("СрокИсполнения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentFactDate", Storage="_фактическаяДатаИсполнения", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ФактическаяДатаИсполнения {
			get {
				return this._фактическаяДатаИсполнения;
			}
			set {
				if ((value != this._фактическаяДатаИсполнения)) {
					this.OnPropertyChanging("ФактическаяДатаИсполнения", this._фактическаяДатаИсполнения);
					this._фактическаяДатаИсполнения = value;
					this.OnPropertyChanged("ФактическаяДатаИсполнения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDaysForResolve", Storage="_количествоДнейНаРешение", FieldType="Integer")]
		public System.Nullable<int> КоличествоДнейНаРешение {
			get {
				return this._количествоДнейНаРешение;
			}
			set {
				if ((value != this._количествоДнейНаРешение)) {
					this.OnPropertyChanging("КоличествоДнейНаРешение", this._количествоДнейНаРешение);
					this._количествоДнейНаРешение = value;
					this.OnPropertyChanged("КоличествоДнейНаРешение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentNote", Storage="_примечание", FieldType="Note")]
		public string Примечание {
			get {
				return this._примечание;
			}
			set {
				if ((value != this._примечание)) {
					this.OnPropertyChanging("Примечание", this._примечание);
					this._примечание = value;
					this.OnPropertyChanged("Примечание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPlanIsDependent", Storage="_типЗависимостиПланируемойДаты", FieldType="Text")]
		public string ТипЗависимостиПланируемойДаты {
			get {
				return this._типЗависимостиПланируемойДаты;
			}
			set {
				if ((value != this._типЗависимостиПланируемойДаты)) {
					this.OnPropertyChanging("ТипЗависимостиПланируемойДаты", this._типЗависимостиПланируемойДаты);
					this._типЗависимостиПланируемойДаты = value;
					this.OnPropertyChanged("ТипЗависимостиПланируемойДаты");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentPredecessorLinkValue", Storage="_текстЗависимогоПоручения", FieldType="Note")]
		public string ТекстЗависимогоПоручения {
			get {
				return this._текстЗависимогоПоручения;
			}
			set {
				if ((value != this._текстЗависимогоПоручения)) {
					this.OnPropertyChanging("ТекстЗависимогоПоручения", this._текстЗависимогоПоручения);
					this._текстЗависимогоПоручения = value;
					this.OnPropertyChanged("ТекстЗависимогоПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0442__x0432__x0435__x04", Storage="_ответственныйИсполнитель", FieldType="Text")]
		public string ОтветственныйИсполнитель {
			get {
				return this._ответственныйИсполнитель;
			}
			set {
				if ((value != this._ответственныйИсполнитель)) {
					this.OnPropertyChanging("ОтветственныйИсполнитель", this._ответственныйИсполнитель);
					this._ответственныйИсполнитель = value;
					this.OnPropertyChanged("ОтветственныйИсполнитель");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x0430__x0432__x0438__x04", Storage="_зависимыйСрок", FieldType="Text")]
		public string ЗависимыйСрок {
			get {
				return this._зависимыйСрок;
			}
			set {
				if ((value != this._зависимыйСрок)) {
					this.OnPropertyChanging("ЗависимыйСрок", this._зависимыйСрок);
					this._зависимыйСрок = value;
					this.OnPropertyChanged("ЗависимыйСрок");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041a__x043e__x043b__x0438__x04", Storage="_количествоПродлений", FieldType="Number")]
		public System.Nullable<double> КоличествоПродлений {
			get {
				return this._количествоПродлений;
			}
			set {
				if ((value != this._количествоПродлений)) {
					this.OnPropertyChanging("КоличествоПродлений", this._количествоПродлений);
					this._количествоПродлений = value;
					this.OnPropertyChanged("КоличествоПродлений");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0412__x044b__x0447__x0438__x04", Storage="_вычислениеПолейПоручения", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ВычислениеПолейПоручения {
			get {
				return this._вычислениеПолейПоручения;
			}
			set {
				if ((value != this._вычислениеПолейПоручения)) {
					this.OnPropertyChanging("ВычислениеПолейПоручения", this._вычислениеПолейПоручения);
					this._вычислениеПолейПоручения = value;
					this.OnPropertyChanged("ВычислениеПолейПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x043b__x044f__x0020__x04", Storage="_дляВыводаВОтчете", ReadOnly=true, IsCalculated=true, FieldType="Text")]
		public string ДляВыводаВОтчете {
			get {
				return this._дляВыводаВОтчете;
			}
			set {
				if ((value != this._дляВыводаВОтчете)) {
					this.OnPropertyChanging("ДляВыводаВОтчете", this._дляВыводаВОтчете);
					this._дляВыводаВОтчете = value;
					this.OnPropertyChanged("ДляВыводаВОтчете");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x2116__x0020__x0440__x0435__x04", Storage="_решения", FieldType="Text")]
		public string Решения {
			get {
				return this._решения;
			}
			set {
				if ((value != this._решения)) {
					this.OnPropertyChanging("Решения", this._решения);
					this._решения = value;
					this.OnPropertyChanged("Решения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0418__x043d__x0444__x043e_", Storage="_инфо", FieldType="Text")]
		public string Инфо {
			get {
				return this._инфо;
			}
			set {
				if ((value != this._инфо)) {
					this.OnPropertyChanging("Инфо", this._инфо);
					this._инфо = value;
					this.OnPropertyChanged("Инфо");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x0430__x0441__x0435__x04", Storage="_заседание", FieldType="Text")]
		public string Заседание {
			get {
				return this._заседание;
			}
			set {
				if ((value != this._заседание)) {
					this.OnPropertyChanging("Заседание", this._заседание);
					this._заседание = value;
					this.OnPropertyChanged("Заседание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentExecutorOrganizationLi", Storage="_исполнительОрганизация", FieldType="Text")]
		public string ИсполнительОрганизация {
			get {
				return this._исполнительОрганизация;
			}
			set {
				if ((value != this._исполнительОрганизация)) {
					this.OnPropertyChanging("ИсполнительОрганизация", this._исполнительОрганизация);
					this._исполнительОрганизация = value;
					this.OnPropertyChanged("ИсполнительОрганизация");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentOrganizationTypeLinkVa", Storage="_типОрганизации", FieldType="Text")]
		public string ТипОрганизации {
			get {
				return this._типОрганизации;
			}
			set {
				if ((value != this._типОрганизации)) {
					this.OnPropertyChanging("ТипОрганизации", this._типОрганизации);
					this._типОрганизации = value;
					this.OnPropertyChanged("ТипОрганизации");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Поручение.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Поручение.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDependencyType", Storage="_типЗависимостиОтДругогоПоручения", FieldType="Choice")]
		public System.Nullable<ТипЗависимостиОтДругогоПоручения> ТипЗависимостиОтДругогоПоручения {
			get {
				return this._типЗависимостиОтДругогоПоручения;
			}
			set {
				if ((value != this._типЗависимостиОтДругогоПоручения)) {
					this.OnPropertyChanging("ТипЗависимостиОтДругогоПоручения", this._типЗависимостиОтДругогоПоручения);
					this._типЗависимостиОтДругогоПоручения = value;
					this.OnPropertyChanged("ТипЗависимостиОтДругогоПоручения");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentStatus", Storage="_статус", FieldType="Choice")]
		public System.Nullable<Статус2> Статус {
			get {
				return this._статус;
			}
			set {
				if ((value != this._статус)) {
					this.OnPropertyChanging("Статус", this._статус);
					this._статус = value;
					this.OnPropertyChanged("Статус");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentInspectState", Storage="_состояниеКонтроля", FieldType="Choice")]
		public System.Nullable<СостояниеКонтроля> СостояниеКонтроля {
			get {
				return this._состояниеКонтроля;
			}
			set {
				if ((value != this._состояниеКонтроля)) {
					this.OnPropertyChanging("СостояниеКонтроля", this._состояниеКонтроля);
					this._состояниеКонтроля = value;
					this.OnPropertyChanged("СостояниеКонтроля");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentDayType", Storage="_типДней", FieldType="Choice")]
		public System.Nullable<ТипДней0> ТипДней {
			get {
				return this._типДней;
			}
			set {
				if ((value != this._типДней)) {
					this.OnPropertyChanging("ТипДней", this._типДней);
					this._типДней = value;
					this.OnPropertyChanged("ТипДней");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentLink", Storage="_зависимоеПоручение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Поручения")]
		public АКПорученияПоручение ЗависимоеПоручение {
			get {
				return this._зависимоеПоручение.GetEntity();
			}
			set {
				this._зависимоеПоручение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeLink", Storage="_типПоручения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы поручений")]
		public ТипыПорученийТипПоручения ТипПоручения {
			get {
				return this._типПоручения.GetEntity();
			}
			set {
				this._типПоручения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerFullNameLink", Storage="_контролер", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Контролер {
			get {
				return this._контролер.GetEntity();
			}
			set {
				this._контролер.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLink", Storage="_вопросПовестки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки ВопросПовестки {
			get {
				return this._вопросПовестки.GetEntity();
			}
			set {
				this._вопросПовестки.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorFullNameLink", Storage="_исполнитель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Исполнитель {
			get {
				return this._исполнитель.GetEntity();
			}
			set {
				this._исполнитель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionLink", Storage="_должностьИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник должностей")]
		public СправочникДолжностейPosition ДолжностьИсполнителя {
			get {
				return this._должностьИсполнителя.GetEntity();
			}
			set {
				this._должностьИсполнителя.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrganizationLink", Storage="_организацияИсполнителя", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация ОрганизацияИсполнителя {
			get {
				return this._организацияИсполнителя.GetEntity();
			}
			set {
				this._организацияИсполнителя.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentSoexecutors", Storage="_соисполнители", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> Соисполнители {
			get {
				return this._соисполнители;
			}
			set {
				this._соисполнители.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0441__x043b__x04", Storage="_последнийОтчет", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Отчеты по поручению")]
		public АКОтчетыПоПоручениюОтчетПоПоручению ПоследнийОтчет {
			get {
				return this._последнийОтчет.GetEntity();
			}
			set {
				this._последнийОтчет.SetEntity(value);
			}
		}
		
		private void OnЗависимоеПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЗависимоеПоручение", this._зависимоеПоручение.Clone());
		}
		
		private void OnЗависимоеПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЗависимоеПоручение");
		}
		
		private void OnЗависимоеПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
		}
		
		private void OnТипПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ТипПоручения", this._типПоручения.Clone());
		}
		
		private void OnТипПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ТипПоручения");
		}
		
		private void OnТипПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ТипыПорученийТипПоручения> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение.Remove(this);
			}
		}
		
		private void OnКонтролерChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Контролер", this._контролер.Clone());
		}
		
		private void OnКонтролерChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Контролер");
		}
		
		private void OnКонтролерSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение.Remove(this);
			}
		}
		
		private void OnВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВопросПовестки", this._вопросПовестки.Clone());
		}
		
		private void OnВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВопросПовестки");
		}
		
		private void OnВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
		}
		
		private void OnИсполнительChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Исполнитель", this._исполнитель.Clone());
		}
		
		private void OnИсполнительChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Исполнитель");
		}
		
		private void OnИсполнительSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение0.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение0.Remove(this);
			}
		}
		
		private void OnДолжностьИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДолжностьИсполнителя", this._должностьИсполнителя.Clone());
		}
		
		private void OnДолжностьИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДолжностьИсполнителя");
		}
		
		private void OnДолжностьИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение.Remove(this);
			}
		}
		
		private void OnОрганизацияИсполнителяChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ОрганизацияИсполнителя", this._организацияИсполнителя.Clone());
		}
		
		private void OnОрганизацияИсполнителяChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ОрганизацияИсполнителя");
		}
		
		private void OnОрганизацияИсполнителяSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение.Remove(this);
			}
		}
		
		private void OnСоисполнителиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Соисполнители", this._соисполнители.Clone());
		}
		
		private void OnСоисполнителиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Соисполнители");
		}
		
		private void OnСоисполнителиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение1.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение1.Remove(this);
			}
		}
		
		private void OnПоследнийОтчетChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ПоследнийОтчет", this._последнийОтчет.Clone());
		}
		
		private void OnПоследнийОтчетChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ПоследнийОтчет");
		}
		
		private void OnПоследнийОтчетSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКОтчетыПоПоручениюОтчетПоПоручению> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.АКПорученияПоручение.Add(this);
			}
			else {
				e.Item.АКПорученияПоручение.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ListFieldsContentType", Id="0x01", List="Градостроительные показатели")]
	public partial class ГрадостроительныеПоказателиListFieldsContentType : Элемент {
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _показатель;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _единицаИзмерения;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ГрадостроительныеПоказателиListFieldsContentType() {
			this._показатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._показатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnПоказательSync);
			this._показатель.OnChanged += new System.EventHandler(this.OnПоказательChanged);
			this._показатель.OnChanging += new System.EventHandler(this.OnПоказательChanging);
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this._единицаИзмерения = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._единицаИзмерения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnЕдиницаИзмеренияSync);
			this._единицаИзмерения.OnChanged += new System.EventHandler(this.OnЕдиницаИзмеренияChanged);
			this._единицаИзмерения.OnChanging += new System.EventHandler(this.OnЕдиницаИзмеренияChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Типы показателей")]
		public Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="NewColumn1", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0415__x0434__x0438__x043d__x04", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		private void OnПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Показатель", this._показатель.Clone());
		}
		
		private void OnПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Показатель");
		}
		
		private void OnПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ГрадостроительныеПоказателиListFieldsContentType.Add(this);
			}
			else {
				e.Item.ГрадостроительныеПоказателиListFieldsContentType.Remove(this);
			}
		}
		
		private void OnЕдиницаИзмеренияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЕдиницаИзмерения", this._единицаИзмерения.Clone());
		}
		
		private void OnЕдиницаИзмеренияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЕдиницаИзмерения");
		}
		
		private void OnЕдиницаИзмеренияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	/// <summary>
	/// Тип содержимого для журналирования событий в поручении
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Запись журнала поручения", Id="0x01", List="Записи журналов поручений")]
	public partial class ЗаписиЖурналовПорученийЗаписьЖурналаПоручения : Элемент {
		
		private System.Nullable<System.DateTime> _дата;
		
		private string _описание;
		
		private string _описаниеВложения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник> _исполнитель;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение> _поручение;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ЗаписиЖурналовПорученийЗаписьЖурналаПоручения() {
			this._исполнитель = new Microsoft.SharePoint.Linq.EntityRef<СправочникУчастниковУчастник>();
			this._исполнитель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnИсполнительSync);
			this._исполнитель.OnChanged += new System.EventHandler(this.OnИсполнительChanged);
			this._исполнитель.OnChanging += new System.EventHandler(this.OnИсполнительChanging);
			this._поручение = new Microsoft.SharePoint.Linq.EntityRef<АКПорученияПоручение>();
			this._поручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnПоручениеSync);
			this._поручение.OnChanged += new System.EventHandler(this.OnПоручениеChanged);
			this._поручение.OnChanging += new System.EventHandler(this.OnПоручениеChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentJournalEntryDate", Storage="_дата", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> Дата {
			get {
				return this._дата;
			}
			set {
				if ((value != this._дата)) {
					this.OnPropertyChanging("Дата", this._дата);
					this._дата = value;
					this.OnPropertyChanged("Дата");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentJournalEntryDescr", Storage="_описание", Required=true, FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentJournalEntryAttachDescr", Storage="_описаниеВложения", FieldType="Note")]
		public string ОписаниеВложения {
			get {
				return this._описаниеВложения;
			}
			set {
				if ((value != this._описаниеВложения)) {
					this.OnPropertyChanging("ОписаниеВложения", this._описаниеВложения);
					this._описаниеВложения = value;
					this.OnPropertyChanged("ОписаниеВложения");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Запись журнала поручения.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Запись журнала поручения.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentJournalEntryExecutorFullNameLink", Storage="_исполнитель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник участников")]
		public СправочникУчастниковУчастник Исполнитель {
			get {
				return this._исполнитель.GetEntity();
			}
			set {
				this._исполнитель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentLink", Storage="_поручение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Поручения")]
		public АКПорученияПоручение Поручение {
			get {
				return this._поручение.GetEntity();
			}
			set {
				this._поручение.SetEntity(value);
			}
		}
		
		private void OnИсполнительChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Исполнитель", this._исполнитель.Clone());
		}
		
		private void OnИсполнительChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Исполнитель");
		}
		
		private void OnИсполнительSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ЗаписиЖурналовПорученийЗаписьЖурналаПоручения.Add(this);
			}
			else {
				e.Item.ЗаписиЖурналовПорученийЗаписьЖурналаПоручения.Remove(this);
			}
		}
		
		private void OnПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поручение", this._поручение.Clone());
		}
		
		private void OnПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поручение");
		}
		
		private void OnПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Категория вопроса", Id="0x01", List="Категории вопросов")]
	public partial class КатегорииВопросовКатегорияВопроса : Элемент {
		
		private string _категорияВопроса;
		
		private string _описание;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиЭлемент> _градостроительныеПоказателиЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиListFieldsContentType> _градостроительныеПоказателиListFieldsContentType;
		
		private Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> _рГЗаявкиЭлемент;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public КатегорииВопросовКатегорияВопроса() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._градостроительныеПоказателиЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиЭлемент>();
			this._градостроительныеПоказателиЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГрадостроительныеПоказателиЭлемент>>(this.OnГрадостроительныеПоказателиЭлементSync);
			this._градостроительныеПоказателиЭлемент.OnChanged += new System.EventHandler(this.OnГрадостроительныеПоказателиЭлементChanged);
			this._градостроительныеПоказателиЭлемент.OnChanging += new System.EventHandler(this.OnГрадостроительныеПоказателиЭлементChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._градостроительныеПоказателиListFieldsContentType = new Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиListFieldsContentType>();
			this._градостроительныеПоказателиListFieldsContentType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГрадостроительныеПоказателиListFieldsContentType>>(this.OnГрадостроительныеПоказателиListFieldsContentTypeSync);
			this._градостроительныеПоказателиListFieldsContentType.OnChanged += new System.EventHandler(this.OnГрадостроительныеПоказателиListFieldsContentTypeChanged);
			this._градостроительныеПоказателиListFieldsContentType.OnChanging += new System.EventHandler(this.OnГрадостроительныеПоказателиListFieldsContentTypeChanging);
			this._рГЗаявкиЭлемент = new Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент>();
			this._рГЗаявкиЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент>>(this.OnРГЗаявкиЭлементSync);
			this._рГЗаявкиЭлемент.OnChanged += new System.EventHandler(this.OnРГЗаявкиЭлементChanged);
			this._рГЗаявкиЭлемент.OnChanging += new System.EventHandler(this.OnРГЗаявкиЭлементChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuestionCategoryName", Storage="_категорияВопроса", Required=true, FieldType="Text")]
		public string КатегорияВопроса {
			get {
				return this._категорияВопроса;
			}
			set {
				if ((value != this._категорияВопроса)) {
					this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса);
					this._категорияВопроса = value;
					this.OnPropertyChanged("КатегорияВопроса");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuestionCategoryDescription", Storage="_описание", FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Категория вопроса.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Категория вопроса.");
			}
		}
		
		/// <summary>
		/// Ссылка на категорию вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCategoryMVKLink", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="NewColumn1", Storage="_градостроительныеПоказателиЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Градостроительные показатели")]
		public Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиЭлемент> ГрадостроительныеПоказателиЭлемент {
			get {
				return this._градостроительныеПоказателиЭлемент;
			}
			set {
				this._градостроительныеПоказателиЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на категорию вопроса повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCategoryMVKLink", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="QuestionCategoryLink", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="NewColumn1", Storage="_градостроительныеПоказателиListFieldsContentType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Градостроительные показатели")]
		public Microsoft.SharePoint.Linq.EntitySet<ГрадостроительныеПоказателиListFieldsContentType> ГрадостроительныеПоказателиListFieldsContentType {
			get {
				return this._градостроительныеПоказателиListFieldsContentType;
			}
			set {
				this._градостроительныеПоказателиListFieldsContentType.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="QuaestionCategory", Storage="_рГЗаявкиЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Заявки")]
		public Microsoft.SharePoint.Linq.EntitySet<РГЗаявкиЭлемент> РГЗаявкиЭлемент {
			get {
				return this._рГЗаявкиЭлемент;
			}
			set {
				this._рГЗаявкиЭлемент.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
		
		private void OnГрадостроительныеПоказателиЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГрадостроительныеПоказателиЭлемент", this._градостроительныеПоказателиЭлемент.Clone());
		}
		
		private void OnГрадостроительныеПоказателиЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГрадостроительныеПоказателиЭлемент");
		}
		
		private void OnГрадостроительныеПоказателиЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГрадостроительныеПоказателиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
		
		private void OnГрадостроительныеПоказателиListFieldsContentTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГрадостроительныеПоказателиListFieldsContentType", this._градостроительныеПоказателиListFieldsContentType.Clone());
		}
		
		private void OnГрадостроительныеПоказателиListFieldsContentTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГрадостроительныеПоказателиListFieldsContentType");
		}
		
		private void OnГрадостроительныеПоказателиListFieldsContentTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГрадостроительныеПоказателиListFieldsContentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
		
		private void OnРГЗаявкиЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РГЗаявкиЭлемент", this._рГЗаявкиЭлемент.Clone());
		}
		
		private void OnРГЗаявкиЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РГЗаявкиЭлемент");
		}
		
		private void OnРГЗаявкиЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<РГЗаявкиЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КатегорияВопроса = this;
			}
			else {
				e.Item.КатегорияВопроса = null;
			}
		}
	}
	
	/// <summary>
	/// Только для внутреннего использования
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Post", Id="0x01", List="Микроканал")]
	public partial class МикроканалPost : Элемент {
		
		private System.Nullable<int> _replyCount;
		
		private string _refRoot;
		
		private string _refReply;
		
		private string _eMailSubscribers;
		
		private string _eMailUnsubscribed;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public МикроканалPost() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyCount", Storage="_replyCount", FieldType="Integer")]
		public System.Nullable<int> ReplyCount {
			get {
				return this._replyCount;
			}
			set {
				if ((value != this._replyCount)) {
					this.OnPropertyChanging("ReplyCount", this._replyCount);
					this._replyCount = value;
					this.OnPropertyChanged("ReplyCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RefRoot", Storage="_refRoot", FieldType="Note")]
		public string RefRoot {
			get {
				return this._refRoot;
			}
			set {
				if ((value != this._refRoot)) {
					this.OnPropertyChanging("RefRoot", this._refRoot);
					this._refRoot = value;
					this.OnPropertyChanged("RefRoot");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RefReply", Storage="_refReply", FieldType="Note")]
		public string RefReply {
			get {
				return this._refReply;
			}
			set {
				if ((value != this._refReply)) {
					this.OnPropertyChanging("RefReply", this._refReply);
					this._refReply = value;
					this.OnPropertyChanged("RefReply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="eMailSubscribers", Storage="_eMailSubscribers", FieldType="Note")]
		public string EMailSubscribers {
			get {
				return this._eMailSubscribers;
			}
			set {
				if ((value != this._eMailSubscribers)) {
					this.OnPropertyChanging("EMailSubscribers", this._eMailSubscribers);
					this._eMailSubscribers = value;
					this.OnPropertyChanged("EMailSubscribers");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="eMailUnsubscribed", Storage="_eMailUnsubscribed", FieldType="Note")]
		public string EMailUnsubscribed {
			get {
				return this._eMailUnsubscribed;
			}
			set {
				if ((value != this._eMailUnsubscribed)) {
					this.OnPropertyChanging("EMailUnsubscribed", this._eMailUnsubscribed);
					this._eMailUnsubscribed = value;
					this.OnPropertyChanged("EMailUnsubscribed");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Post.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Post.");
			}
		}
	}
	
	/// <summary>
	/// Только для внутреннего использования
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Reply", Id="0x01", List="Микроканал")]
	public partial class МикроканалReply : Элемент {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public МикроканалReply() {
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Reply.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Reply.");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ListFieldsContentType", Id="0x01", List="Отчет1")]
	public partial class Отчет1ListFieldsContentType : Элемент {
		
		private string _количество;
		
		private System.Nullable<double> _значениеПоказателя;
		
		private System.Nullable<double> _индексСортировки;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _ссылкаНаКатегориюВопроса;
		
		private Microsoft.SharePoint.Linq.EntityRef<Элемент> _ссылкаНаПоказатель;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Отчет1ListFieldsContentType() {
			this._ссылкаНаКатегориюВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._ссылкаНаКатегориюВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnСсылкаНаКатегориюВопросаSync);
			this._ссылкаНаКатегориюВопроса.OnChanged += new System.EventHandler(this.OnСсылкаНаКатегориюВопросаChanged);
			this._ссылкаНаКатегориюВопроса.OnChanging += new System.EventHandler(this.OnСсылкаНаКатегориюВопросаChanging);
			this._ссылкаНаПоказатель = new Microsoft.SharePoint.Linq.EntityRef<Элемент>();
			this._ссылкаНаПоказатель.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент>>(this.OnСсылкаНаПоказательSync);
			this._ссылкаНаПоказатель.OnChanged += new System.EventHandler(this.OnСсылкаНаПоказательChanged);
			this._ссылкаНаПоказатель.OnChanging += new System.EventHandler(this.OnСсылкаНаПоказательChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountValue", Storage="_количество", FieldType="Text")]
		public string Количество {
			get {
				return this._количество;
			}
			set {
				if ((value != this._количество)) {
					this.OnPropertyChanging("Количество", this._количество);
					this._количество = value;
					this.OnPropertyChanged("Количество");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarkSumValue", Storage="_значениеПоказателя", FieldType="Number")]
		public System.Nullable<double> ЗначениеПоказателя {
			get {
				return this._значениеПоказателя;
			}
			set {
				if ((value != this._значениеПоказателя)) {
					this.OnPropertyChanging("ЗначениеПоказателя", this._значениеПоказателя);
					this._значениеПоказателя = value;
					this.OnPropertyChanged("ЗначениеПоказателя");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SortIndex", Storage="_индексСортировки", FieldType="Number")]
		public System.Nullable<double> ИндексСортировки {
			get {
				return this._индексСортировки;
			}
			set {
				if ((value != this._индексСортировки)) {
					this.OnPropertyChanging("ИндексСортировки", this._индексСортировки);
					this._индексСортировки = value;
					this.OnPropertyChanged("ИндексСортировки");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type ListFieldsContentType.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type ListFieldsContentType.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionCategoryLink", Storage="_ссылкаНаКатегориюВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса СсылкаНаКатегориюВопроса {
			get {
				return this._ссылкаНаКатегориюВопроса.GetEntity();
			}
			set {
				this._ссылкаНаКатегориюВопроса.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MarkLink", Storage="_ссылкаНаПоказатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public Элемент СсылкаНаПоказатель {
			get {
				return this._ссылкаНаПоказатель.GetEntity();
			}
			set {
				this._ссылкаНаПоказатель.SetEntity(value);
			}
		}
		
		private void OnСсылкаНаКатегориюВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаКатегориюВопроса", this._ссылкаНаКатегориюВопроса.Clone());
		}
		
		private void OnСсылкаНаКатегориюВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаКатегориюВопроса");
		}
		
		private void OnСсылкаНаКатегориюВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
		}
		
		private void OnСсылкаНаПоказательChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СсылкаНаПоказатель", this._ссылкаНаПоказатель.Clone());
		}
		
		private void OnСсылкаНаПоказательChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СсылкаНаПоказатель");
		}
		
		private void OnСсылкаНаПоказательSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Элемент> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Аналитический показатель", Id="0x0100953A0FE8F958744D9480A5044290C318", List="Передаваемое имущество")]
	public partial class ПередаваемоеИмуществоАналитическийПоказатель : АналитическийПоказатель {
		
		private string _комментарий;
		
		private System.Nullable<ЦельПередаваемогоИмущества> _цельПередаваемогоИмущества;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ПередаваемоеИмуществоАналитическийПоказатель() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x043d__x0430__x0447__x04", Storage="_значение", FieldType="Text")]
		public override string Значение {
			get {
				return this._значение;
			}
			set {
				if ((value != this._значение)) {
					this.OnPropertyChanging("Значение", this._значение);
					this._значение = value;
					this.OnPropertyChanged("Значение");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="comment", Storage="_комментарий", FieldType="Text")]
		public string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="typeofpokazatel", Storage="_цельПередаваемогоИмущества", FieldType="Choice")]
		public System.Nullable<ЦельПередаваемогоИмущества> ЦельПередаваемогоИмущества {
			get {
				return this._цельПередаваемогоИмущества;
			}
			set {
				if ((value != this._цельПередаваемогоИмущества)) {
					this.OnPropertyChanging("ЦельПередаваемогоИмущества", this._цельПередаваемогоИмущества);
					this._цельПередаваемогоИмущества = value;
					this.OnPropertyChanged("ЦельПередаваемогоИмущества");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0412__x043e__x043f__x0440__x04", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public override АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public override Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0434__x0433__x04", Storage="_подгруппа", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Подгруппы аналитических показателей")]
		public override ПодгруппыАналитическихПоказателейЭлемент Подгруппа {
			get {
				return this._подгруппа.GetEntity();
			}
			set {
				this._подгруппа.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0415__x0434__x0438__x043d__x04", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public override Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041e__x0431__x044a__x0435__x04", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public override ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x01009435E8C0C3E94107BD6F56DE758815D6", List="РГ - Вопросы заседания")]
	public partial class РГВопросыЗаседанияЭлемент : IssueMVK {
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа0;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа1;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK> _issueObjectMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueAttachmentMVK> _issueAttachmentMVK;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public РГВопросыЗаседанияЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._системнаяКоллекцияМультимедиа0 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа0Sync);
			this._системнаяКоллекцияМультимедиа0.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changed);
			this._системнаяКоллекцияМультимедиа0.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changing);
			this._системнаяКоллекцияМультимедиа1 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа1Sync);
			this._системнаяКоллекцияМультимедиа1.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа1Changed);
			this._системнаяКоллекцияМультимедиа1.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа1Changing);
			this._issueObjectMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK>();
			this._issueObjectMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueObjectMVK>>(this.OnIssueObjectMVKSync);
			this._issueObjectMVK.OnChanged += new System.EventHandler(this.OnIssueObjectMVKChanged);
			this._issueObjectMVK.OnChanging += new System.EventHandler(this.OnIssueObjectMVKChanging);
			this._assignmentMVK = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVKSync);
			this._assignmentMVK.OnChanged += new System.EventHandler(this.OnAssignmentMVKChanged);
			this._assignmentMVK.OnChanging += new System.EventHandler(this.OnAssignmentMVKChanging);
			this._issueAttachmentMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueAttachmentMVK>();
			this._issueAttachmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueAttachmentMVK>>(this.OnIssueAttachmentMVKSync);
			this._issueAttachmentMVK.OnChanged += new System.EventHandler(this.OnIssueAttachmentMVKChanged);
			this._issueAttachmentMVK.OnChanging += new System.EventHandler(this.OnIssueAttachmentMVKChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Инвестор по вопросу заседания МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Инвестор {
			get {
				throw new System.InvalidOperationException("Field IssueInvestorMVK was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field IssueInvestorMVK was removed from content type Элемент.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueAttachmentIssueMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вложения вопроса повестки заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на вопрос повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentIssueMVK", Storage="_системнаяКоллекцияМультимедиа0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа0 {
			get {
				return this._системнаяКоллекцияМультимедиа0;
			}
			set {
				this._системнаяКоллекцияМультимедиа0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectIssueMVK", Storage="_системнаяКоллекцияМультимедиа1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа1 {
			get {
				return this._системнаяКоллекцияМультимедиа1;
			}
			set {
				this._системнаяКоллекцияМультимедиа1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueObjectIssueMVK", Storage="_issueObjectMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Объекты вопроса заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueObjectMVK> IssueObjectMVK {
			get {
				return this._issueObjectMVK;
			}
			set {
				this._issueObjectMVK.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на вопрос повестки заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentIssueMVK", Storage="_assignmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK {
			get {
				return this._assignmentMVK;
			}
			set {
				this._assignmentMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueAttachmentIssueMVK", Storage="_issueAttachmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вложения вопроса повестки заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueAttachmentMVK> IssueAttachmentMVK {
			get {
				return this._issueAttachmentMVK;
			}
			set {
				this._issueAttachmentMVK.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Вопрос1 = this;
			}
			else {
				e.Item.Вопрос1 = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа0", this._системнаяКоллекцияМультимедиа0.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа0");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ВопросПовестки = this;
			}
			else {
				e.Item.ВопросПовестки = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа1", this._системнаяКоллекцияМультимедиа1.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа1");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Вопрос2 = this;
			}
			else {
				e.Item.Вопрос2 = null;
			}
		}
		
		private void OnIssueObjectMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueObjectMVK", this._issueObjectMVK.Clone());
		}
		
		private void OnIssueObjectMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueObjectMVK");
		}
		
		private void OnIssueObjectMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueObjectMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Вопрос = this;
			}
			else {
				e.Item.Вопрос = null;
			}
		}
		
		private void OnAssignmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK", this._assignmentMVK.Clone());
		}
		
		private void OnAssignmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK");
		}
		
		private void OnAssignmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ВопросПовестки = this;
			}
			else {
				e.Item.ВопросПовестки = null;
			}
		}
		
		private void OnIssueAttachmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueAttachmentMVK", this._issueAttachmentMVK.Clone());
		}
		
		private void OnIssueAttachmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueAttachmentMVK");
		}
		
		private void OnIssueAttachmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueAttachmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Вопрос = this;
			}
			else {
				e.Item.Вопрос = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x0100C274D4A47E4742EEABF2D5FDF35DFBC9", List="РГ - Заседания")]
	public partial class РГЗаседанияЭлемент : MeetingMVK {
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа0;
		
		private Microsoft.SharePoint.Linq.EntitySet<MeetingAttachmentMVK> _meetingAttachmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public РГЗаседанияЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._системнаяКоллекцияМультимедиа0 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа0Sync);
			this._системнаяКоллекцияМультимедиа0.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changed);
			this._системнаяКоллекцияМультимедиа0.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changing);
			this._meetingAttachmentMVK = new Microsoft.SharePoint.Linq.EntitySet<MeetingAttachmentMVK>();
			this._meetingAttachmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<MeetingAttachmentMVK>>(this.OnMeetingAttachmentMVKSync);
			this._meetingAttachmentMVK.OnChanged += new System.EventHandler(this.OnMeetingAttachmentMVKChanged);
			this._meetingAttachmentMVK.OnChanging += new System.EventHandler(this.OnMeetingAttachmentMVKChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Элемент.");
			}
		}
		
		/// <summary>
		/// Комментарий к заседанию МВК
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Комментарий {
			get {
				throw new System.InvalidOperationException("Field MeetingCommentMVK was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field MeetingCommentMVK was removed from content type Элемент.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMeetingMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentMeetingMVK", Storage="_системнаяКоллекцияМультимедиа0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вложения заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа0 {
			get {
				return this._системнаяКоллекцияМультимедиа0;
			}
			set {
				this._системнаяКоллекцияМультимедиа0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MeetingAttachmentMeetingMVK", Storage="_meetingAttachmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вложения заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<MeetingAttachmentMVK> MeetingAttachmentMVK {
			get {
				return this._meetingAttachmentMVK;
			}
			set {
				this._meetingAttachmentMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueMeetingMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заседание = this;
			}
			else {
				e.Item.Заседание = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа0", this._системнаяКоллекцияМультимедиа0.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа0");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заседание0 = this;
			}
			else {
				e.Item.Заседание0 = null;
			}
		}
		
		private void OnMeetingAttachmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("MeetingAttachmentMVK", this._meetingAttachmentMVK.Clone());
		}
		
		private void OnMeetingAttachmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("MeetingAttachmentMVK");
		}
		
		private void OnMeetingAttachmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<MeetingAttachmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заседание = this;
			}
			else {
				e.Item.Заседание = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заседание = this;
			}
			else {
				e.Item.Заседание = null;
			}
		}
	}
	
	/// <summary>
	/// Создание элемента списка.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Элемент", Id="0x0100ED5F7CB6A1DD4E8D9D5163520BDDD6D0", List="РГ - Заявки")]
	public partial class РГЗаявкиЭлемент : OrderMVK {
		
		private string _тема;
		
		//private System.Nullable<int> _кнопкаСформироватьПовестку;
		
		private string _адрес;
		
		private string _кадастровыйНомер;
		
		private string _докладчик;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент> _проектировщик;
		
		private Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент> _муниципальныйРайон;
		
		private Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент> _поселение;
		
		private Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса> _категорияВопроса;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public РГЗаявкиЭлемент() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._проектировщик = new Microsoft.SharePoint.Linq.EntityRef<ПроектнаяОрганизацияЭлемент>();
			this._проектировщик.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент>>(this.OnПроектировщикSync);
			this._проектировщик.OnChanged += new System.EventHandler(this.OnПроектировщикChanged);
			this._проектировщик.OnChanging += new System.EventHandler(this.OnПроектировщикChanging);
			this._муниципальныйРайон = new Microsoft.SharePoint.Linq.EntityRef<МуниципальныеРайоныЭлемент>();
			this._муниципальныйРайон.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент>>(this.OnМуниципальныйРайонSync);
			this._муниципальныйРайон.OnChanged += new System.EventHandler(this.OnМуниципальныйРайонChanged);
			this._муниципальныйРайон.OnChanging += new System.EventHandler(this.OnМуниципальныйРайонChanging);
			this._поселение = new Microsoft.SharePoint.Linq.EntityRef<ПоселенияЭлемент>();
			this._поселение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент>>(this.OnПоселениеSync);
			this._поселение.OnChanged += new System.EventHandler(this.OnПоселениеChanged);
			this._поселение.OnChanging += new System.EventHandler(this.OnПоселениеChanging);
			this._категорияВопроса = new Microsoft.SharePoint.Linq.EntityRef<КатегорииВопросовКатегорияВопроса>();
			this._категорияВопроса.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса>>(this.OnКатегорияВопросаSync);
			this._категорияВопроса.OnChanged += new System.EventHandler(this.OnКатегорияВопросаChanged);
			this._категорияВопроса.OnChanging += new System.EventHandler(this.OnКатегорияВопросаChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SubjectQuestion", Storage="_тема", FieldType="Note")]
		public string Тема {
			get {
				return this._тема;
			}
			set {
				if ((value != this._тема)) {
					this.OnPropertyChanging("Тема", this._тема);
					this._тема = value;
					this.OnPropertyChanged("Тема");
				}
			}
		}
		
        //[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x0444__x043e__x0440__x04", Storage="_кнопкаСформироватьПовестку", ReadOnly=true, FieldType="WorkflowStatus")]
        //public System.Nullable<int> КнопкаСформироватьПовестку {
        //    get {
        //        return this._кнопкаСформироватьПовестку;
        //    }
        //    set {
        //        if ((value != this._кнопкаСформироватьПовестку)) {
        //            this.OnPropertyChanging("КнопкаСформироватьПовестку", this._кнопкаСформироватьПовестку);
        //            this._кнопкаСформироватьПовестку = value;
        //            this.OnPropertyChanged("КнопкаСформироватьПовестку");
        //        }
        //    }
        //}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="adress", Storage="_адрес", FieldType="Note")]
		public string Адрес {
			get {
				return this._адрес;
			}
			set {
				if ((value != this._адрес)) {
					this.OnPropertyChanging("Адрес", this._адрес);
					this._адрес = value;
					this.OnPropertyChanged("Адрес");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="kadnomber", Storage="_кадастровыйНомер", FieldType="Text")]
		public string КадастровыйНомер {
			get {
				return this._кадастровыйНомер;
			}
			set {
				if ((value != this._кадастровыйНомер)) {
					this.OnPropertyChanging("КадастровыйНомер", this._кадастровыйНомер);
					this._кадастровыйНомер = value;
					this.OnPropertyChanged("КадастровыйНомер");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="speaker", Storage="_докладчик", FieldType="Text")]
		public string Докладчик {
			get {
				return this._докладчик;
			}
			set {
				if ((value != this._докладчик)) {
					this.OnPropertyChanging("Докладчик", this._докладчик);
					this._докладчик = value;
					this.OnPropertyChanged("Докладчик");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueOrderMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueOrderMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="designer", Storage="_проектировщик", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Проектная организация")]
		public ПроектнаяОрганизацияЭлемент Проектировщик {
			get {
				return this._проектировщик.GetEntity();
			}
			set {
				this._проектировщик.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="municipality", Storage="_муниципальныйРайон", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Муниципальные районы")]
		public МуниципальныеРайоныЭлемент МуниципальныйРайон {
			get {
				return this._муниципальныйРайон.GetEntity();
			}
			set {
				this._муниципальныйРайон.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="settlement", Storage="_поселение", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Поселения")]
		public ПоселенияЭлемент Поселение {
			get {
				return this._поселение.GetEntity();
			}
			set {
				this._поселение.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="QuaestionCategory", Storage="_категорияВопроса", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Категории вопросов")]
		public КатегорииВопросовКатегорияВопроса КатегорияВопроса {
			get {
				return this._категорияВопроса.GetEntity();
			}
			set {
				this._категорияВопроса.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Ссылка на справочник объектов
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override ОбъектыЭлемент Объект {
			get {
				throw new System.InvalidOperationException("Field OrderObjectMVK was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderObjectMVK was removed from content type Элемент.");
			}
		}
		
		/// <summary>
		/// Автор заявки МВК, ссылка на справочник организаций
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override СправочникОрганизацийОрганизация АвторЗаявки {
			get {
				throw new System.InvalidOperationException("Field OrderOrgAuthorMVK was removed from content type Элемент.");
			}
			set {
				throw new System.InvalidOperationException("Field OrderOrgAuthorMVK was removed from content type Элемент.");
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заявка = this;
			}
			else {
				e.Item.Заявка = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Заявка = this;
			}
			else {
				e.Item.Заявка = null;
			}
		}
		
		private void OnПроектировщикChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Проектировщик", this._проектировщик.Clone());
		}
		
		private void OnПроектировщикChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Проектировщик");
		}
		
		private void OnПроектировщикSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПроектнаяОрганизацияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РГЗаявкиЭлемент.Add(this);
			}
			else {
				e.Item.РГЗаявкиЭлемент.Remove(this);
			}
		}
		
		private void OnМуниципальныйРайонChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("МуниципальныйРайон", this._муниципальныйРайон.Clone());
		}
		
		private void OnМуниципальныйРайонChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("МуниципальныйРайон");
		}
		
		private void OnМуниципальныйРайонSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<МуниципальныеРайоныЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РГЗаявкиЭлемент.Add(this);
			}
			else {
				e.Item.РГЗаявкиЭлемент.Remove(this);
			}
		}
		
		private void OnПоселениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Поселение", this._поселение.Clone());
		}
		
		private void OnПоселениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Поселение");
		}
		
		private void OnПоселениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ПоселенияЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РГЗаявкиЭлемент.Add(this);
			}
			else {
				e.Item.РГЗаявкиЭлемент.Remove(this);
			}
		}
		
		private void OnКатегорияВопросаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("КатегорияВопроса", this._категорияВопроса.Clone());
		}
		
		private void OnКатегорияВопросаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("КатегорияВопроса");
		}
		
		private void OnКатегорияВопросаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<КатегорииВопросовКатегорияВопроса> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.РГЗаявкиЭлемент.Add(this);
			}
			else {
				e.Item.РГЗаявкиЭлемент.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Описание связи одного вопроса повестки с другим
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Связанный вопрос", Id="0x01", List="Связанные вопросы")]
	public partial class СвязанныеВопросыСвязанныйВопрос : Элемент {
		
		private string _комментарийКСвязи;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _вопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки> _связанныйВопрос;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СвязанныеВопросыСвязанныйВопрос() {
			this._вопросПовестки = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._вопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnВопросПовесткиSync);
			this._вопросПовестки.OnChanged += new System.EventHandler(this.OnВопросПовесткиChanged);
			this._вопросПовестки.OnChanging += new System.EventHandler(this.OnВопросПовесткиChanging);
			this._связанныйВопрос = new Microsoft.SharePoint.Linq.EntityRef<АКВопросыЗаседанияВопросПовестки>();
			this._связанныйВопрос.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnСвязанныйВопросSync);
			this._связанныйВопрос.OnChanged += new System.EventHandler(this.OnСвязанныйВопросChanged);
			this._связанныйВопрос.OnChanging += new System.EventHandler(this.OnСвязанныйВопросChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AgendaLinkedQuestionComment", Storage="_комментарийКСвязи", FieldType="Note")]
		public string КомментарийКСвязи {
			get {
				return this._комментарийКСвязи;
			}
			set {
				if ((value != this._комментарийКСвязи)) {
					this.OnPropertyChanging("КомментарийКСвязи", this._комментарийКСвязи);
					this._комментарийКСвязи = value;
					this.OnPropertyChanged("КомментарийКСвязи");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Связанный вопрос.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Связанный вопрос.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionLink", Storage="_вопросПовестки", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки ВопросПовестки {
			get {
				return this._вопросПовестки.GetEntity();
			}
			set {
				this._вопросПовестки.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaLinkedQuestionLink", Storage="_связанныйВопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public АКВопросыЗаседанияВопросПовестки СвязанныйВопрос {
			get {
				return this._связанныйВопрос.GetEntity();
			}
			set {
				this._связанныйВопрос.SetEntity(value);
			}
		}
		
		private void OnВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВопросПовестки", this._вопросПовестки.Clone());
		}
		
		private void OnВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВопросПовестки");
		}
		
		private void OnВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
		}
		
		private void OnСвязанныйВопросChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СвязанныйВопрос", this._связанныйВопрос.Clone());
		}
		
		private void OnСвязанныйВопросChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СвязанныйВопрос");
		}
		
		private void OnСвязанныйВопросSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СвязанныеВопросыСвязанныйВопрос.Add(this);
			}
			else {
				e.Item.СвязанныеВопросыСвязанныйВопрос.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Position", Id="0x01", List="Справочник должностей")]
	public partial class СправочникДолжностейPosition : Элемент {
		
		private string _название0;
		
		private string _наименованиеРодительныйПадеж;
		
		private string _наименованиеДательныйПадеж;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _справочникУчастниковУчастник;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СправочникДолжностейPosition() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._assignmentMVK = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVKSync);
			this._assignmentMVK.OnChanged += new System.EventHandler(this.OnAssignmentMVKChanged);
			this._assignmentMVK.OnChanging += new System.EventHandler(this.OnAssignmentMVKChanging);
			this._аКПорученияПоручение = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручениеSync);
			this._аКПорученияПоручение.OnChanged += new System.EventHandler(this.OnАКПорученияПоручениеChanged);
			this._аКПорученияПоручение.OnChanging += new System.EventHandler(this.OnАКПорученияПоручениеChanging);
			this._справочникУчастниковУчастник = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._справочникУчастниковУчастник.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСправочникУчастниковУчастникSync);
			this._справочникУчастниковУчастник.OnChanged += new System.EventHandler(this.OnСправочникУчастниковУчастникChanged);
			this._справочникУчастниковУчастник.OnChanging += new System.EventHandler(this.OnСправочникУчастниковУчастникChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_название0", ReadOnly=true, FieldType="Computed")]
		public string Название0 {
			get {
				return this._название0;
			}
			set {
				if ((value != this._название0)) {
					this.OnPropertyChanging("Название0", this._название0);
					this._название0 = value;
					this.OnPropertyChanged("Название0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PositionNameGenitive", Storage="_наименованиеРодительныйПадеж", FieldType="Text")]
		public string НаименованиеРодительныйПадеж {
			get {
				return this._наименованиеРодительныйПадеж;
			}
			set {
				if ((value != this._наименованиеРодительныйПадеж)) {
					this.OnPropertyChanging("НаименованиеРодительныйПадеж", this._наименованиеРодительныйПадеж);
					this._наименованиеРодительныйПадеж = value;
					this.OnPropertyChanged("НаименованиеРодительныйПадеж");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PositionNameDative", Storage="_наименованиеДательныйПадеж", FieldType="Text")]
		public string НаименованиеДательныйПадеж {
			get {
				return this._наименованиеДательныйПадеж;
			}
			set {
				if ((value != this._наименованиеДательныйПадеж)) {
					this.OnPropertyChanging("НаименованиеДательныйПадеж", this._наименованиеДательныйПадеж);
					this._наименованиеДательныйПадеж = value;
					this.OnPropertyChanged("НаименованиеДательныйПадеж");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Position.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Position.");
			}
		}
		
		/// <summary>
		/// Должность исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		/// <summary>
		/// Должность исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionMVK", Storage="_assignmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK {
			get {
				return this._assignmentMVK;
			}
			set {
				this._assignmentMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorPositionLink", Storage="_аКПорученияПоручение", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение {
			get {
				return this._аКПорученияПоручение;
			}
			set {
				this._аКПорученияПоручение.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ParticipantPositionLink", Storage="_справочникУчастниковУчастник", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> СправочникУчастниковУчастник {
			get {
				return this._справочникУчастниковУчастник;
			}
			set {
				this._справочникУчастниковУчастник.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДолжностьИсполнителя = this;
			}
			else {
				e.Item.ДолжностьИсполнителя = null;
			}
		}
		
		private void OnAssignmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK", this._assignmentMVK.Clone());
		}
		
		private void OnAssignmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK");
		}
		
		private void OnAssignmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДолжностьИсполнителя = this;
			}
			else {
				e.Item.ДолжностьИсполнителя = null;
			}
		}
		
		private void OnАКПорученияПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение", this._аКПорученияПоручение.Clone());
		}
		
		private void OnАКПорученияПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение");
		}
		
		private void OnАКПорученияПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ДолжностьИсполнителя = this;
			}
			else {
				e.Item.ДолжностьИсполнителя = null;
			}
		}
		
		private void OnСправочникУчастниковУчастникChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СправочникУчастниковУчастник", this._справочникУчастниковУчастник.Clone());
		}
		
		private void OnСправочникУчастниковУчастникChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СправочникУчастниковУчастник");
		}
		
		private void OnСправочникУчастниковУчастникSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Должность = this;
			}
			else {
				e.Item.Должность = null;
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Организация", Id="0x01", List="Справочник организаций")]
	public partial class СправочникОрганизацийОрганизация : Элемент {
		
		private string _наименование;
		
		private string _описание;
		
		private string _полноеНаименование;
		
		private string _видОрганизации;
		
		private System.Nullable<bool> _организацияПодключенаКГрадСовету;
		
		private System.Nullable<System.DateTime> _датаПодключенияКСистеме;
		
		private System.Nullable<bool> _новаяМосква;
		
		private System.Nullable<ТипОрганизации> _типОрганизации;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<ГенеральныеПланыЭлемент> _генеральныеПланыЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> _документТПЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникОрганизацийОрганизация> _справочникОрганизацийОрганизация0;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _вышестоящаяОрганизация;
		
		private Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> _справочникУчастниковУчастник;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СправочникОрганизацийОрганизация() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._генеральныеПланыЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ГенеральныеПланыЭлемент>();
			this._генеральныеПланыЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенеральныеПланыЭлемент>>(this.OnГенеральныеПланыЭлементSync);
			this._генеральныеПланыЭлемент.OnChanged += new System.EventHandler(this.OnГенеральныеПланыЭлементChanged);
			this._генеральныеПланыЭлемент.OnChanging += new System.EventHandler(this.OnГенеральныеПланыЭлементChanging);
			this._документТПЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент>();
			this._документТПЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент>>(this.OnДокументТПЭлементSync);
			this._документТПЭлемент.OnChanged += new System.EventHandler(this.OnДокументТПЭлементChanged);
			this._документТПЭлемент.OnChanging += new System.EventHandler(this.OnДокументТПЭлементChanging);
			this._assignmentMVK = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVKSync);
			this._assignmentMVK.OnChanged += new System.EventHandler(this.OnAssignmentMVKChanged);
			this._assignmentMVK.OnChanging += new System.EventHandler(this.OnAssignmentMVKChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._аКПорученияПоручение = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручениеSync);
			this._аКПорученияПоручение.OnChanged += new System.EventHandler(this.OnАКПорученияПоручениеChanged);
			this._аКПорученияПоручение.OnChanging += new System.EventHandler(this.OnАКПорученияПоручениеChanging);
			this._справочникОрганизацийОрганизация0 = new Microsoft.SharePoint.Linq.EntitySet<СправочникОрганизацийОрганизация>();
			this._справочникОрганизацийОрганизация0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnСправочникОрганизацийОрганизация0Sync);
			this._справочникОрганизацийОрганизация0.OnChanged += new System.EventHandler(this.OnСправочникОрганизацийОрганизация0Changed);
			this._справочникОрганизацийОрганизация0.OnChanging += new System.EventHandler(this.OnСправочникОрганизацийОрганизация0Changing);
			this._вышестоящаяОрганизация = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._вышестоящаяОрганизация.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnВышестоящаяОрганизацияSync);
			this._вышестоящаяОрганизация.OnChanged += new System.EventHandler(this.OnВышестоящаяОрганизацияChanged);
			this._вышестоящаяОрганизация.OnChanging += new System.EventHandler(this.OnВышестоящаяОрганизацияChanging);
			this._справочникУчастниковУчастник = new Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник>();
			this._справочникУчастниковУчастник.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник>>(this.OnСправочникУчастниковУчастникSync);
			this._справочникУчастниковУчастник.OnChanged += new System.EventHandler(this.OnСправочникУчастниковУчастникChanged);
			this._справочникУчастниковУчастник.OnChanging += new System.EventHandler(this.OnСправочникУчастниковУчастникChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationName", Storage="_наименование", Required=true, FieldType="Text")]
		public string Наименование {
			get {
				return this._наименование;
			}
			set {
				if ((value != this._наименование)) {
					this.OnPropertyChanging("Наименование", this._наименование);
					this._наименование = value;
					this.OnPropertyChanged("Наименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationDescription", Storage="_описание", FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationFullName", Storage="_полноеНаименование", FieldType="Note")]
		public string ПолноеНаименование {
			get {
				return this._полноеНаименование;
			}
			set {
				if ((value != this._полноеНаименование)) {
					this.OnPropertyChanging("ПолноеНаименование", this._полноеНаименование);
					this._полноеНаименование = value;
					this.OnPropertyChanged("ПолноеНаименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0422__x041e__x0020__x0422__x04", Storage="_видОрганизации", ReadOnly=true, IsCalculated=true, FieldType="Text")]
		public string ВидОрганизации {
			get {
				return this._видОрганизации;
			}
			set {
				if ((value != this._видОрганизации)) {
					this.OnPropertyChanging("ВидОрганизации", this._видОрганизации);
					this._видОрганизации = value;
					this.OnPropertyChanged("ВидОрганизации");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x0440__x0433__x0430__x04", Storage="_организацияПодключенаКГрадСовету", FieldType="Boolean")]
		public System.Nullable<bool> ОрганизацияПодключенаКГрадСовету {
			get {
				return this._организацияПодключенаКГрадСовету;
			}
			set {
				if ((value != this._организацияПодключенаКГрадСовету)) {
					this.OnPropertyChanging("ОрганизацияПодключенаКГрадСовету", this._организацияПодключенаКГрадСовету);
					this._организацияПодключенаКГрадСовету = value;
					this.OnPropertyChanged("ОрганизацияПодключенаКГрадСовету");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0414__x0430__x0442__x0430__x00", Storage="_датаПодключенияКСистеме", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаПодключенияКСистеме {
			get {
				return this._датаПодключенияКСистеме;
			}
			set {
				if ((value != this._датаПодключенияКСистеме)) {
					this.OnPropertyChanging("ДатаПодключенияКСистеме", this._датаПодключенияКСистеме);
					this._датаПодключенияКСистеме = value;
					this.OnPropertyChanged("ДатаПодключенияКСистеме");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041d__x043e__x0432__x0430__x04", Storage="_новаяМосква", FieldType="Boolean")]
		public System.Nullable<bool> НоваяМосква {
			get {
				return this._новаяМосква;
			}
			set {
				if ((value != this._новаяМосква)) {
					this.OnPropertyChanging("НоваяМосква", this._новаяМосква);
					this._новаяМосква = value;
					this.OnPropertyChanged("НоваяМосква");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Организация.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Организация.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0422__x0438__x043f__x0020__x04", Storage="_типОрганизации", FieldType="Choice")]
		public System.Nullable<ТипОрганизации> ТипОрганизации {
			get {
				return this._типОрганизации;
			}
			set {
				if ((value != this._типОрганизации)) {
					this.OnPropertyChanging("ТипОрганизации", this._типОрганизации);
					this._типОрганизации = value;
					this.OnPropertyChanged("ТипОрганизации");
				}
			}
		}
		
		/// <summary>
		/// Организация исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrgMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041d__x0430__x0438__x043c__x04", Storage="_генеральныеПланыЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Генеральные планы")]
		public Microsoft.SharePoint.Linq.EntitySet<ГенеральныеПланыЭлемент> ГенеральныеПланыЭлемент {
			get {
				return this._генеральныеПланыЭлемент;
			}
			set {
				this._генеральныеПланыЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="organization", Storage="_документТПЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Документ ТП")]
		public Microsoft.SharePoint.Linq.EntitySet<ДокументТПЭлемент> ДокументТПЭлемент {
			get {
				return this._документТПЭлемент;
			}
			set {
				this._документТПЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Организация исполнителя по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrgMVK", Storage="_assignmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK {
			get {
				return this._assignmentMVK;
			}
			set {
				this._assignmentMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionDeclarant", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorOrganizationLink", Storage="_аКПорученияПоручение", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение {
			get {
				return this._аКПорученияПоручение;
			}
			set {
				this._аКПорученияПоручение.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrganizationParentOrgLink", Storage="_справочникОрганизацийОрганизация0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Справочник организаций")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникОрганизацийОрганизация> СправочникОрганизацийОрганизация0 {
			get {
				return this._справочникОрганизацийОрганизация0;
			}
			set {
				this._справочникОрганизацийОрганизация0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OrganizationParentOrgLink", Storage="_вышестоящаяОрганизация", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация ВышестоящаяОрганизация {
			get {
				return this._вышестоящаяОрганизация.GetEntity();
			}
			set {
				this._вышестоящаяОрганизация.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ParticipantOrgLink", Storage="_справочникУчастниковУчастник", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Справочник участников")]
		public Microsoft.SharePoint.Linq.EntitySet<СправочникУчастниковУчастник> СправочникУчастниковУчастник {
			get {
				return this._справочникУчастниковУчастник;
			}
			set {
				this._справочникУчастниковУчастник.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОрганизацияИсполнителя = this;
			}
			else {
				e.Item.ОрганизацияИсполнителя = null;
			}
		}
		
		private void OnГенеральныеПланыЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ГенеральныеПланыЭлемент", this._генеральныеПланыЭлемент.Clone());
		}
		
		private void OnГенеральныеПланыЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ГенеральныеПланыЭлемент");
		}
		
		private void OnГенеральныеПланыЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ГенеральныеПланыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.НаименованиеРайона = this;
			}
			else {
				e.Item.НаименованиеРайона = null;
			}
		}
		
		private void OnДокументТПЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ДокументТПЭлемент", this._документТПЭлемент.Clone());
		}
		
		private void OnДокументТПЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ДокументТПЭлемент");
		}
		
		private void OnДокументТПЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ДокументТПЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.УполномоченыйОрган = this;
			}
			else {
				e.Item.УполномоченыйОрган = null;
			}
		}
		
		private void OnAssignmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK", this._assignmentMVK.Clone());
		}
		
		private void OnAssignmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK");
		}
		
		private void OnAssignmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОрганизацияИсполнителя = this;
			}
			else {
				e.Item.ОрганизацияИсполнителя = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ЗаявительНаКомиссию = this;
			}
			else {
				e.Item.ЗаявительНаКомиссию = null;
			}
		}
		
		private void OnАКПорученияПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение", this._аКПорученияПоручение.Clone());
		}
		
		private void OnАКПорученияПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение");
		}
		
		private void OnАКПорученияПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОрганизацияИсполнителя = this;
			}
			else {
				e.Item.ОрганизацияИсполнителя = null;
			}
		}
		
		private void OnСправочникОрганизацийОрганизация0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СправочникОрганизацийОрганизация0", this._справочникОрганизацийОрганизация0.Clone());
		}
		
		private void OnСправочникОрганизацийОрганизация0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СправочникОрганизацийОрганизация0");
		}
		
		private void OnСправочникОрганизацийОрганизация0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ВышестоящаяОрганизация = this;
			}
			else {
				e.Item.ВышестоящаяОрганизация = null;
			}
		}
		
		private void OnВышестоящаяОрганизацияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ВышестоящаяОрганизация", this._вышестоящаяОрганизация.Clone());
		}
		
		private void OnВышестоящаяОрганизацияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ВышестоящаяОрганизация");
		}
		
		private void OnВышестоящаяОрганизацияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СправочникОрганизацийОрганизация0.Add(this);
			}
			else {
				e.Item.СправочникОрганизацийОрганизация0.Remove(this);
			}
		}
		
		private void OnСправочникУчастниковУчастникChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СправочникУчастниковУчастник", this._справочникУчастниковУчастник.Clone());
		}
		
		private void OnСправочникУчастниковУчастникChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СправочникУчастниковУчастник");
		}
		
		private void OnСправочникУчастниковУчастникSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникУчастниковУчастник> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Организация = this;
			}
			else {
				e.Item.Организация = null;
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Участник", Id="0x01", List="Справочник участников")]
	public partial class СправочникУчастниковУчастник : Элемент {
		
		private string _фИО;
		
		private string _фИОВРодительномПадеже;
		
		private string _фИОВДательномПадеже;
		
		private string _описание;
		
		private System.Nullable<int> _справочникУчастников;
		
		private System.Nullable<ПризнакУчастия> _признакУчастия;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа0;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа1;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа2;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа3;
		
		private Microsoft.SharePoint.Linq.EntitySet<АварийныйЖилищныйФондЭлемент> _аварийныйЖилищныйФондЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<IssueMVK> _issueMVK0;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK0;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK1;
		
		private Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент> _согласительноеСовещаниеЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<ФондВетхогоЖильяЭлемент> _фондВетхогоЖильяЭлемент;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> _аКВопросыЗаседанияВопросПовестки0;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> _аКЗаседанияЗаседание;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> _аКЗаседанияЗаседание0;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> _аКЗаседанияЗаседание1;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение0;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение1;
		
		private Microsoft.SharePoint.Linq.EntitySet<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения> _записиЖурналовПорученийЗаписьЖурналаПоручения;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition> _должность;
		
		private Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация> _организация;
		
		private System.Nullable<int> _профильId;
		
		private string _профильImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СправочникУчастниковУчастник() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._системнаяКоллекцияМультимедиа0 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа0Sync);
			this._системнаяКоллекцияМультимедиа0.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changed);
			this._системнаяКоллекцияМультимедиа0.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа0Changing);
			this._системнаяКоллекцияМультимедиа1 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа1Sync);
			this._системнаяКоллекцияМультимедиа1.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа1Changed);
			this._системнаяКоллекцияМультимедиа1.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа1Changing);
			this._системнаяКоллекцияМультимедиа2 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа2Sync);
			this._системнаяКоллекцияМультимедиа2.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа2Changed);
			this._системнаяКоллекцияМультимедиа2.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа2Changing);
			this._системнаяКоллекцияМультимедиа3 = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа3.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиа3Sync);
			this._системнаяКоллекцияМультимедиа3.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа3Changed);
			this._системнаяКоллекцияМультимедиа3.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиа3Changing);
			this._аварийныйЖилищныйФондЭлемент = new Microsoft.SharePoint.Linq.EntitySet<АварийныйЖилищныйФондЭлемент>();
			this._аварийныйЖилищныйФондЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АварийныйЖилищныйФондЭлемент>>(this.OnАварийныйЖилищныйФондЭлементSync);
			this._аварийныйЖилищныйФондЭлемент.OnChanged += new System.EventHandler(this.OnАварийныйЖилищныйФондЭлементChanged);
			this._аварийныйЖилищныйФондЭлемент.OnChanging += new System.EventHandler(this.OnАварийныйЖилищныйФондЭлементChanging);
			this._issueMVK = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVKSync);
			this._issueMVK.OnChanged += new System.EventHandler(this.OnIssueMVKChanged);
			this._issueMVK.OnChanging += new System.EventHandler(this.OnIssueMVKChanging);
			this._issueMVK0 = new Microsoft.SharePoint.Linq.EntitySet<IssueMVK>();
			this._issueMVK0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK>>(this.OnIssueMVK0Sync);
			this._issueMVK0.OnChanged += new System.EventHandler(this.OnIssueMVK0Changed);
			this._issueMVK0.OnChanging += new System.EventHandler(this.OnIssueMVK0Changing);
			this._assignmentMVK = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVKSync);
			this._assignmentMVK.OnChanged += new System.EventHandler(this.OnAssignmentMVKChanged);
			this._assignmentMVK.OnChanging += new System.EventHandler(this.OnAssignmentMVKChanging);
			this._assignmentMVK0 = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVK0Sync);
			this._assignmentMVK0.OnChanged += new System.EventHandler(this.OnAssignmentMVK0Changed);
			this._assignmentMVK0.OnChanging += new System.EventHandler(this.OnAssignmentMVK0Changing);
			this._assignmentMVK1 = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVK1Sync);
			this._assignmentMVK1.OnChanged += new System.EventHandler(this.OnAssignmentMVK1Changed);
			this._assignmentMVK1.OnChanging += new System.EventHandler(this.OnAssignmentMVK1Changing);
			this._согласительноеСовещаниеЭлемент = new Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент>();
			this._согласительноеСовещаниеЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СогласительноеСовещаниеЭлемент>>(this.OnСогласительноеСовещаниеЭлементSync);
			this._согласительноеСовещаниеЭлемент.OnChanged += new System.EventHandler(this.OnСогласительноеСовещаниеЭлементChanged);
			this._согласительноеСовещаниеЭлемент.OnChanging += new System.EventHandler(this.OnСогласительноеСовещаниеЭлементChanging);
			this._фондВетхогоЖильяЭлемент = new Microsoft.SharePoint.Linq.EntitySet<ФондВетхогоЖильяЭлемент>();
			this._фондВетхогоЖильяЭлемент.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ФондВетхогоЖильяЭлемент>>(this.OnФондВетхогоЖильяЭлементSync);
			this._фондВетхогоЖильяЭлемент.OnChanged += new System.EventHandler(this.OnФондВетхогоЖильяЭлементChanged);
			this._фондВетхогоЖильяЭлемент.OnChanging += new System.EventHandler(this.OnФондВетхогоЖильяЭлементChanging);
			this._аКВопросыЗаседанияВопросПовестки = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовесткиSync);
			this._аКВопросыЗаседанияВопросПовестки.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanged);
			this._аКВопросыЗаседанияВопросПовестки.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовесткиChanging);
			this._аКВопросыЗаседанияВопросПовестки0 = new Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки>();
			this._аКВопросыЗаседанияВопросПовестки0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки>>(this.OnАКВопросыЗаседанияВопросПовестки0Sync);
			this._аКВопросыЗаседанияВопросПовестки0.OnChanged += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовестки0Changed);
			this._аКВопросыЗаседанияВопросПовестки0.OnChanging += new System.EventHandler(this.OnАКВопросыЗаседанияВопросПовестки0Changing);
			this._аКЗаседанияЗаседание = new Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание>();
			this._аКЗаседанияЗаседание.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnАКЗаседанияЗаседаниеSync);
			this._аКЗаседанияЗаседание.OnChanged += new System.EventHandler(this.OnАКЗаседанияЗаседаниеChanged);
			this._аКЗаседанияЗаседание.OnChanging += new System.EventHandler(this.OnАКЗаседанияЗаседаниеChanging);
			this._аКЗаседанияЗаседание0 = new Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание>();
			this._аКЗаседанияЗаседание0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnАКЗаседанияЗаседание0Sync);
			this._аКЗаседанияЗаседание0.OnChanged += new System.EventHandler(this.OnАКЗаседанияЗаседание0Changed);
			this._аКЗаседанияЗаседание0.OnChanging += new System.EventHandler(this.OnАКЗаседанияЗаседание0Changing);
			this._аКЗаседанияЗаседание1 = new Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание>();
			this._аКЗаседанияЗаседание1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание>>(this.OnАКЗаседанияЗаседание1Sync);
			this._аКЗаседанияЗаседание1.OnChanged += new System.EventHandler(this.OnАКЗаседанияЗаседание1Changed);
			this._аКЗаседанияЗаседание1.OnChanging += new System.EventHandler(this.OnАКЗаседанияЗаседание1Changing);
			this._аКПорученияПоручение = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручениеSync);
			this._аКПорученияПоручение.OnChanged += new System.EventHandler(this.OnАКПорученияПоручениеChanged);
			this._аКПорученияПоручение.OnChanging += new System.EventHandler(this.OnАКПорученияПоручениеChanging);
			this._аКПорученияПоручение0 = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручение0Sync);
			this._аКПорученияПоручение0.OnChanged += new System.EventHandler(this.OnАКПорученияПоручение0Changed);
			this._аКПорученияПоручение0.OnChanging += new System.EventHandler(this.OnАКПорученияПоручение0Changing);
			this._аКПорученияПоручение1 = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручение1Sync);
			this._аКПорученияПоручение1.OnChanged += new System.EventHandler(this.OnАКПорученияПоручение1Changed);
			this._аКПорученияПоручение1.OnChanging += new System.EventHandler(this.OnАКПорученияПоручение1Changing);
			this._записиЖурналовПорученийЗаписьЖурналаПоручения = new Microsoft.SharePoint.Linq.EntitySet<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения>();
			this._записиЖурналовПорученийЗаписьЖурналаПоручения.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения>>(this.OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияSync);
			this._записиЖурналовПорученийЗаписьЖурналаПоручения.OnChanged += new System.EventHandler(this.OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияChanged);
			this._записиЖурналовПорученийЗаписьЖурналаПоручения.OnChanging += new System.EventHandler(this.OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияChanging);
			this._должность = new Microsoft.SharePoint.Linq.EntityRef<СправочникДолжностейPosition>();
			this._должность.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition>>(this.OnДолжностьSync);
			this._должность.OnChanged += new System.EventHandler(this.OnДолжностьChanged);
			this._должность.OnChanging += new System.EventHandler(this.OnДолжностьChanging);
			this._организация = new Microsoft.SharePoint.Linq.EntityRef<СправочникОрганизацийОрганизация>();
			this._организация.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация>>(this.OnОрганизацияSync);
			this._организация.OnChanged += new System.EventHandler(this.OnОрганизацияChanged);
			this._организация.OnChanging += new System.EventHandler(this.OnОрганизацияChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantFullName", Storage="_фИО", Required=true, FieldType="Text")]
		public string ФИО {
			get {
				return this._фИО;
			}
			set {
				if ((value != this._фИО)) {
					this.OnPropertyChanging("ФИО", this._фИО);
					this._фИО = value;
					this.OnPropertyChanged("ФИО");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantFullNameGenitive", Storage="_фИОВРодительномПадеже", Required=true, FieldType="Text")]
		public string ФИОВРодительномПадеже {
			get {
				return this._фИОВРодительномПадеже;
			}
			set {
				if ((value != this._фИОВРодительномПадеже)) {
					this.OnPropertyChanging("ФИОВРодительномПадеже", this._фИОВРодительномПадеже);
					this._фИОВРодительномПадеже = value;
					this.OnPropertyChanged("ФИОВРодительномПадеже");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantFullNameDative", Storage="_фИОВДательномПадеже", FieldType="Text")]
		public string ФИОВДательномПадеже {
			get {
				return this._фИОВДательномПадеже;
			}
			set {
				if ((value != this._фИОВДательномПадеже)) {
					this.OnPropertyChanging("ФИОВДательномПадеже", this._фИОВДательномПадеже);
					this._фИОВДательномПадеже = value;
					this.OnPropertyChanged("ФИОВДательномПадеже");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x041e__x043f__x0438__x0441__x04", Storage="_описание", FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0421__x043f__x0440__x0430__x04", Storage="_справочникУчастников", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> СправочникУчастников {
			get {
				return this._справочникУчастников;
			}
			set {
				if ((value != this._справочникУчастников)) {
					this.OnPropertyChanging("СправочникУчастников", this._справочникУчастников);
					this._справочникУчастников = value;
					this.OnPropertyChanged("СправочникУчастников");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Участник.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Участник.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParticipantRole", Storage="_признакУчастия", FieldType="Choice")]
		public System.Nullable<ПризнакУчастия> ПризнакУчастия {
			get {
				return this._признакУчастия;
			}
			set {
				if ((value != this._признакУчастия)) {
					this.OnPropertyChanging("ПризнакУчастия", this._признакУчастия);
					this._признакУчастия = value;
					this.OnPropertyChanged("ПризнакУчастия");
				}
			}
		}
		
		/// <summary>
		/// Ссылка на докладчика по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueReporterMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		/// <summary>
		/// Исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorMVK", Storage="_системнаяКоллекцияМультимедиа0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа0 {
			get {
				return this._системнаяКоллекцияМультимедиа0;
			}
			set {
				this._системнаяКоллекцияМультимедиа0.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылки на содокладчиков по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCoReportesMVK", Storage="_системнаяКоллекцияМультимедиа1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа1 {
			get {
				return this._системнаяКоллекцияМультимедиа1;
			}
			set {
				this._системнаяКоллекцияМультимедиа1.Assign(value);
			}
		}
		
		/// <summary>
		/// Соисполнители по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentCoExecutorsMVK", Storage="_системнаяКоллекцияМультимедиа2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа2 {
			get {
				return this._системнаяКоллекцияМультимедиа2;
			}
			set {
				this._системнаяКоллекцияМультимедиа2.Assign(value);
			}
		}
		
		/// <summary>
		/// Контролер по исполнению поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerMVK", Storage="_системнаяКоллекцияМультимедиа3", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа3 {
			get {
				return this._системнаяКоллекцияМультимедиа3;
			}
			set {
				this._системнаяКоллекцияМультимедиа3.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0414__x043e__x043a__x043b__x04", Storage="_аварийныйЖилищныйФондЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Аварийный жилищный фонд")]
		public Microsoft.SharePoint.Linq.EntitySet<АварийныйЖилищныйФондЭлемент> АварийныйЖилищныйФондЭлемент {
			get {
				return this._аварийныйЖилищныйФондЭлемент;
			}
			set {
				this._аварийныйЖилищныйФондЭлемент.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылки на содокладчиков по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueCoReportesMVK", Storage="_issueMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK {
			get {
				return this._issueMVK;
			}
			set {
				this._issueMVK.Assign(value);
			}
		}
		
		/// <summary>
		/// Ссылка на докладчика по вопросу заседания МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IssueReporterMVK", Storage="_issueMVK0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<IssueMVK> IssueMVK0 {
			get {
				return this._issueMVK0;
			}
			set {
				this._issueMVK0.Assign(value);
			}
		}
		
		/// <summary>
		/// Соисполнители по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentCoExecutorsMVK", Storage="_assignmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK {
			get {
				return this._assignmentMVK;
			}
			set {
				this._assignmentMVK.Assign(value);
			}
		}
		
		/// <summary>
		/// Контролер по исполнению поручения МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerMVK", Storage="_assignmentMVK0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK0 {
			get {
				return this._assignmentMVK0;
			}
			set {
				this._assignmentMVK0.Assign(value);
			}
		}
		
		/// <summary>
		/// Исполнитель по поручению МВК
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorMVK", Storage="_assignmentMVK1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK1 {
			get {
				return this._assignmentMVK1;
			}
			set {
				this._assignmentMVK1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="party", Storage="_согласительноеСовещаниеЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Согласительное совещание")]
		public Microsoft.SharePoint.Linq.EntitySet<СогласительноеСовещаниеЭлемент> СогласительноеСовещаниеЭлемент {
			get {
				return this._согласительноеСовещаниеЭлемент;
			}
			set {
				this._согласительноеСовещаниеЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0414__x043e__x043a__x043b__x04", Storage="_фондВетхогоЖильяЭлемент", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Фонд ветхого жилья")]
		public Microsoft.SharePoint.Linq.EntitySet<ФондВетхогоЖильяЭлемент> ФондВетхогоЖильяЭлемент {
			get {
				return this._фондВетхогоЖильяЭлемент;
			}
			set {
				this._фондВетхогоЖильяЭлемент.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionReporterFullNameLink", Storage="_аКВопросыЗаседанияВопросПовестки", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки {
			get {
				return this._аКВопросыЗаседанияВопросПовестки;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AgendaQuestionSoreporterFullNameLink", Storage="_аКВопросыЗаседанияВопросПовестки0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Вопросы заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКВопросыЗаседанияВопросПовестки> АКВопросыЗаседанияВопросПовестки0 {
			get {
				return this._аКВопросыЗаседанияВопросПовестки0;
			}
			set {
				this._аКВопросыЗаседанияВопросПовестки0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProtocolResponsibleSecretaryLink", Storage="_аКЗаседанияЗаседание", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> АКЗаседанияЗаседание {
			get {
				return this._аКЗаседанияЗаседание;
			}
			set {
				this._аКЗаседанияЗаседание.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecretaryFullNameLink", Storage="_аКЗаседанияЗаседание0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> АКЗаседанияЗаседание0 {
			get {
				return this._аКЗаседанияЗаседание0;
			}
			set {
				this._аКЗаседанияЗаседание0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ProtocolExtParticipants", Storage="_аКЗаседанияЗаседание1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Заседания")]
		public Microsoft.SharePoint.Linq.EntitySet<АКЗаседанияЗаседание> АКЗаседанияЗаседание1 {
			get {
				return this._аКЗаседанияЗаседание1;
			}
			set {
				this._аКЗаседанияЗаседание1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentControllerFullNameLink", Storage="_аКПорученияПоручение", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение {
			get {
				return this._аКПорученияПоручение;
			}
			set {
				this._аКПорученияПоручение.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentExecutorFullNameLink", Storage="_аКПорученияПоручение0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение0 {
			get {
				return this._аКПорученияПоручение0;
			}
			set {
				this._аКПорученияПоручение0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentSoexecutors", Storage="_аКПорученияПоручение1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение1 {
			get {
				return this._аКПорученияПоручение1;
			}
			set {
				this._аКПорученияПоручение1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentJournalEntryExecutorFullNameLink", Storage="_записиЖурналовПорученийЗаписьЖурналаПоручения", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Записи журналов поручений")]
		public Microsoft.SharePoint.Linq.EntitySet<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения> ЗаписиЖурналовПорученийЗаписьЖурналаПоручения {
			get {
				return this._записиЖурналовПорученийЗаписьЖурналаПоручения;
			}
			set {
				this._записиЖурналовПорученийЗаписьЖурналаПоручения.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ParticipantPositionLink", Storage="_должность", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник должностей")]
		public СправочникДолжностейPosition Должность {
			get {
				return this._должность.GetEntity();
			}
			set {
				this._должность.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ParticipantOrgLink", Storage="_организация", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Справочник организаций")]
		public СправочникОрганизацийОрганизация Организация {
			get {
				return this._организация.GetEntity();
			}
			set {
				this._организация.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserProfile", Storage="_профильId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ПрофильId {
			get {
				return this._профильId;
			}
			set {
				if ((value != this._профильId)) {
					this.OnPropertyChanging("ПрофильId", this._профильId);
					this._профильId = value;
					this.OnPropertyChanged("ПрофильId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UserProfile", Storage="_профильImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ПрофильImnName {
			get {
				return this._профильImnName;
			}
			set {
				if ((value != this._профильImnName)) {
					this.OnPropertyChanging("ПрофильImnName", this._профильImnName);
					this._профильImnName = value;
					this.OnPropertyChanged("ПрофильImnName");
				}
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Докладчик = this;
			}
			else {
				e.Item.Докладчик = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа0", this._системнаяКоллекцияМультимедиа0.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа0");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Исполнитель = this;
			}
			else {
				e.Item.Исполнитель = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа1", this._системнаяКоллекцияМультимедиа1.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа1");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Содокладчики = this;
			}
			else {
				e.Item.Содокладчики = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа2", this._системнаяКоллекцияМультимедиа2.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа2");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соисполнители = this;
			}
			else {
				e.Item.Соисполнители = null;
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиа3Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа3", this._системнаяКоллекцияМультимедиа3.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиа3Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа3");
		}
		
		private void OnСистемнаяКоллекцияМультимедиа3Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КонтролерПоручения = this;
			}
			else {
				e.Item.КонтролерПоручения = null;
			}
		}
		
		private void OnАварийныйЖилищныйФондЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АварийныйЖилищныйФондЭлемент", this._аварийныйЖилищныйФондЭлемент.Clone());
		}
		
		private void OnАварийныйЖилищныйФондЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АварийныйЖилищныйФондЭлемент");
		}
		
		private void OnАварийныйЖилищныйФондЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АварийныйЖилищныйФондЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Докладчик = this;
			}
			else {
				e.Item.Докладчик = null;
			}
		}
		
		private void OnIssueMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK", this._issueMVK.Clone());
		}
		
		private void OnIssueMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK");
		}
		
		private void OnIssueMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Содокладчики = this;
			}
			else {
				e.Item.Содокладчики = null;
			}
		}
		
		private void OnIssueMVK0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IssueMVK0", this._issueMVK0.Clone());
		}
		
		private void OnIssueMVK0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IssueMVK0");
		}
		
		private void OnIssueMVK0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IssueMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Докладчик = this;
			}
			else {
				e.Item.Докладчик = null;
			}
		}
		
		private void OnAssignmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK", this._assignmentMVK.Clone());
		}
		
		private void OnAssignmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK");
		}
		
		private void OnAssignmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соисполнители = this;
			}
			else {
				e.Item.Соисполнители = null;
			}
		}
		
		private void OnAssignmentMVK0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK0", this._assignmentMVK0.Clone());
		}
		
		private void OnAssignmentMVK0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK0");
		}
		
		private void OnAssignmentMVK0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.КонтролерПоручения = this;
			}
			else {
				e.Item.КонтролерПоручения = null;
			}
		}
		
		private void OnAssignmentMVK1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK1", this._assignmentMVK1.Clone());
		}
		
		private void OnAssignmentMVK1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK1");
		}
		
		private void OnAssignmentMVK1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Исполнитель = this;
			}
			else {
				e.Item.Исполнитель = null;
			}
		}
		
		private void OnСогласительноеСовещаниеЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СогласительноеСовещаниеЭлемент", this._согласительноеСовещаниеЭлемент.Clone());
		}
		
		private void OnСогласительноеСовещаниеЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СогласительноеСовещаниеЭлемент");
		}
		
		private void OnСогласительноеСовещаниеЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СогласительноеСовещаниеЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Участники.Add(this);
			}
			else {
				e.Item.Участники.Remove(this);
			}
		}
		
		private void OnФондВетхогоЖильяЭлементChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ФондВетхогоЖильяЭлемент", this._фондВетхогоЖильяЭлемент.Clone());
		}
		
		private void OnФондВетхогоЖильяЭлементChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ФондВетхогоЖильяЭлемент");
		}
		
		private void OnФондВетхогоЖильяЭлементSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ФондВетхогоЖильяЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Докладчик = this;
			}
			else {
				e.Item.Докладчик = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки", this._аКВопросыЗаседанияВопросПовестки.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки");
		}
		
		private void OnАКВопросыЗаседанияВопросПовесткиSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Докладчик = this;
			}
			else {
				e.Item.Докладчик = null;
			}
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКВопросыЗаседанияВопросПовестки0", this._аКВопросыЗаседанияВопросПовестки0.Clone());
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКВопросыЗаседанияВопросПовестки0");
		}
		
		private void OnАКВопросыЗаседанияВопросПовестки0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКВопросыЗаседанияВопросПовестки> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Содокладчики.Add(this);
			}
			else {
				e.Item.Содокладчики.Remove(this);
			}
		}
		
		private void OnАКЗаседанияЗаседаниеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКЗаседанияЗаседание", this._аКЗаседанияЗаседание.Clone());
		}
		
		private void OnАКЗаседанияЗаседаниеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКЗаседанияЗаседание");
		}
		
		private void OnАКЗаседанияЗаседаниеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ОтветственныйСекретарь = this;
			}
			else {
				e.Item.ОтветственныйСекретарь = null;
			}
		}
		
		private void OnАКЗаседанияЗаседание0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКЗаседанияЗаседание0", this._аКЗаседанияЗаседание0.Clone());
		}
		
		private void OnАКЗаседанияЗаседание0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКЗаседанияЗаседание0");
		}
		
		private void OnАКЗаседанияЗаседание0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Секретарь = this;
			}
			else {
				e.Item.Секретарь = null;
			}
		}
		
		private void OnАКЗаседанияЗаседание1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКЗаседанияЗаседание1", this._аКЗаседанияЗаседание1.Clone());
		}
		
		private void OnАКЗаседанияЗаседание1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКЗаседанияЗаседание1");
		}
		
		private void OnАКЗаседанияЗаседание1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКЗаседанияЗаседание> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ЧленыГрадостроительногоСовета.Add(this);
			}
			else {
				e.Item.ЧленыГрадостроительногоСовета.Remove(this);
			}
		}
		
		private void OnАКПорученияПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение", this._аКПорученияПоручение.Clone());
		}
		
		private void OnАКПорученияПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение");
		}
		
		private void OnАКПорученияПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Контролер = this;
			}
			else {
				e.Item.Контролер = null;
			}
		}
		
		private void OnАКПорученияПоручение0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение0", this._аКПорученияПоручение0.Clone());
		}
		
		private void OnАКПорученияПоручение0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение0");
		}
		
		private void OnАКПорученияПоручение0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Исполнитель = this;
			}
			else {
				e.Item.Исполнитель = null;
			}
		}
		
		private void OnАКПорученияПоручение1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение1", this._аКПорученияПоручение1.Clone());
		}
		
		private void OnАКПорученияПоручение1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение1");
		}
		
		private void OnАКПорученияПоручение1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Соисполнители.Add(this);
			}
			else {
				e.Item.Соисполнители.Remove(this);
			}
		}
		
		private void OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ЗаписиЖурналовПорученийЗаписьЖурналаПоручения", this._записиЖурналовПорученийЗаписьЖурналаПоручения.Clone());
		}
		
		private void OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ЗаписиЖурналовПорученийЗаписьЖурналаПоручения");
		}
		
		private void OnЗаписиЖурналовПорученийЗаписьЖурналаПорученияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ЗаписиЖурналовПорученийЗаписьЖурналаПоручения> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Исполнитель = this;
			}
			else {
				e.Item.Исполнитель = null;
			}
		}
		
		private void OnДолжностьChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Должность", this._должность.Clone());
		}
		
		private void OnДолжностьChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Должность");
		}
		
		private void OnДолжностьSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникДолжностейPosition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СправочникУчастниковУчастник.Add(this);
			}
			else {
				e.Item.СправочникУчастниковУчастник.Remove(this);
			}
		}
		
		private void OnОрганизацияChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Организация", this._организация.Clone());
		}
		
		private void OnОрганизацияChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Организация");
		}
		
		private void OnОрганизацияSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СправочникОрганизацийОрганизация> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СправочникУчастниковУчастник.Add(this);
			}
			else {
				e.Item.СправочникУчастниковУчастник.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Аналитический показатель", Id="0x0100953A0FE8F958744D9480A5044290C318", List="Суть вопроса")]
	public partial class СутьВопросаАналитическийПоказатель : АналитическийПоказатель {
		
		private System.Nullable<double> _значениеПоНормативу;
		
		private string _комментарий;
		
		private System.Nullable<int> _заполнениеПоляРодительскийОбъект;
		
		private System.Nullable<bool> _флажокСтатистики;
		
		private System.Nullable<ХарактеристикаОтклоненияОтНорматива> _характеристикаОтклоненияОтНорматива;
		
		private Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент> _родительскийОбъект;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СутьВопросаАналитическийПоказатель() {
			this._родительскийОбъект = new Microsoft.SharePoint.Linq.EntityRef<ОбъектыЭлемент>();
			this._родительскийОбъект.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент>>(this.OnРодительскийОбъектSync);
			this._родительскийОбъект.OnChanged += new System.EventHandler(this.OnРодительскийОбъектChanged);
			this._родительскийОбъект.OnChanging += new System.EventHandler(this.OnРодительскийОбъектChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x043d__x0430__x0447__x04", Storage="_значение", FieldType="Text")]
		public override string Значение {
			get {
				return this._значение;
			}
			set {
				if ((value != this._значение)) {
					this.OnPropertyChanging("Значение", this._значение);
					this._значение = value;
					this.OnPropertyChanged("Значение");
				}
			}
		}
		
		/// <summary>
		/// Значение по нормативу
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x043d__x0430__x0447__x040", Storage="_значениеПоНормативу", FieldType="Number")]
		public System.Nullable<double> ЗначениеПоНормативу {
			get {
				return this._значениеПоНормативу;
			}
			set {
				if ((value != this._значениеПоНормативу)) {
					this.OnPropertyChanging("ЗначениеПоНормативу", this._значениеПоНормативу);
					this._значениеПоНормативу = value;
					this.OnPropertyChanged("ЗначениеПоНормативу");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="comment", Storage="_комментарий", FieldType="Text")]
		public string Комментарий {
			get {
				return this._комментарий;
			}
			set {
				if ((value != this._комментарий)) {
					this.OnPropertyChanging("Комментарий", this._комментарий);
					this._комментарий = value;
					this.OnPropertyChanged("Комментарий");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0417__x0430__x043f__x043e__x04", Storage="_заполнениеПоляРодительскийОбъект", ReadOnly=true, FieldType="WorkflowStatus")]
		public System.Nullable<int> ЗаполнениеПоляРодительскийОбъект {
			get {
				return this._заполнениеПоляРодительскийОбъект;
			}
			set {
				if ((value != this._заполнениеПоляРодительскийОбъект)) {
					this.OnPropertyChanging("ЗаполнениеПоляРодительскийОбъект", this._заполнениеПоляРодительскийОбъект);
					this._заполнениеПоляРодительскийОбъект = value;
					this.OnPropertyChanged("ЗаполнениеПоляРодительскийОбъект");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0424__x043b__x0430__x0436__x04", Storage="_флажокСтатистики", FieldType="Boolean")]
		public System.Nullable<bool> ФлажокСтатистики {
			get {
				return this._флажокСтатистики;
			}
			set {
				if ((value != this._флажокСтатистики)) {
					this.OnPropertyChanging("ФлажокСтатистики", this._флажокСтатистики);
					this._флажокСтатистики = value;
					this.OnPropertyChanged("ФлажокСтатистики");
				}
			}
		}
		
		/// <summary>
		/// Характеристика отклонения от норматива
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0425__x0430__x0440__x0430__x04", Storage="_характеристикаОтклоненияОтНорматива", FieldType="Choice")]
		public System.Nullable<ХарактеристикаОтклоненияОтНорматива> ХарактеристикаОтклоненияОтНорматива {
			get {
				return this._характеристикаОтклоненияОтНорматива;
			}
			set {
				if ((value != this._характеристикаОтклоненияОтНорматива)) {
					this.OnPropertyChanging("ХарактеристикаОтклоненияОтНорматива", this._характеристикаОтклоненияОтНорматива);
					this._характеристикаОтклоненияОтНорматива = value;
					this.OnPropertyChanged("ХарактеристикаОтклоненияОтНорматива");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0412__x043e__x043f__x0440__x04", Storage="_вопрос", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="АК - Вопросы заседания")]
		public override АКВопросыЗаседанияВопросПовестки Вопрос {
			get {
				return this._вопрос.GetEntity();
			}
			set {
				this._вопрос.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x043a__x0430__x04", Storage="_показатель", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Аналитические показатели")]
		public override Элемент Показатель {
			get {
				return this._показатель.GetEntity();
			}
			set {
				this._показатель.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041f__x043e__x0434__x0433__x04", Storage="_подгруппа", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Подгруппы аналитических показателей")]
		public override ПодгруппыАналитическихПоказателейЭлемент Подгруппа {
			get {
				return this._подгруппа.GetEntity();
			}
			set {
				this._подгруппа.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x0415__x0434__x0438__x043d__x04", Storage="_единицаИзмерения", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Единицы измерения показателей")]
		public override Элемент ЕдиницаИзмерения {
			get {
				return this._единицаИзмерения.GetEntity();
			}
			set {
				this._единицаИзмерения.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="_x041e__x0431__x044a__x0435__x04", Storage="_объект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public override ОбъектыЭлемент Объект {
			get {
				return this._объект.GetEntity();
			}
			set {
				this._объект.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rod_object", Storage="_родительскийОбъект", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Объекты")]
		public ОбъектыЭлемент РодительскийОбъект {
			get {
				return this._родительскийОбъект.GetEntity();
			}
			set {
				this._родительскийОбъект.SetEntity(value);
			}
		}
		
		private void OnРодительскийОбъектChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("РодительскийОбъект", this._родительскийОбъект.Clone());
		}
		
		private void OnРодительскийОбъектChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("РодительскийОбъект");
		}
		
		private void OnРодительскийОбъектSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ОбъектыЭлемент> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.СутьВопросаАналитическийПоказатель.Add(this);
			}
			else {
				e.Item.СутьВопросаАналитическийПоказатель.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Справочная сущность для типов поручений
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Тип поручения", Id="0x01", List="Типы поручений")]
	public partial class ТипыПорученийТипПоручения : Элемент {
		
		private string _наименование;
		
		private string _описание;
		
		private Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> _системнаяКоллекцияМультимедиа;
		
		private Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> _assignmentMVK;
		
		private Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> _аКПорученияПоручение;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ТипыПорученийТипПоручения() {
			this._системнаяКоллекцияМультимедиа = new Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа>();
			this._системнаяКоллекцияМультимедиа.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа>>(this.OnСистемнаяКоллекцияМультимедиаSync);
			this._системнаяКоллекцияМультимедиа.OnChanged += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanged);
			this._системнаяКоллекцияМультимедиа.OnChanging += new System.EventHandler(this.OnСистемнаяКоллекцияМультимедиаChanging);
			this._assignmentMVK = new Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK>();
			this._assignmentMVK.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK>>(this.OnAssignmentMVKSync);
			this._assignmentMVK.OnChanged += new System.EventHandler(this.OnAssignmentMVKChanged);
			this._assignmentMVK.OnChanging += new System.EventHandler(this.OnAssignmentMVKChanging);
			this._аКПорученияПоручение = new Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение>();
			this._аКПорученияПоручение.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение>>(this.OnАКПорученияПоручениеSync);
			this._аКПорученияПоручение.OnChanged += new System.EventHandler(this.OnАКПорученияПоручениеChanged);
			this._аКПорученияПоручение.OnChanging += new System.EventHandler(this.OnАКПорученияПоручениеChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentTypeName", Storage="_наименование", Required=true, FieldType="Text")]
		public string Наименование {
			get {
				return this._наименование;
			}
			set {
				if ((value != this._наименование)) {
					this.OnPropertyChanging("Наименование", this._наименование);
					this._наименование = value;
					this.OnPropertyChanged("Наименование");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignmentTypeDescr", Storage="_описание", FieldType="Note")]
		public string Описание {
			get {
				return this._описание;
			}
			set {
				if ((value != this._описание)) {
					this.OnPropertyChanging("Описание", this._описание);
					this._описание = value;
					this.OnPropertyChanged("Описание");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Название {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Тип поручения.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Тип поручения.");
			}
		}
		
		/// <summary>
		/// Тип поручения
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeMVK", Storage="_системнаяКоллекцияМультимедиа", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<СистемнаяКоллекцияМультимедиа> СистемнаяКоллекцияМультимедиа {
			get {
				return this._системнаяКоллекцияМультимедиа;
			}
			set {
				this._системнаяКоллекцияМультимедиа.Assign(value);
			}
		}
		
		/// <summary>
		/// Тип поручения
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeMVK", Storage="_assignmentMVK", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="РГ - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<AssignmentMVK> AssignmentMVK {
			get {
				return this._assignmentMVK;
			}
			set {
				this._assignmentMVK.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AssignmentTypeLink", Storage="_аКПорученияПоручение", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="АК - Поручения")]
		public Microsoft.SharePoint.Linq.EntitySet<АКПорученияПоручение> АКПорученияПоручение {
			get {
				return this._аКПорученияПоручение;
			}
			set {
				this._аКПорученияПоручение.Assign(value);
			}
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("СистемнаяКоллекцияМультимедиа", this._системнаяКоллекцияМультимедиа.Clone());
		}
		
		private void OnСистемнаяКоллекцияМультимедиаChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("СистемнаяКоллекцияМультимедиа");
		}
		
		private void OnСистемнаяКоллекцияМультимедиаSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<СистемнаяКоллекцияМультимедиа> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ТипПоручения = this;
			}
			else {
				e.Item.ТипПоручения = null;
			}
		}
		
		private void OnAssignmentMVKChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AssignmentMVK", this._assignmentMVK.Clone());
		}
		
		private void OnAssignmentMVKChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AssignmentMVK");
		}
		
		private void OnAssignmentMVKSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AssignmentMVK> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ТипПоручения = this;
			}
			else {
				e.Item.ТипПоручения = null;
			}
		}
		
		private void OnАКПорученияПоручениеChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("АКПорученияПоручение", this._аКПорученияПоручение.Clone());
		}
		
		private void OnАКПорученияПоручениеChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("АКПорученияПоручение");
		}
		
		private void OnАКПорученияПоручениеSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<АКПорученияПоручение> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ТипПоручения = this;
			}
			else {
				e.Item.ТипПоручения = null;
			}
		}
	}
	
	/// <summary>
	/// Отправка изображения.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Изображение", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00AADE34325A8B49CDA8BB4DB53328F214")]
	public partial class Изображение : МультимедийныйАктив {
		
		private string _размерРисунка;
		
		private System.Nullable<int> _высотаРисунка;
		
		private string _заметки;
		
		private string _автор;
		
		private System.Nullable<System.DateTime> _датаСозданияРисунка;
		
		private string _авторскиеПрава;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Изображение() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_размерРисунка", FieldType="Computed")]
		public string РазмерРисунка {
			get {
				return this._размерРисунка;
			}
			set {
				if ((value != this._размерРисунка)) {
					this.OnPropertyChanging("РазмерРисунка", this._размерРисунка);
					this._размерРисунка = value;
					this.OnPropertyChanged("РазмерРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_высотаРисунка", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> ВысотаРисунка {
			get {
				return this._высотаРисунка;
			}
			set {
				if ((value != this._высотаРисунка)) {
					this.OnPropertyChanging("ВысотаРисунка", this._высотаРисунка);
					this._высотаРисунка = value;
					this.OnPropertyChanged("ВысотаРисунка");
				}
			}
		}
		
		/// <summary>
		/// Сводные сведения об этом ресурсе
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		/// <summary>
		/// Первоначальный автор
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_автор", FieldType="Text")]
		public string Автор {
			get {
				return this._автор;
			}
			set {
				if ((value != this._автор)) {
					this.OnPropertyChanging("Автор", this._автор);
					this._автор = value;
					this.OnPropertyChanged("Автор");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_датаСозданияРисунка", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСозданияРисунка {
			get {
				return this._датаСозданияРисунка;
			}
			set {
				if ((value != this._датаСозданияРисунка)) {
					this.OnPropertyChanging("ДатаСозданияРисунка", this._датаСозданияРисунка);
					this._датаСозданияРисунка = value;
					this.OnPropertyChanged("ДатаСозданияРисунка");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_авторскиеПрава", FieldType="Text")]
		public string АвторскиеПрава {
			get {
				return this._авторскиеПрава;
			}
			set {
				if ((value != this._авторскиеПрава)) {
					this.OnPropertyChanging("АвторскиеПрава", this._авторскиеПрава);
					this._авторскиеПрава = value;
					this.OnPropertyChanged("АвторскиеПрава");
				}
			}
		}
	}
	
	/// <summary>
	/// Отправка аудиофайла.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Аудио", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B006973ACD696DC4858A76371B2FB2F439A")]
	public partial class Аудио : МультимедийныйАктив {
		
		private string _автор;
		
		private string _заметки;
		
		private string _uRLАдресИзображенияДляПросмотра;
		
		private string _авторскиеПрава;
		
		private System.Nullable<int> _длительностьС;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Аудио() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Первоначальный автор
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_автор", FieldType="Text")]
		public string Автор {
			get {
				return this._автор;
			}
			set {
				if ((value != this._автор)) {
					this.OnPropertyChanging("Автор", this._автор);
					this._автор = value;
					this.OnPropertyChanged("Автор");
				}
			}
		}
		
		/// <summary>
		/// Сводные сведения об этом ресурсе
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_uRLАдресИзображенияДляПросмотра", FieldType="Url")]
		public string URLАдресИзображенияДляПросмотра {
			get {
				return this._uRLАдресИзображенияДляПросмотра;
			}
			set {
				if ((value != this._uRLАдресИзображенияДляПросмотра)) {
					this.OnPropertyChanging("URLАдресИзображенияДляПросмотра", this._uRLАдресИзображенияДляПросмотра);
					this._uRLАдресИзображенияДляПросмотра = value;
					this.OnPropertyChanged("URLАдресИзображенияДляПросмотра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_авторскиеПрава", FieldType="Text")]
		public string АвторскиеПрава {
			get {
				return this._авторскиеПрава;
			}
			set {
				if ((value != this._авторскиеПрава)) {
					this.OnPropertyChanging("АвторскиеПрава", this._авторскиеПрава);
					this._авторскиеПрава = value;
					this.OnPropertyChanged("АвторскиеПрава");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_длительностьС", FieldType="Integer")]
		public System.Nullable<int> ДлительностьС {
			get {
				return this._длительностьС;
			}
			set {
				if ((value != this._длительностьС)) {
					this.OnPropertyChanging("ДлительностьС", this._длительностьС);
					this._длительностьС = value;
					this.OnPropertyChanged("ДлительностьС");
				}
			}
		}
	}
	
	/// <summary>
	/// Отправка видеофайла.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Воспроизведение видео", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00291D173ECE694D56B19D111489C4369D")]
	public partial class ВоспроизведениеВидео : МультимедийныйАктив {
		
		private string _автор;
		
		private string _заметки;
		
		private string _uRLАдресИзображенияДляПросмотра;
		
		private string _авторскиеПрава;
		
		private System.Nullable<int> _длительностьС;
		
		private System.Nullable<int> _ширинаКадра;
		
		private System.Nullable<int> _высотаКадра;
		
		private string _подпись;
		
		private System.Nullable<int> _скоростьПотока;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ВоспроизведениеВидео() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Первоначальный автор
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_автор", FieldType="Text")]
		public string Автор {
			get {
				return this._автор;
			}
			set {
				if ((value != this._автор)) {
					this.OnPropertyChanging("Автор", this._автор);
					this._автор = value;
					this.OnPropertyChanged("Автор");
				}
			}
		}
		
		/// <summary>
		/// Сводные сведения об этом ресурсе
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_заметки", FieldType="Note")]
		public string Заметки {
			get {
				return this._заметки;
			}
			set {
				if ((value != this._заметки)) {
					this.OnPropertyChanging("Заметки", this._заметки);
					this._заметки = value;
					this.OnPropertyChanged("Заметки");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_uRLАдресИзображенияДляПросмотра", FieldType="Url")]
		public string URLАдресИзображенияДляПросмотра {
			get {
				return this._uRLАдресИзображенияДляПросмотра;
			}
			set {
				if ((value != this._uRLАдресИзображенияДляПросмотра)) {
					this.OnPropertyChanging("URLАдресИзображенияДляПросмотра", this._uRLАдресИзображенияДляПросмотра);
					this._uRLАдресИзображенияДляПросмотра = value;
					this.OnPropertyChanged("URLАдресИзображенияДляПросмотра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_авторскиеПрава", FieldType="Text")]
		public string АвторскиеПрава {
			get {
				return this._авторскиеПрава;
			}
			set {
				if ((value != this._авторскиеПрава)) {
					this.OnPropertyChanging("АвторскиеПрава", this._авторскиеПрава);
					this._авторскиеПрава = value;
					this.OnPropertyChanged("АвторскиеПрава");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_длительностьС", FieldType="Integer")]
		public System.Nullable<int> ДлительностьС {
			get {
				return this._длительностьС;
			}
			set {
				if ((value != this._длительностьС)) {
					this.OnPropertyChanging("ДлительностьС", this._длительностьС);
					this._длительностьС = value;
					this.OnPropertyChanged("ДлительностьС");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoWidthInPixels", Storage="_ширинаКадра", FieldType="Integer")]
		public System.Nullable<int> ШиринаКадра {
			get {
				return this._ширинаКадра;
			}
			set {
				if ((value != this._ширинаКадра)) {
					this.OnPropertyChanging("ШиринаКадра", this._ширинаКадра);
					this._ширинаКадра = value;
					this.OnPropertyChanged("ШиринаКадра");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoHeightInPixels", Storage="_высотаКадра", FieldType="Integer")]
		public System.Nullable<int> ВысотаКадра {
			get {
				return this._высотаКадра;
			}
			set {
				if ((value != this._высотаКадра)) {
					this.OnPropertyChanging("ВысотаКадра", this._высотаКадра);
					this._высотаКадра = value;
					this.OnPropertyChanged("ВысотаКадра");
				}
			}
		}
		
		/// <summary>
		/// Текст, отображаемый в видеопроигрывателе для данного представления
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoRenditionLabel", Storage="_подпись", FieldType="Text")]
		public string Подпись {
			get {
				return this._подпись;
			}
			set {
				if ((value != this._подпись)) {
					this.OnPropertyChanging("Подпись", this._подпись);
					this._подпись = value;
					this.OnPropertyChanged("Подпись");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoRenditionBitRate", Storage="_скоростьПотока", FieldType="Integer")]
		public System.Nullable<int> СкоростьПотока {
			get {
				return this._скоростьПотока;
			}
			set {
				if ((value != this._скоростьПотока)) {
					this.OnPropertyChanging("СкоростьПотока", this._скоростьПотока);
					this._скоростьПотока = value;
					this.OnPropertyChanged("СкоростьПотока");
				}
			}
		}
	}
	
	/// <summary>
	/// "Страница" - это системный шаблон типа контента, созданный средством "Ресурсы публикации". Шаблоны столбцов из шаблона "Страница" добавляются во все библиотеки страниц, создаваемые средством публикации.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Страница", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF39")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(СтраницаСтатьи))]
	public partial class Страница : СистемнаяСтраница {
		
		private string _заголовокБраузера;
		
		private string _mETAСАтрибутомDescription;
		
		private string _mETAСАтрибутомKeywords;
		
		private System.Nullable<bool> _скрытьОтПоисковыхСистемВИнтернете;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Страница() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Заголовок обозревателя — это столбец сайта, созданный средством публикации. Он отображается вверху окна браузера и может отображаться в результатах поиска в Интернете.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoBrowserTitle", Storage="_заголовокБраузера", FieldType="Text")]
		public string ЗаголовокБраузера {
			get {
				return this._заголовокБраузера;
			}
			set {
				if ((value != this._заголовокБраузера)) {
					this.OnPropertyChanging("ЗаголовокБраузера", this._заголовокБраузера);
					this._заголовокБраузера = value;
					this.OnPropertyChanged("ЗаголовокБраузера");
				}
			}
		}
		
		/// <summary>
		/// META с атрибутом Description — это столбец сайта, созданный средством публикации. Поисковые системы в Интернете могут отображать это описание на страницах результатов поиска.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoMetaDescription", Storage="_mETAСАтрибутомDescription", FieldType="Text")]
		public string METAСАтрибутомDescription {
			get {
				return this._mETAСАтрибутомDescription;
			}
			set {
				if ((value != this._mETAСАтрибутомDescription)) {
					this.OnPropertyChanging("METAСАтрибутомDescription", this._mETAСАтрибутомDescription);
					this._mETAСАтрибутомDescription = value;
					this.OnPropertyChanged("METAСАтрибутомDescription");
				}
			}
		}
		
		/// <summary>
		/// META с атрибутом Keywords
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SeoKeywords", Storage="_mETAСАтрибутомKeywords", FieldType="Text")]
		public string METAСАтрибутомKeywords {
			get {
				return this._mETAСАтрибутомKeywords;
			}
			set {
				if ((value != this._mETAСАтрибутомKeywords)) {
					this.OnPropertyChanging("METAСАтрибутомKeywords", this._mETAСАтрибутомKeywords);
					this._mETAСАтрибутомKeywords = value;
					this.OnPropertyChanged("METAСАтрибутомKeywords");
				}
			}
		}
		
		/// <summary>
		/// "Скрыть от поисковых систем в Интернете" — это столбец сайта, созданный средством публикации. Он показывает программам-обходчикам поисковых систем, что данная конкретная страница не должна индексироваться.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RobotsNoIndex", Storage="_скрытьОтПоисковыхСистемВИнтернете", FieldType="Boolean")]
		public System.Nullable<bool> СкрытьОтПоисковыхСистемВИнтернете {
			get {
				return this._скрытьОтПоисковыхСистемВИнтернете;
			}
			set {
				if ((value != this._скрытьОтПоисковыхСистемВИнтернете)) {
					this.OnPropertyChanging("СкрытьОтПоисковыхСистемВИнтернете", this._скрытьОтПоисковыхСистемВИнтернете);
					this._скрытьОтПоисковыхСистемВИнтернете = value;
					this.OnPropertyChanged("СкрытьОтПоисковыхСистемВИнтернете");
				}
			}
		}
	}
	
	/// <summary>
	/// "Страница статьи" - это системный шаблон типа контента, созданный средством "Ресурсы публикации". Он связан с макетами страниц, используемыми по умолчанию при создании страниц статей на сайтах с включенным средством публикации.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Страница статьи", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390024245" +
		"7EFB8B24247815D688C526CD44D")]
	public partial class СтраницаСтатьи : Страница {
		
		private string _автор;
		
		private System.Nullable<System.DateTime> _датаСтатьи;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public СтраницаСтатьи() {
			this.OnCreated();
		}
		
		/// <summary>
		/// "Автор" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания автора страницы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleByLine", Storage="_автор", FieldType="Text")]
		public string Автор {
			get {
				return this._автор;
			}
			set {
				if ((value != this._автор)) {
					this.OnPropertyChanging("Автор", this._автор);
					this._автор = value;
					this.OnPropertyChanged("Автор");
				}
			}
		}
		
		/// <summary>
		/// "Дата статьи" — это столбец сайта, созданный средством публикации. Он используется в типе контента "Страница статьи" для указания даты страницы.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleStartDate", Storage="_датаСтатьи", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ДатаСтатьи {
			get {
				return this._датаСтатьи;
			}
			set {
				if ((value != this._датаСтатьи)) {
					this.OnPropertyChanging("ДатаСтатьи", this._датаСтатьи);
					this._датаСтатьи = value;
					this.OnPropertyChanged("ДатаСтатьи");
				}
			}
		}
	}
	
	public enum Важность : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Высокая")]
		_1Высокая = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Обычная")]
		_2Обычная = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Низкая")]
		_3Низкая = 8,
	}
	
	public enum СостояниеЗадачи : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Не начата")]
		НеНачата = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="В процессе выполнения")]
		ВПроцессеВыполнения = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Завершена")]
		Завершена = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отложенные")]
		Отложенные = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ожидание другого пользователя")]
		ОжиданиеДругогоПользователя = 32,
	}
	
	public enum СостояниеПеревода : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="В очереди")]
		ВОчереди = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Переведен")]
		Переведен = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Выполняется")]
		Выполняется = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="С участием человека")]
		СУчастиемЧеловека = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Регулирование")]
		Регулирование = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ошибка")]
		Ошибка = 64,
	}
	
	public enum СостояниеКонтроляПоручения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="На контроле")]
		НаКонтроле = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Снято с контроля")]
		СнятоСКонтроля = 4,
	}
	
	public enum ЦельUDC : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Только чтение")]
		ТолькоЧтение = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Только запись")]
		ТолькоЗапись = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Чтение и запись")]
		ЧтениеИЗапись = 8,
	}
	
	public enum СтатусПоручения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="На исполнении")]
		НаИсполнении = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Срок истек")]
		СрокИстек = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Исполнено")]
		Исполнено = 8,
	}
	
	public enum ТипСписка : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Планирование и резервирование")]
		ПланированиеИРезервирование = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Записка о телефонном звонке")]
		ЗапискаОТелефонномЗвонке = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Циркуляр")]
		Циркуляр = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Другие")]
		Другие = 16,
	}
	
	public enum ТипПеревода : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Машинный перевод")]
		МашинныйПеревод = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Перевод, выполненный человеком")]
		ПереводВыполненныйЧеловеком = 4,
	}
	
	public sealed class Состояние {
		
		public const string НеНачат = "Не начат";
		
		public const string Черновик = "Черновик";
		
		public const string Проверен = "Проверен";
		
		public const string ВнесенВПлан = "Внесен в план";
		
		public const string Опубликовано = "Опубликовано";
		
		public const string Окончательный = "Окончательный";
		
		public const string Просрочен = "Просрочен";
	}
	
	[System.FlagsAttribute()]
	public enum СовместимыеВерсииИП : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 4,
	}
	
	public enum ДлительностьОтпуска : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Null")]
		Null = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Весь день")]
		ВесьДень = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="AM выкл.")]
		AMВыкл = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="PM выкл.")]
		PMВыкл = 16,
	}
	
	public enum Категория : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Категория1")]
		_1Категория1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Категория2")]
		_2Категория2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Категория3")]
		_3Категория3 = 8,
	}
	
	public enum СостояниеВопроса : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Открыт")]
		Открыт = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Решение принято")]
		РешениеПринято = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Закрыт")]
		Закрыт = 8,
	}
	
	public enum Состояние0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ожидает утверждения")]
		ОжидаетУтверждения = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Активен")]
		Активен = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Неактивен")]
		Неактивен = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Заблокирован")]
		Заблокирован = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ушел")]
		Ушел = 32,
	}
	
	public enum КонечнаяВебЧасть : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="XsltListViewWebPart")]
		XsltListViewWebPart = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="DataFormWebPart")]
		DataFormWebPart = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Прочее")]
		Прочее = 8,
	}
	
	public enum ЦелевойТипЭлементаУправления : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Форма")]
		Форма = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Представление")]
		Представление = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Поле")]
		Поле = 8,
	}
	
	public enum ТипОтпуска : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оплачиваемый отпуск")]
		ОплачиваемыйОтпуск = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Компенсационный выходной день")]
		КомпенсационныйВыходнойДень = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Прочее")]
		Прочее = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отпуск по случаю праздничного или траурного мероприятия")]
		ОтпускПоСлучаюПраздничногоИлиТраурногоМероприятия = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Декретный отпуск")]
		ДекретныйОтпуск = 64,
	}
	
	public enum УровеньШаблона : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Item")]
		Item = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Control")]
		Control = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Filter")]
		Filter = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Group")]
		Group = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Base")]
		Base = 32,
	}
	
	public enum Пол : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="мужской")]
		Мужской = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="женский")]
		Женский = 4,
	}
	
	public enum Состояние1 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Окончательное")]
		Окончательное = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ожидает утверждения")]
		ОжидаетУтверждения = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Предложение")]
		Предложение = 8,
	}
	
	public enum ТипПодключения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SharePointList")]
		SharePointList = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SharePointLibrary")]
		SharePointLibrary = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Database")]
		Database = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="XmlQuery")]
		XmlQuery = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="XmlSubmit")]
		XmlSubmit = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="WebService")]
		WebService = 64,
	}
	
	[System.FlagsAttribute()]
	public enum ЦелевойТипЭлементаУправленияПоиск : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SearchResults")]
		SearchResults = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SearchHoverPanel")]
		SearchHoverPanel = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Content Web Parts")]
		ContentWebParts = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Refinement")]
		Refinement = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SearchBox")]
		SearchBox = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Custom")]
		Custom = 64,
	}
	
	public enum КатегорияКонтента : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Нет")]
		Нет = 2,
	}
	
	public enum СостояниеОтчета : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Окончательный")]
		Окончательный = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Предварительный")]
		Предварительный = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="С начала периода")]
		СНачалаПериода = 8,
	}
	
	public enum Ответ : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Принято")]
		Принято = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Под вопросом")]
		ПодВопросом = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отклонено")]
		Отклонено = 16,
	}
	
	public enum ТипДней : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Календарные")]
		Календарные = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Рабочие")]
		Рабочие = 4,
	}
	
	public enum Расписание : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ежечасно")]
		Ежечасно = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ежедневно")]
		Ежедневно = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="еженедельно")]
		Еженедельно = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ежемесячно")]
		Ежемесячно = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Только по запросу")]
		ТолькоПоЗапросу = 32,
	}
	
	public enum КатегорияОтчета : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Категория 1")]
		Категория1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Категория 2")]
		Категория2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Категория 3")]
		Категория3 = 8,
	}
	
	[System.FlagsAttribute()]
	public enum СовместимыеТипыДанныхДляПоиска : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Text")]
		Text = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Integer")]
		Integer = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Decimal")]
		Decimal = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="DateTime")]
		DateTime = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="YesNo")]
		YesNo = 32,
	}
	
	public enum Автономно : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Переопределить")]
		Переопределить = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Автономно")]
		Автономно0 = 4,
	}
	
	public enum Статус : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Планируемое")]
		Планируемое = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Завершенное")]
		Завершенное = 4,
	}
	
	public enum ВозможностьКэширования : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="NoCache")]
		NoCache = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Private")]
		Private = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Server")]
		Server = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ServerAndNoCache")]
		ServerAndNoCache = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Public")]
		Public = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ServerAndPrivate")]
		ServerAndPrivate = 64,
	}
	
	public enum Серьезность : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1 - Ошибка")]
		_1Ошибка = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2 - Предупреждение")]
		_2Предупреждение = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3 - Сведения")]
		_3Сведения = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4 - Успешное завершение")]
		_4УспешноеЗавершение = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="0 - Сбой выполнения правила")]
		_0СбойВыполненияПравила = 32,
	}
	
	public enum Область : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Все серверы")]
		ВсеСерверы = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Любой сервер")]
		ЛюбойСервер = 4,
	}
	
	public sealed class Категория0 {
	}
	
	public enum СостояниеПеревода0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Требуется перевод")]
		ТребуетсяПеревод = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Перевод выполняется")]
		ПереводВыполняется = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Переведено")]
		Переведено = 8,
	}
	
	public sealed class Язык {
		
		public const string АрабскийСаудовскаяАравия = "арабский (Саудовская Аравия)";
		
		public const string БолгарскийБолгария = "болгарский (Болгария)";
		
		public const string КитайскийГонконг = "китайский (Гонконг)";
		
		public const string КитайскийКНР = "китайский (КНР)";
		
		public const string КитайскийТайвань = "китайский (Тайвань)";
		
		public const string ХорватскийХорватия = "хорватский (Хорватия)";
		
		public const string ЧешскийЧехия = "чешский (Чехия)";
		
		public const string ДатскийДания = "датский (Дания)";
		
		public const string НидерландскийНидерланды = "нидерландский (Нидерланды)";
		
		public const string Английский = "Английский";
		
		public const string ЭстонскийЭстония = "эстонский (Эстония)";
		
		public const string ФинскийФинляндия = "финский (Финляндия)";
		
		public const string ФранцузскийФранция = "французский (Франция)";
		
		public const string НемецкийГермания = "немецкий (Германия)";
		
		public const string ГреческийГреция = "греческий (Греция)";
		
		public const string ИвритИзраиль = "иврит (Израиль)";
		
		public const string ХиндиИндия = "хинди (Индия)";
		
		public const string ВенгерскийВенгрия = "венгерский (Венгрия)";
		
		public const string ИндонезийскийИндонезия = "индонезийский (Индонезия)";
		
		public const string ИтальянскийИталия = "итальянский (Италия)";
		
		public const string ЯпонскийЯпония = "японский (Япония)";
		
		public const string КорейскийКорея = "корейский (Корея)";
		
		public const string ЛатышскийЛатвия = "латышский (Латвия)";
		
		public const string ЛитовскийЛитва = "литовский (Литва)";
		
		public const string МалайскийМалайзия = "малайский (Малайзия)";
		
		public const string НорвежскийБукмолНорвегия = "норвежский (букмол, Норвегия)";
		
		public const string ПольскийПольша = "польский (Польша)";
		
		public const string ПортугальскийБразилия = "португальский (Бразилия)";
		
		public const string ПортугальскийПортугалия = "португальский (Португалия)";
		
		public const string РумынскийРумыния = "румынский (Румыния)";
		
		public const string РусскийРоссия = "русский (Россия)";
		
		public const string СербскийЛатиницаСербия = "сербский (латиница, Сербия)";
		
		public const string СловацкийСловакия = "словацкий (Словакия)";
		
		public const string СловенскийСловения = "словенский (Словения)";
		
		public const string ИспанскийИспания = "испанский (Испания)";
		
		public const string ШведскийШвеция = "шведский (Швеция)";
		
		public const string ТайскийТаиланд = "тайский (Таиланд)";
		
		public const string ТурецкийТурция = "турецкий (Турция)";
		
		public const string УкраинскийУкраина = "украинский (Украина)";
		
		public const string УрдуПакистан = "урду (Пакистан)";
		
		public const string ВьетнамскийВьетнам = "вьетнамский (Вьетнам)";
	}
	
	public sealed class Категория1 {
		
		public const string Конфигурация = "Конфигурация";
		
		public const string Безопасность = "Безопасность";
		
		public const string Производительность = "Производительность";
		
		public const string Доступность = "Доступность";
	}
	
	public enum ХарактеристикаОтклоненияОтНорматива : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Чем больше тем ЛУЧШЕ")]
		ЧемБольшеТемЛУЧШЕ = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Чем больше тем ХУЖЕ")]
		ЧемБольшеТемХУЖЕ = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Без оценки")]
		БезОценки = 8,
	}
	
	public enum ЧастьРечи : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Существительное")]
		Существительное = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Фамилия")]
		Фамилия = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Имя")]
		Имя = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Полное имя")]
		ПолноеИмя = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Название места")]
		НазваниеМеста = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сокращение для слова")]
		СокращениеДляСлова = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Смайлик")]
		Смайлик = 128,
	}
	
	public enum СостояниеРассмотрения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не утвержден")]
		НеУтвержден = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="утвержден")]
		Утвержден = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="в разработке")]
		ВРазработке = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не разрабатывается")]
		НеРазрабатывается = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="на рассмотрении ГС")]
		НаРассмотренииГС = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="на согласовании в ПМО")]
		НаСогласованииВПМО = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="корректировка замечаний ЦИОГВ МО")]
		КорректировкаЗамечанийЦИОГВМО = 128,
	}
	
	public enum РезультатПубличныйСлушаний : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Состоявшиеся")]
		Состоявшиеся = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Не состоявшиеся")]
		НеСостоявшиеся = 4,
	}
	
	public enum СведенияОбУтверждении : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Утвержден")]
		Утвержден = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Не утвержден")]
		НеУтвержден = 4,
	}
	
	public enum СостояниеРассмотрения0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не утвержден")]
		НеУтвержден = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="на согласовании в ПМО")]
		НаСогласованииВПМО = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="корректировка по замечаниям ЦИОГВ")]
		КорректировкаПоЗамечаниямЦИОГВ = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не разрабатывается")]
		НеРазрабатывается = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="на рассмотрении ГС")]
		НаРассмотренииГС = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="утвержден")]
		Утвержден = 64,
	}
	
	public enum УровеньСогласования : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="местный")]
		Местный = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="региональный")]
		Региональный = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="федеральный")]
		Федеральный = 8,
	}
	
	public enum РезультатСогласования : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="на согласовании")]
		НаСогласовании = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="согласовано")]
		Согласовано = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не согласовано")]
		НеСогласовано = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="срок истек")]
		СрокИстек = 16,
	}
	
	public enum РезультатСогласования0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="согласовано")]
		Согласовано = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="не согласовано")]
		НеСогласовано = 4,
	}
	
	public enum ТипРайона : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="муниципальный район")]
		МуниципальныйРайон = 2,
	}
	
	public enum ТипОбъекта : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Автозаправочная станция")]
		АвтозаправочнаяСтанция = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Автосалон")]
		Автосалон = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Административные объекты")]
		АдминистративныеОбъекты = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Гаражи и автостоянки")]
		ГаражиИАвтостоянки = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Гостиницы")]
		Гостиницы = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Дворец бракосочетания")]
		ДворецБракосочетания = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="ДОУ")]
		ДОУ = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Другое")]
		Другое = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилые дома")]
		ЖилыеДома = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Здравоохранение")]
		Здравоохранение = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Земельный участок")]
		ЗемельныйУчасток = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Индивидуальное жилищное строительство")]
		ИндивидуальноеЖилищноеСтроительство = 4096,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Инженерная инфраструктура")]
		ИнженернаяИнфраструктура = 8192,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Культура и просвещение")]
		КультураИПросвещение = 16384,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Метрополитен")]
		Метрополитен = 32768,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Многофункциональный комплекс")]
		МногофункциональныйКомплекс = 65536,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Образование и наука")]
		ОбразованиеИНаука = 131072,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Пожарное депо")]
		ПожарноеДепо = 262144,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производство")]
		Производство = 524288,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Развлечение и отдых")]
		РазвлечениеИОтдых = 1048576,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Религия")]
		Религия = 2097152,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Торговля и услуги")]
		ТорговляИУслуги = 4194304,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспортно-пересадочные узлы")]
		ТранспортноПересадочныеУзлы = 8388608,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Улично-дорожная сеть")]
		УличноДорожнаяСеть = 16777216,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Физкультура и спорт")]
		ФизкультураИСпорт = 33554432,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Школы")]
		Школы = 67108864,
	}
	
	public enum ВидРазрИспользования : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная")]
		Сельскохозяйственная = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Для использования по назначению сельскохозяйственных объек" +
			"тов и угодий")]
		СельскохозяйственнаяДляИспользованияПоНазначениюСельскохозяйственныхОбъектовИУгодий = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Зерноводство")]
		СельскохозяйственнаяЗерноводство = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Животноводство")]
		СельскохозяйственнаяЖивотноводство = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Сенокошение и выпас скота")]
		СельскохозяйственнаяСенокошениеИВыпасСкота = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Пчеловодство")]
		СельскохозяйственнаяПчеловодство = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Огородничество")]
		СельскохозяйственнаяОгородничество = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Рыбоводство")]
		СельскохозяйственнаяРыбоводство = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Садоводство и виноградарство")]
		СельскохозяйственнаяСадоводствоИВиноградарство = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Содержание питомников")]
		СельскохозяйственнаяСодержаниеПитомников = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сельскохозяйственная - Обслуживание  сельскохозяйственного производства")]
		СельскохозяйственнаяОбслуживаниеСельскохозяйственногоПроизводства = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка")]
		ЖилаяЗастройка = 4096,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - для индивидуального жилищного строительства")]
		ЖилаяЗастройкаДляИндивидуальногоЖилищногоСтроительства = 8192,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Малоэтажная жилая застройка")]
		ЖилаяЗастройкаМалоэтажнаяЖилаяЗастройка = 16384,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Личное подсобное хозяйство")]
		ЖилаяЗастройкаЛичноеПодсобноеХозяйство = 32768,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Малоэтажная  совмещенная жилая застройка")]
		ЖилаяЗастройкаМалоэтажнаяСовмещеннаяЖилаяЗастройка = 65536,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Передвижные жилые дома")]
		ЖилаяЗастройкаПередвижныеЖилыеДома = 131072,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Среднеэтажная жилая застройка")]
		ЖилаяЗастройкаСреднеэтажнаяЖилаяЗастройка = 262144,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Многоэтажная жилая застройка")]
		ЖилаяЗастройкаМногоэтажнаяЖилаяЗастройка = 524288,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Жилая застройка - Обслуживание жилой застройки")]
		ЖилаяЗастройкаОбслуживаниеЖилойЗастройки = 1048576,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная")]
		Общественная = 2097152,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Коммунальное облуживание")]
		ОбщественнаяКоммунальноеОблуживание = 4194304,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Бытовое обслуживание")]
		ОбщественнаяБытовоеОбслуживание = 8388608,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Социальное обслуживание")]
		ОбщественнаяСоциальноеОбслуживание = 16777216,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Здравоохранение")]
		ОбщественнаяЗдравоохранение = 33554432,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Образование и просвещение")]
		ОбщественнаяОбразованиеИПросвещение = 67108864,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Культуры")]
		ОбщественнаяКультуры = 134217728,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Религиозного назначения")]
		ОбщественнаяРелигиозногоНазначения = 268435456,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Общественного управления")]
		ОбщественнаяОбщественногоУправления = 536870912,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Общественная   - Научная деятельность")]
		ОбщественнаяНаучнаяДеятельность = 1073741824,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая")]
		Деловая = -2147483648,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Деловое управление")]
		ДеловаяДеловоеУправление = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Торговые центры")]
		ДеловаяТорговыеЦентры = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Рынки")]
		ДеловаяРынки = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Магазины")]
		ДеловаяМагазины = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Банковская и страховая деятельность")]
		ДеловаяБанковскаяИСтраховаяДеятельность = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Общественное питание")]
		ДеловаяОбщественноеПитание = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Гостиничное обслуживание")]
		ДеловаяГостиничноеОбслуживание = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Развлечения")]
		ДеловаяРазвлечения = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Деловая - Обслуживание автотранспорта")]
		ДеловаяОбслуживаниеАвтотранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отдыха")]
		Отдыха = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отдыха - Спорта")]
		ОтдыхаСпорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отдыха - Прогулок")]
		ОтдыхаПрогулок = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отдыха - Природно-познавательного туризма")]
		ОтдыхаПриродноПознавательногоТуризма = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отдыха - Охоты и рыбалки")]
		ОтдыхаОхотыИРыбалки = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная")]
		Производственная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Недропользования")]
		ПроизводственнаяНедропользования = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Тяжелой промышленности")]
		ПроизводственнаяТяжелойПромышленности = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Легкой и пищевой промышленности")]
		ПроизводственнаяЛегкойИПищевойПромышленности = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Нефтехимической промышленности")]
		ПроизводственнаяНефтехимическойПромышленности = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Строительной промышленности")]
		ПроизводственнаяСтроительнойПромышленности = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Энергетики")]
		ПроизводственнаяЭнергетики = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Связи")]
		ПроизводственнаяСвязи = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Складов")]
		ПроизводственнаяСкладов = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Производственная  - Обеспечение космической деятельности")]
		ПроизводственнаяОбеспечениеКосмическойДеятельности = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт")]
		Транспорт = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт - Железнодорожного транспорта")]
		ТранспортЖелезнодорожногоТранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт - Автомобильного транспорта")]
		ТранспортАвтомобильногоТранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт - Водного транспорта")]
		ТранспортВодногоТранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт - Воздушного транспорта")]
		ТранспортВоздушногоТранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Транспорт - Трубопроводного транспорта")]
		ТранспортТрубопроводногоТранспорта = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность")]
		ОборонаИБезопасность = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Размещения воинских частей")]
		ОборонаИБезопасностьРазмещенияВоинскихЧастей = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Подготовки вооружения")]
		ОборонаИБезопасностьПодготовкиВооружения = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Охраны Государственной границы")]
		ОборонаИБезопасностьОхраныГосударственнойГраницы = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Объектов закрытых административно – территориальных обра" +
			"зований")]
		ОборонаИБезопасностьОбъектовЗакрытыхАдминистративноТерриториальныхОбразований = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Внутреннего правопорядка")]
		ОборонаИБезопасностьВнутреннегоПравопорядка = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Оборона и безопасность - Мест лишения свободы")]
		ОборонаИБезопасностьМестЛишенияСвободы = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Особо охраняемых территорий")]
		ОсобоОхраняемыхТерриторий = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Особо охраняемых территорий  - Заповедная")]
		ОсобоОхраняемыхТерриторийЗаповедная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Особо охраняемых территорий  - Природоохранная")]
		ОсобоОхраняемыхТерриторийПриродоохранная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Особо охраняемых территорий  - Курортная")]
		ОсобоОхраняемыхТерриторийКурортная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Особо охраняемых территорий  - Историческая")]
		ОсобоОхраняемыхТерриторийИсторическая = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная")]
		Лесная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная  - Заготовки древесины")]
		ЛеснаяЗаготовкиДревесины = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная  - Лесных плантаций")]
		ЛеснаяЛесныхПлантаций = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная  - Заготовки лесных ресурсов")]
		ЛеснаяЗаготовкиЛесныхРесурсов = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная  - Геологических изысканий")]
		ЛеснаяГеологическихИзысканий = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Лесная  - Резервных лесов")]
		ЛеснаяРезервныхЛесов = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Водная")]
		Водная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Водная  - Сточных вод")]
		ВоднаяСточныхВод = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Водная  - Водохранилищ")]
		ВоднаяВодохранилищ = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Водная  - Общего пользования")]
		ВоднаяОбщегоПользования = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Водная  - Прочие водные объекты")]
		ВоднаяПрочиеВодныеОбъекты = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Специальная")]
		Специальная = 0,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Запас")]
		Запас = 0,
	}
	
	public enum КатегорияЗУ : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли сельскохозяйственного назначения")]
		ЗемлиСельскохозяйственногоНазначения = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли населенных пунктов")]
		ЗемлиНаселенныхПунктов = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли промышленности, энергетики, транспорта, связи, радиовещания, телевидения, и" +
			"нформатики")]
		ЗемлиПромышленностиЭнергетикиТранспортаСвязиРадиовещанияТелевиденияИнформатики = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли для обеспечения космической деятельности")]
		ЗемлиДляОбеспеченияКосмическойДеятельности = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли обороны, безопасности и земли иного специального назначения")]
		ЗемлиОбороныБезопасностиИЗемлиИногоСпециальногоНазначения = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли особо охраняемых территорий и объектов")]
		ЗемлиОсобоОхраняемыхТерриторийИОбъектов = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли лесного фонда")]
		ЗемлиЛесногоФонда = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли водного фонда")]
		ЗемлиВодногоФонда = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="земли запаса")]
		ЗемлиЗапаса = 512,
	}
	
	public enum ИсточникФинансирования : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Региональный бюджет")]
		РегиональныйБюджет = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Федеральный бюджет")]
		ФедеральныйБюджет = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Внебюджетные источники")]
		ВнебюджетныеИсточники = 16,
	}
	
	public enum ВидСтроительства : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Новое строительство")]
		НовоеСтроительство = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Реконструкция")]
		Реконструкция = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Капитальный ремонт")]
		КапитальныйРемонт = 16,
	}
	
	public enum Статус0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Планируемый")]
		Планируемый = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="В строительстве")]
		ВСтроительстве = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Сдан в эксплуатацию")]
		СданВЭксплуатацию = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Строительство отменено")]
		СтроительствоОтменено = 32,
	}
	
	public enum ЦельПередаваемогоИмущества : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="нет")]
		Нет = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Ветхое и аварийное жилье")]
		ВетхоеИАварийноеЖилье = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Обманутые дольщики")]
		ОбманутыеДольщики = 8,
	}
	
	public enum ТипПоселения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="городское поселение")]
		ГородскоеПоселение = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="сельское поселение")]
		СельскоеПоселение = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="городской округ")]
		ГородскойОкруг = 8,
	}
	
	public sealed class МестоРегистрации {
		
		public const string НетЗначения = "нет значения";
		
		public const string ГМосква = "г. Москва";
		
		public const string МосковскаяОбласть = "Московская область";
	}
	
	public enum Статус1 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Проект повестки")]
		ПроектПовестки = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Повестка утверждена")]
		ПовесткаУтверждена = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Завершенное")]
		Завершенное = 8,
	}
	
	public enum РешениеПоОтчету : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Снять с контроля")]
		СнятьСКонтроля = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Перенести срок")]
		ПеренестиСрок = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Отправить на доработку")]
		ОтправитьНаДоработку = 8,
	}
	
	public enum ТипЗависимостиОтДругогоПоручения : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Исполнение после")]
		ИсполнениеПосле = 2,
	}
	
	public enum Статус2 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="На исполнении")]
		НаИсполнении = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Срок истек")]
		СрокИстек = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Исполнено")]
		Исполнено = 8,
	}
	
	public enum СостояниеКонтроля : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="На контроле")]
		НаКонтроле = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Снято с контроля")]
		СнятоСКонтроля = 4,
	}
	
	public enum ТипДней0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Календарные")]
		Календарные = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Рабочие")]
		Рабочие = 4,
	}
	
	public enum ТипОрганизации : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Центральные органы")]
		ЦентральныеОрганы = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Муниципальные образования")]
		МуниципальныеОбразования = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Инвестор")]
		Инвестор = 8,
	}
	
	public enum ПризнакУчастия : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Член ГрадСовета")]
		ЧленГрадСовета = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Член МВК")]
		ЧленМВК = 4,
	}
}
